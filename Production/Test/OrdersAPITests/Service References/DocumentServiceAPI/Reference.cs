//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrdersAPITests.DocumentServiceAPI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocumentInputParams", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    public partial class TabletDocumentInputParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarketIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarketID {
            get {
                return this.MarketIDField;
            }
            set {
                if ((this.MarketIDField.Equals(value) != true)) {
                    this.MarketIDField = value;
                    this.RaisePropertyChanged("MarketID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocumentMappingData", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    public partial class TabletDocumentMappingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> DocumentFieldLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> DocumentFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> DocumentMapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentType> DocumentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> DocumentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> DocumentFieldLocations {
            get {
                return this.DocumentFieldLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentFieldLocationsField, value) != true)) {
                    this.DocumentFieldLocationsField = value;
                    this.RaisePropertyChanged("DocumentFieldLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> DocumentFields {
            get {
                return this.DocumentFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentFieldsField, value) != true)) {
                    this.DocumentFieldsField = value;
                    this.RaisePropertyChanged("DocumentFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> DocumentMaps {
            get {
                return this.DocumentMapsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentMapsField, value) != true)) {
                    this.DocumentMapsField = value;
                    this.RaisePropertyChanged("DocumentMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentType> DocumentTypes {
            get {
                return this.DocumentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypesField, value) != true)) {
                    this.DocumentTypesField = value;
                    this.RaisePropertyChanged("DocumentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocumentFieldLocation", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    public partial class TabletDocumentFieldLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationX {
            get {
                return this.LocationXField;
            }
            set {
                if ((this.LocationXField.Equals(value) != true)) {
                    this.LocationXField = value;
                    this.RaisePropertyChanged("LocationX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationY {
            get {
                return this.LocationYField;
            }
            set {
                if ((this.LocationYField.Equals(value) != true)) {
                    this.LocationYField = value;
                    this.RaisePropertyChanged("LocationY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocumentField", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    public partial class TabletDocumentField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FieldTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Prompt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Prompt2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FieldTypeID {
            get {
                return this.FieldTypeIDField;
            }
            set {
                if ((this.FieldTypeIDField.Equals(value) != true)) {
                    this.FieldTypeIDField = value;
                    this.RaisePropertyChanged("FieldTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prompt1 {
            get {
                return this.Prompt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Prompt1Field, value) != true)) {
                    this.Prompt1Field = value;
                    this.RaisePropertyChanged("Prompt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prompt2 {
            get {
                return this.Prompt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Prompt2Field, value) != true)) {
                    this.Prompt2Field = value;
                    this.RaisePropertyChanged("Prompt2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocumentMap", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    public partial class TabletDocumentMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LPBrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LPMarketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MarketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TemplateTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountTypeID {
            get {
                return this.AccountTypeIDField;
            }
            set {
                if ((this.AccountTypeIDField.Equals(value) != true)) {
                    this.AccountTypeIDField = value;
                    this.RaisePropertyChanged("AccountTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentMapID {
            get {
                return this.DocumentMapIDField;
            }
            set {
                if ((this.DocumentMapIDField.Equals(value) != true)) {
                    this.DocumentMapIDField = value;
                    this.RaisePropertyChanged("DocumentMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LPBrandID {
            get {
                return this.LPBrandIDField;
            }
            set {
                if ((this.LPBrandIDField.Equals(value) != true)) {
                    this.LPBrandIDField = value;
                    this.RaisePropertyChanged("LPBrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LPMarketID {
            get {
                return this.LPMarketIDField;
            }
            set {
                if ((this.LPMarketIDField.Equals(value) != true)) {
                    this.LPMarketIDField = value;
                    this.RaisePropertyChanged("LPMarketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MarketID {
            get {
                return this.MarketIDField;
            }
            set {
                if ((this.MarketIDField.Equals(value) != true)) {
                    this.MarketIDField = value;
                    this.RaisePropertyChanged("MarketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TemplateTypeID {
            get {
                return this.TemplateTypeIDField;
            }
            set {
                if ((this.TemplateTypeIDField.Equals(value) != true)) {
                    this.TemplateTypeIDField = value;
                    this.RaisePropertyChanged("TemplateTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocumentType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    public partial class TabletDocumentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxRecords {
            get {
                return this.MaxRecordsField;
            }
            set {
                if ((this.MaxRecordsField.Equals(value) != true)) {
                    this.MaxRecordsField = value;
                    this.RaisePropertyChanged("MaxRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocument", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AndroidPackage))]
    public partial class TabletDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocOrientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocOrientation {
            get {
                return this.DocOrientationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocOrientationField, value) != true)) {
                    this.DocOrientationField = value;
                    this.RaisePropertyChanged("DocOrientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentVersion {
            get {
                return this.DocumentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentVersionField, value) != true)) {
                    this.DocumentVersionField = value;
                    this.RaisePropertyChanged("DocumentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AndroidPackage", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "OnlineDataSynchronization")]
    [System.SerializableAttribute()]
    public partial class AndroidPackage : OrdersAPITests.DocumentServiceAPI.TabletDocument {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSResult", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.WSDocumentResult))]
    public partial class WSResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasErrors {
            get {
                return this.HasErrorsField;
            }
            set {
                if ((this.HasErrorsField.Equals(value) != true)) {
                    this.HasErrorsField = value;
                    this.RaisePropertyChanged("HasErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentResult", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSDocumentResult : OrdersAPITests.DocumentServiceAPI.WSResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DocumentGuidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DocumentGuid {
            get {
                return this.DocumentGuidField;
            }
            set {
                if ((this.DocumentGuidField.Equals(value) != true)) {
                    this.DocumentGuidField = value;
                    this.RaisePropertyChanged("DocumentGuid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSContractFileDetails", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities.Documents")]
    [System.SerializableAttribute()]
    public partial class WSContractFileDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractFile {
            get {
                return this.ContractFileField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractFileField, value) != true)) {
                    this.ContractFileField = value;
                    this.RaisePropertyChanged("ContractFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractNumberField, value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeId {
            get {
                return this.DocumentTypeIdField;
            }
            set {
                if ((this.DocumentTypeIdField.Equals(value) != true)) {
                    this.DocumentTypeIdField = value;
                    this.RaisePropertyChanged("DocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSContractDetails", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities")]
    [System.SerializableAttribute()]
    public partial class WSContractDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Contract ContractDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> CustomDetailsPerAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> CustomDetailsPerContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Customer CustomerDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Contract ContractDetails {
            get {
                return this.ContractDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractDetailsField, value) != true)) {
                    this.ContractDetailsField = value;
                    this.RaisePropertyChanged("ContractDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> CustomDetailsPerAccount {
            get {
                return this.CustomDetailsPerAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDetailsPerAccountField, value) != true)) {
                    this.CustomDetailsPerAccountField = value;
                    this.RaisePropertyChanged("CustomDetailsPerAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> CustomDetailsPerContract {
            get {
                return this.CustomDetailsPerContractField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDetailsPerContractField, value) != true)) {
                    this.CustomDetailsPerContractField = value;
                    this.RaisePropertyChanged("CustomDetailsPerContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Customer CustomerDetails {
            get {
                return this.CustomerDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDetailsField, value) != true)) {
                    this.CustomerDetailsField = value;
                    this.RaisePropertyChanged("CustomerDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contract", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Contract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountContract> AccountContractsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffinityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ClientSubmitApplicationKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.ContractDealType ContractDealTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.ContractTemplate ContractTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ContractTemplateVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.ContractType ContractTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DigitalSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.Document> DocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EstimatedAnnualUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> PromotionCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SalesChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SalesManagerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesRepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SignedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument1> TabletDocumentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountContract> AccountContracts {
            get {
                return this.AccountContractsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountContractsField, value) != true)) {
                    this.AccountContractsField = value;
                    this.RaisePropertyChanged("AccountContracts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffinityCode {
            get {
                return this.AffinityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AffinityCodeField, value) != true)) {
                    this.AffinityCodeField = value;
                    this.RaisePropertyChanged("AffinityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ClientSubmitApplicationKey {
            get {
                return this.ClientSubmitApplicationKeyField;
            }
            set {
                if ((this.ClientSubmitApplicationKeyField.Equals(value) != true)) {
                    this.ClientSubmitApplicationKeyField = value;
                    this.RaisePropertyChanged("ClientSubmitApplicationKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.ContractDealType ContractDealType {
            get {
                return this.ContractDealTypeField;
            }
            set {
                if ((this.ContractDealTypeField.Equals(value) != true)) {
                    this.ContractDealTypeField = value;
                    this.RaisePropertyChanged("ContractDealType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.ContractTemplate ContractTemplate {
            get {
                return this.ContractTemplateField;
            }
            set {
                if ((this.ContractTemplateField.Equals(value) != true)) {
                    this.ContractTemplateField = value;
                    this.RaisePropertyChanged("ContractTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ContractTemplateVersionId {
            get {
                return this.ContractTemplateVersionIdField;
            }
            set {
                if ((this.ContractTemplateVersionIdField.Equals(value) != true)) {
                    this.ContractTemplateVersionIdField = value;
                    this.RaisePropertyChanged("ContractTemplateVersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.ContractType ContractType {
            get {
                return this.ContractTypeField;
            }
            set {
                if ((this.ContractTypeField.Equals(value) != true)) {
                    this.ContractTypeField = value;
                    this.RaisePropertyChanged("ContractType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractVersion {
            get {
                return this.ContractVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractVersionField, value) != true)) {
                    this.ContractVersionField = value;
                    this.RaisePropertyChanged("ContractVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DigitalSignature {
            get {
                return this.DigitalSignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.DigitalSignatureField, value) != true)) {
                    this.DigitalSignatureField = value;
                    this.RaisePropertyChanged("DigitalSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.Document> Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EstimatedAnnualUsage {
            get {
                return this.EstimatedAnnualUsageField;
            }
            set {
                if ((this.EstimatedAnnualUsageField.Equals(value) != true)) {
                    this.EstimatedAnnualUsageField = value;
                    this.RaisePropertyChanged("EstimatedAnnualUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalNumber {
            get {
                return this.ExternalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalNumberField, value) != true)) {
                    this.ExternalNumberField = value;
                    this.RaisePropertyChanged("ExternalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> PromotionCodes {
            get {
                return this.PromotionCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.PromotionCodesField, value) != true)) {
                    this.PromotionCodesField = value;
                    this.RaisePropertyChanged("PromotionCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiptDate {
            get {
                return this.ReceiptDateField;
            }
            set {
                if ((this.ReceiptDateField.Equals(value) != true)) {
                    this.ReceiptDateField = value;
                    this.RaisePropertyChanged("ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SalesChannelId {
            get {
                return this.SalesChannelIdField;
            }
            set {
                if ((this.SalesChannelIdField.Equals(value) != true)) {
                    this.SalesChannelIdField = value;
                    this.RaisePropertyChanged("SalesChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SalesManagerId {
            get {
                return this.SalesManagerIdField;
            }
            set {
                if ((this.SalesManagerIdField.Equals(value) != true)) {
                    this.SalesManagerIdField = value;
                    this.RaisePropertyChanged("SalesManagerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesRep {
            get {
                return this.SalesRepField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepField, value) != true)) {
                    this.SalesRepField = value;
                    this.RaisePropertyChanged("SalesRep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SignedDate {
            get {
                return this.SignedDateField;
            }
            set {
                if ((this.SignedDateField.Equals(value) != true)) {
                    this.SignedDateField = value;
                    this.RaisePropertyChanged("SignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument1> TabletDocuments {
            get {
                return this.TabletDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.TabletDocumentsField, value) != true)) {
                    this.TabletDocumentsField = value;
                    this.RaisePropertyChanged("TabletDocuments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BusinessActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BusinessTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Contact ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Address CustomerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DunsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.CustomerPreference PreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnClearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BusinessActivityId {
            get {
                return this.BusinessActivityIdField;
            }
            set {
                if ((this.BusinessActivityIdField.Equals(value) != true)) {
                    this.BusinessActivityIdField = value;
                    this.RaisePropertyChanged("BusinessActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BusinessTypeId {
            get {
                return this.BusinessTypeIdField;
            }
            set {
                if ((this.BusinessTypeIdField.Equals(value) != true)) {
                    this.BusinessTypeIdField = value;
                    this.RaisePropertyChanged("BusinessTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Contact Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Address CustomerAddress {
            get {
                return this.CustomerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAddressField, value) != true)) {
                    this.CustomerAddressField = value;
                    this.RaisePropertyChanged("CustomerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dba {
            get {
                return this.DbaField;
            }
            set {
                if ((object.ReferenceEquals(this.DbaField, value) != true)) {
                    this.DbaField = value;
                    this.RaisePropertyChanged("Dba");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duns {
            get {
                return this.DunsField;
            }
            set {
                if ((object.ReferenceEquals(this.DunsField, value) != true)) {
                    this.DunsField = value;
                    this.RaisePropertyChanged("Duns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployerId {
            get {
                return this.EmployerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerIdField, value) != true)) {
                    this.EmployerIdField = value;
                    this.RaisePropertyChanged("EmployerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalNumber {
            get {
                return this.ExternalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalNumberField, value) != true)) {
                    this.ExternalNumberField = value;
                    this.RaisePropertyChanged("ExternalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.CustomerPreference Preferences {
            get {
                return this.PreferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferencesField, value) != true)) {
                    this.PreferencesField = value;
                    this.RaisePropertyChanged("Preferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SsnClear {
            get {
                return this.SsnClearField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnClearField, value) != true)) {
                    this.SsnClearField = value;
                    this.RaisePropertyChanged("SsnClear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxId {
            get {
                return this.TaxIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxIdField, value) != true)) {
                    this.TaxIdField = value;
                    this.RaisePropertyChanged("TaxId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountContract", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class AccountContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.AccountContractCommission AccountContractCommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountContractRate> AccountContractRatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.AccountStatus AccountStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestedStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SendEnrollmentDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.AccountContractCommission AccountContractCommission {
            get {
                return this.AccountContractCommissionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountContractCommissionField, value) != true)) {
                    this.AccountContractCommissionField = value;
                    this.RaisePropertyChanged("AccountContractCommission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountContractRate> AccountContractRates {
            get {
                return this.AccountContractRatesField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountContractRatesField, value) != true)) {
                    this.AccountContractRatesField = value;
                    this.RaisePropertyChanged("AccountContractRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.AccountStatus AccountStatus {
            get {
                return this.AccountStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountStatusField, value) != true)) {
                    this.AccountStatusField = value;
                    this.RaisePropertyChanged("AccountStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestedStartDate {
            get {
                return this.RequestedStartDateField;
            }
            set {
                if ((this.RequestedStartDateField.Equals(value) != true)) {
                    this.RequestedStartDateField = value;
                    this.RaisePropertyChanged("RequestedStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendEnrollmentDate {
            get {
                return this.SendEnrollmentDateField;
            }
            set {
                if ((this.SendEnrollmentDateField.Equals(value) != true)) {
                    this.SendEnrollmentDateField = value;
                    this.RaisePropertyChanged("SendEnrollmentDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractDealType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects.Enums")]
    public enum ContractDealType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Renewal = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Conversion = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Amendment = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractTemplate", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects.Enums")]
    public enum ContractTemplate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects.Enums")]
    public enum ContractType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VOICE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAPER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDI = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINE = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CommonBusiness.Docu" +
        "mentManager")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeId {
            get {
                return this.DocumentTypeIdField;
            }
            set {
                if ((this.DocumentTypeIdField.Equals(value) != true)) {
                    this.DocumentTypeIdField = value;
                    this.RaisePropertyChanged("DocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TabletDocument", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class TabletDocument1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SalesAgentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractNumberField, value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTypeName {
            get {
                return this.DocumentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeNameField, value) != true)) {
                    this.DocumentTypeNameField = value;
                    this.RaisePropertyChanged("DocumentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SalesAgentID {
            get {
                return this.SalesAgentIDField;
            }
            set {
                if ((this.SalesAgentIDField.Equals(value) != true)) {
                    this.SalesAgentIDField = value;
                    this.RaisePropertyChanged("SalesAgentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdLegacyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.AccountInfo AccountInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.AccountType AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountUsage> AccountUsagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Address BillingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Contact BillingContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.BillingType BillingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.AccountDetail DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IcapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoadProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LossCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> MeterNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MeterTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PorOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RetailMktIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.Address ServiceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceRateClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StratumVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.TaxStatus TaxStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TcapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UtilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountIdLegacy {
            get {
                return this.AccountIdLegacyField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdLegacyField, value) != true)) {
                    this.AccountIdLegacyField = value;
                    this.RaisePropertyChanged("AccountIdLegacy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.AccountInfo AccountInfo {
            get {
                return this.AccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountInfoField, value) != true)) {
                    this.AccountInfoField = value;
                    this.RaisePropertyChanged("AccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.AccountType AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountUsage> AccountUsages {
            get {
                return this.AccountUsagesField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountUsagesField, value) != true)) {
                    this.AccountUsagesField = value;
                    this.RaisePropertyChanged("AccountUsages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Address BillingAddress {
            get {
                return this.BillingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAddressField, value) != true)) {
                    this.BillingAddressField = value;
                    this.RaisePropertyChanged("BillingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Contact BillingContact {
            get {
                return this.BillingContactField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingContactField, value) != true)) {
                    this.BillingContactField = value;
                    this.RaisePropertyChanged("BillingContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingGroup {
            get {
                return this.BillingGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingGroupField, value) != true)) {
                    this.BillingGroupField = value;
                    this.RaisePropertyChanged("BillingGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.BillingType BillingType {
            get {
                return this.BillingTypeField;
            }
            set {
                if ((this.BillingTypeField.Equals(value) != true)) {
                    this.BillingTypeField = value;
                    this.RaisePropertyChanged("BillingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.AccountDetail Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icap {
            get {
                return this.IcapField;
            }
            set {
                if ((object.ReferenceEquals(this.IcapField, value) != true)) {
                    this.IcapField = value;
                    this.RaisePropertyChanged("Icap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoadProfile {
            get {
                return this.LoadProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadProfileField, value) != true)) {
                    this.LoadProfileField = value;
                    this.RaisePropertyChanged("LoadProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LossCode {
            get {
                return this.LossCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LossCodeField, value) != true)) {
                    this.LossCodeField = value;
                    this.RaisePropertyChanged("LossCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> MeterNumbers {
            get {
                return this.MeterNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterNumbersField, value) != true)) {
                    this.MeterNumbersField = value;
                    this.RaisePropertyChanged("MeterNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MeterTypeId {
            get {
                return this.MeterTypeIdField;
            }
            set {
                if ((this.MeterTypeIdField.Equals(value) != true)) {
                    this.MeterTypeIdField = value;
                    this.RaisePropertyChanged("MeterTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PorOption {
            get {
                return this.PorOptionField;
            }
            set {
                if ((this.PorOptionField.Equals(value) != true)) {
                    this.PorOptionField = value;
                    this.RaisePropertyChanged("PorOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RetailMktId {
            get {
                return this.RetailMktIdField;
            }
            set {
                if ((this.RetailMktIdField.Equals(value) != true)) {
                    this.RetailMktIdField = value;
                    this.RaisePropertyChanged("RetailMktId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.Address ServiceAddress {
            get {
                return this.ServiceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAddressField, value) != true)) {
                    this.ServiceAddressField = value;
                    this.RaisePropertyChanged("ServiceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceRateClass {
            get {
                return this.ServiceRateClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceRateClassField, value) != true)) {
                    this.ServiceRateClassField = value;
                    this.RaisePropertyChanged("ServiceRateClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StratumVariable {
            get {
                return this.StratumVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.StratumVariableField, value) != true)) {
                    this.StratumVariableField = value;
                    this.RaisePropertyChanged("StratumVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.TaxStatus TaxStatus {
            get {
                return this.TaxStatusField;
            }
            set {
                if ((this.TaxStatusField.Equals(value) != true)) {
                    this.TaxStatusField = value;
                    this.RaisePropertyChanged("TaxStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tcap {
            get {
                return this.TcapField;
            }
            set {
                if ((object.ReferenceEquals(this.TcapField, value) != true)) {
                    this.TcapField = value;
                    this.RaisePropertyChanged("Tcap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UtilityId {
            get {
                return this.UtilityIdField;
            }
            set {
                if ((this.UtilityIdField.Equals(value) != true)) {
                    this.UtilityIdField = value;
                    this.RaisePropertyChanged("UtilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountContractCommission", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class AccountContractCommission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EvergreenCommissionEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> EvergreenCommissionRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EvergreenOptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InitialPymtOptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResidualCommissionEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResidualOptionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EvergreenCommissionEnd {
            get {
                return this.EvergreenCommissionEndField;
            }
            set {
                if ((this.EvergreenCommissionEndField.Equals(value) != true)) {
                    this.EvergreenCommissionEndField = value;
                    this.RaisePropertyChanged("EvergreenCommissionEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> EvergreenCommissionRate {
            get {
                return this.EvergreenCommissionRateField;
            }
            set {
                if ((this.EvergreenCommissionRateField.Equals(value) != true)) {
                    this.EvergreenCommissionRateField = value;
                    this.RaisePropertyChanged("EvergreenCommissionRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EvergreenOptionId {
            get {
                return this.EvergreenOptionIdField;
            }
            set {
                if ((this.EvergreenOptionIdField.Equals(value) != true)) {
                    this.EvergreenOptionIdField = value;
                    this.RaisePropertyChanged("EvergreenOptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InitialPymtOptionId {
            get {
                return this.InitialPymtOptionIdField;
            }
            set {
                if ((this.InitialPymtOptionIdField.Equals(value) != true)) {
                    this.InitialPymtOptionIdField = value;
                    this.RaisePropertyChanged("InitialPymtOptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResidualCommissionEnd {
            get {
                return this.ResidualCommissionEndField;
            }
            set {
                if ((this.ResidualCommissionEndField.Equals(value) != true)) {
                    this.ResidualCommissionEndField = value;
                    this.RaisePropertyChanged("ResidualCommissionEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResidualOptionId {
            get {
                return this.ResidualOptionIdField;
            }
            set {
                if ((this.ResidualOptionIdField.Equals(value) != true)) {
                    this.ResidualOptionIdField = value;
                    this.RaisePropertyChanged("ResidualOptionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountStatus", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class AccountStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> AccountContractIdk__BackingFieldField;
        
        private System.Nullable<int> AccountStatusIdk__BackingFieldField;
        
        private int CreatedByk__BackingFieldField;
        
        private System.DateTime DateCreatedk__BackingFieldField;
        
        private int ModifiedByk__BackingFieldField;
        
        private System.DateTime Modifiedk__BackingFieldField;
        
        private string Statusk__BackingFieldField;
        
        private string SubStatusk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AccountContractId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> AccountContractIdk__BackingField {
            get {
                return this.AccountContractIdk__BackingFieldField;
            }
            set {
                if ((this.AccountContractIdk__BackingFieldField.Equals(value) != true)) {
                    this.AccountContractIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("AccountContractIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AccountStatusId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> AccountStatusIdk__BackingField {
            get {
                return this.AccountStatusIdk__BackingFieldField;
            }
            set {
                if ((this.AccountStatusIdk__BackingFieldField.Equals(value) != true)) {
                    this.AccountStatusIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("AccountStatusIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedBy>k__BackingField", IsRequired=true)]
        public int CreatedByk__BackingField {
            get {
                return this.CreatedByk__BackingFieldField;
            }
            set {
                if ((this.CreatedByk__BackingFieldField.Equals(value) != true)) {
                    this.CreatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DateCreated>k__BackingField", IsRequired=true)]
        public System.DateTime DateCreatedk__BackingField {
            get {
                return this.DateCreatedk__BackingFieldField;
            }
            set {
                if ((this.DateCreatedk__BackingFieldField.Equals(value) != true)) {
                    this.DateCreatedk__BackingFieldField = value;
                    this.RaisePropertyChanged("DateCreatedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ModifiedBy>k__BackingField", IsRequired=true)]
        public int ModifiedByk__BackingField {
            get {
                return this.ModifiedByk__BackingFieldField;
            }
            set {
                if ((this.ModifiedByk__BackingFieldField.Equals(value) != true)) {
                    this.ModifiedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("ModifiedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Modified>k__BackingField", IsRequired=true)]
        public System.DateTime Modifiedk__BackingField {
            get {
                return this.Modifiedk__BackingFieldField;
            }
            set {
                if ((this.Modifiedk__BackingFieldField.Equals(value) != true)) {
                    this.Modifiedk__BackingFieldField = value;
                    this.RaisePropertyChanged("Modifiedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Status>k__BackingField", IsRequired=true)]
        public string Statusk__BackingField {
            get {
                return this.Statusk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Statusk__BackingFieldField, value) != true)) {
                    this.Statusk__BackingFieldField = value;
                    this.RaisePropertyChanged("Statusk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SubStatus>k__BackingField", IsRequired=true)]
        public string SubStatusk__BackingField {
            get {
                return this.SubStatusk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SubStatusk__BackingFieldField, value) != true)) {
                    this.SubStatusk__BackingFieldField = value;
                    this.RaisePropertyChanged("SubStatusk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountContractRate", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class AccountContractRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AdditionalGrossMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CommissionRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> GrossMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HeatIndexSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HeatRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContractedRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCustomEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegacyProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PriceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProductCrossPriceMultiIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TransferRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AdditionalGrossMargin {
            get {
                return this.AdditionalGrossMarginField;
            }
            set {
                if ((this.AdditionalGrossMarginField.Equals(value) != true)) {
                    this.AdditionalGrossMarginField = value;
                    this.RaisePropertyChanged("AdditionalGrossMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CommissionRate {
            get {
                return this.CommissionRateField;
            }
            set {
                if ((this.CommissionRateField.Equals(value) != true)) {
                    this.CommissionRateField = value;
                    this.RaisePropertyChanged("CommissionRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> GrossMargin {
            get {
                return this.GrossMarginField;
            }
            set {
                if ((this.GrossMarginField.Equals(value) != true)) {
                    this.GrossMarginField = value;
                    this.RaisePropertyChanged("GrossMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HeatIndexSourceId {
            get {
                return this.HeatIndexSourceIdField;
            }
            set {
                if ((this.HeatIndexSourceIdField.Equals(value) != true)) {
                    this.HeatIndexSourceIdField = value;
                    this.RaisePropertyChanged("HeatIndexSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HeatRate {
            get {
                return this.HeatRateField;
            }
            set {
                if ((this.HeatRateField.Equals(value) != true)) {
                    this.HeatRateField = value;
                    this.RaisePropertyChanged("HeatRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContractedRate {
            get {
                return this.IsContractedRateField;
            }
            set {
                if ((this.IsContractedRateField.Equals(value) != true)) {
                    this.IsContractedRateField = value;
                    this.RaisePropertyChanged("IsContractedRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCustomEnd {
            get {
                return this.IsCustomEndField;
            }
            set {
                if ((this.IsCustomEndField.Equals(value) != true)) {
                    this.IsCustomEndField = value;
                    this.RaisePropertyChanged("IsCustomEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegacyProductId {
            get {
                return this.LegacyProductIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LegacyProductIdField, value) != true)) {
                    this.LegacyProductIdField = value;
                    this.RaisePropertyChanged("LegacyProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PriceId {
            get {
                return this.PriceIdField;
            }
            set {
                if ((this.PriceIdField.Equals(value) != true)) {
                    this.PriceIdField = value;
                    this.RaisePropertyChanged("PriceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProductCrossPriceMultiID {
            get {
                return this.ProductCrossPriceMultiIDField;
            }
            set {
                if ((this.ProductCrossPriceMultiIDField.Equals(value) != true)) {
                    this.ProductCrossPriceMultiIDField = value;
                    this.RaisePropertyChanged("ProductCrossPriceMultiID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RateEnd {
            get {
                return this.RateEndField;
            }
            set {
                if ((this.RateEndField.Equals(value) != true)) {
                    this.RateEndField = value;
                    this.RaisePropertyChanged("RateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RateId {
            get {
                return this.RateIdField;
            }
            set {
                if ((this.RateIdField.Equals(value) != true)) {
                    this.RateIdField = value;
                    this.RaisePropertyChanged("RateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RateStart {
            get {
                return this.RateStartField;
            }
            set {
                if ((this.RateStartField.Equals(value) != true)) {
                    this.RateStartField = value;
                    this.RaisePropertyChanged("RateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Term {
            get {
                return this.TermField;
            }
            set {
                if ((this.TermField.Equals(value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TransferRate {
            get {
                return this.TransferRateField;
            }
            set {
                if ((this.TransferRateField.Equals(value) != true)) {
                    this.TransferRateField = value;
                    this.RaisePropertyChanged("TransferRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInfo", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class AccountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterDataMgmtAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterInstallerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterServiceProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchedulingCoordinatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtilityCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingAccount {
            get {
                return this.BillingAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAccountField, value) != true)) {
                    this.BillingAccountField = value;
                    this.RaisePropertyChanged("BillingAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterDataMgmtAgent {
            get {
                return this.MeterDataMgmtAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterDataMgmtAgentField, value) != true)) {
                    this.MeterDataMgmtAgentField = value;
                    this.RaisePropertyChanged("MeterDataMgmtAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterInstaller {
            get {
                return this.MeterInstallerField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterInstallerField, value) != true)) {
                    this.MeterInstallerField = value;
                    this.RaisePropertyChanged("MeterInstaller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterOwner {
            get {
                return this.MeterOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterOwnerField, value) != true)) {
                    this.MeterOwnerField = value;
                    this.RaisePropertyChanged("MeterOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterReader {
            get {
                return this.MeterReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterReaderField, value) != true)) {
                    this.MeterReaderField = value;
                    this.RaisePropertyChanged("MeterReader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterServiceProvider {
            get {
                return this.MeterServiceProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterServiceProviderField, value) != true)) {
                    this.MeterServiceProviderField = value;
                    this.RaisePropertyChanged("MeterServiceProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameKey {
            get {
                return this.NameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKeyField, value) != true)) {
                    this.NameKeyField = value;
                    this.RaisePropertyChanged("NameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchedulingCoordinator {
            get {
                return this.SchedulingCoordinatorField;
            }
            set {
                if ((object.ReferenceEquals(this.SchedulingCoordinatorField, value) != true)) {
                    this.SchedulingCoordinatorField = value;
                    this.RaisePropertyChanged("SchedulingCoordinator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtilityCode {
            get {
                return this.UtilityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilityCodeField, value) != true)) {
                    this.UtilityCodeField = value;
                    this.RaisePropertyChanged("UtilityCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suite {
            get {
                return this.SuiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteField, value) != true)) {
                    this.SuiteField = value;
                    this.RaisePropertyChanged("Suite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDetail", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class AccountDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.DocumentServiceAPI.EnrollmentType EnrollmentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.DocumentServiceAPI.EnrollmentType EnrollmentType {
            get {
                return this.EnrollmentTypeField;
            }
            set {
                if ((this.EnrollmentTypeField.Equals(value) != true)) {
                    this.EnrollmentTypeField = value;
                    this.RaisePropertyChanged("EnrollmentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects.Enums")]
    public enum AccountType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCI = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMB = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RES = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SOHO = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountUsage", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class AccountUsage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> AccountIdk__BackingFieldField;
        
        private System.Nullable<int> AccountUsageIdk__BackingFieldField;
        
        private System.Nullable<int> AnnualUsagek__BackingFieldField;
        
        private System.Nullable<int> CreatedByk__BackingFieldField;
        
        private System.DateTime DateCreatedk__BackingFieldField;
        
        private System.DateTime EffectiveDatek__BackingFieldField;
        
        private System.Nullable<int> ModifiedByk__BackingFieldField;
        
        private System.DateTime Modifiedk__BackingFieldField;
        
        private int _usageReqStatusIdk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AccountId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> AccountIdk__BackingField {
            get {
                return this.AccountIdk__BackingFieldField;
            }
            set {
                if ((this.AccountIdk__BackingFieldField.Equals(value) != true)) {
                    this.AccountIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("AccountIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AccountUsageId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> AccountUsageIdk__BackingField {
            get {
                return this.AccountUsageIdk__BackingFieldField;
            }
            set {
                if ((this.AccountUsageIdk__BackingFieldField.Equals(value) != true)) {
                    this.AccountUsageIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("AccountUsageIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AnnualUsage>k__BackingField", IsRequired=true)]
        public System.Nullable<int> AnnualUsagek__BackingField {
            get {
                return this.AnnualUsagek__BackingFieldField;
            }
            set {
                if ((this.AnnualUsagek__BackingFieldField.Equals(value) != true)) {
                    this.AnnualUsagek__BackingFieldField = value;
                    this.RaisePropertyChanged("AnnualUsagek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedBy>k__BackingField", IsRequired=true)]
        public System.Nullable<int> CreatedByk__BackingField {
            get {
                return this.CreatedByk__BackingFieldField;
            }
            set {
                if ((this.CreatedByk__BackingFieldField.Equals(value) != true)) {
                    this.CreatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DateCreated>k__BackingField", IsRequired=true)]
        public System.DateTime DateCreatedk__BackingField {
            get {
                return this.DateCreatedk__BackingFieldField;
            }
            set {
                if ((this.DateCreatedk__BackingFieldField.Equals(value) != true)) {
                    this.DateCreatedk__BackingFieldField = value;
                    this.RaisePropertyChanged("DateCreatedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EffectiveDate>k__BackingField", IsRequired=true)]
        public System.DateTime EffectiveDatek__BackingField {
            get {
                return this.EffectiveDatek__BackingFieldField;
            }
            set {
                if ((this.EffectiveDatek__BackingFieldField.Equals(value) != true)) {
                    this.EffectiveDatek__BackingFieldField = value;
                    this.RaisePropertyChanged("EffectiveDatek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ModifiedBy>k__BackingField", IsRequired=true)]
        public System.Nullable<int> ModifiedByk__BackingField {
            get {
                return this.ModifiedByk__BackingFieldField;
            }
            set {
                if ((this.ModifiedByk__BackingFieldField.Equals(value) != true)) {
                    this.ModifiedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("ModifiedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Modified>k__BackingField", IsRequired=true)]
        public System.DateTime Modifiedk__BackingField {
            get {
                return this.Modifiedk__BackingFieldField;
            }
            set {
                if ((this.Modifiedk__BackingFieldField.Equals(value) != true)) {
                    this.Modifiedk__BackingFieldField = value;
                    this.RaisePropertyChanged("Modifiedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<_usageReqStatusId>k__BackingField", IsRequired=true)]
        public int _usageReqStatusIdk__BackingField {
            get {
                return this._usageReqStatusIdk__BackingFieldField;
            }
            set {
                if ((this._usageReqStatusIdk__BackingFieldField.Equals(value) != true)) {
                    this._usageReqStatusIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("_usageReqStatusIdk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillingType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects.Enums")]
    public enum BillingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUAL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SC = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxStatus", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects.Enums")]
    public enum TaxStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exempt = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Full = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFull = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerPreference", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class CustomerPreference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGoGreenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OptOutSpecialOffersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGoGreen {
            get {
                return this.IsGoGreenField;
            }
            set {
                if ((this.IsGoGreenField.Equals(value) != true)) {
                    this.IsGoGreenField = value;
                    this.RaisePropertyChanged("IsGoGreen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OptOutSpecialOffers {
            get {
                return this.OptOutSpecialOffersField;
            }
            set {
                if ((this.OptOutSpecialOffersField.Equals(value) != true)) {
                    this.OptOutSpecialOffersField = value;
                    this.RaisePropertyChanged("OptOutSpecialOffers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnrollmentType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects.Enums")]
    public enum EnrollmentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Standard = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveIn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveInCurrentlyDeenergized = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelfSelected = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OffcyclePriority = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StandardFutureMonth = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/DocumentRepository.Classes")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.KeyValuePair<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentInputParams>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocumentInputParams))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMappingData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocumentMappingData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocumentField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocumentMap))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocumentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AndroidPackage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.WSContractFileDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.WSContractDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSContractDetails>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSDocument>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.WSDocument))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.WSDocumentResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.WSResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.WSDocumentSubmissionStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.BillingType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.EnrollmentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TaxStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.ContractDealType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.ContractTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.ContractType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.Document>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.Document))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.Contract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountContract>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.Account))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountUsage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountUsage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.Contact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.CustomerPreference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountContractCommission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.AccountContractRate>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountContractRate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.AccountStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument1>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.DocumentServiceAPI.TabletDocument1))]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionString {
            get {
                return this.ExceptionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionStringField, value) != true)) {
                    this.ExceptionStringField = value;
                    this.RaisePropertyChanged("ExceptionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocument", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities")]
    [System.SerializableAttribute()]
    public partial class WSDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeId {
            get {
                return this.DocumentTypeIdField;
            }
            set {
                if ((this.DocumentTypeIdField.Equals(value) != true)) {
                    this.DocumentTypeIdField = value;
                    this.RaisePropertyChanged("DocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTypeName {
            get {
                return this.DocumentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeNameField, value) != true)) {
                    this.DocumentTypeNameField = value;
                    this.RaisePropertyChanged("DocumentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileBytes {
            get {
                return this.FileBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileBytesField, value) != true)) {
                    this.FileBytesField = value;
                    this.RaisePropertyChanged("FileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentSubmissionStatus", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSDocumentSubmissionStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HaveAllFilesBeenSubmittedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument1> IncomingDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSDocument> ReceivedDocumentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HaveAllFilesBeenSubmitted {
            get {
                return this.HaveAllFilesBeenSubmittedField;
            }
            set {
                if ((this.HaveAllFilesBeenSubmittedField.Equals(value) != true)) {
                    this.HaveAllFilesBeenSubmittedField = value;
                    this.RaisePropertyChanged("HaveAllFilesBeenSubmitted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument1> IncomingDocuments {
            get {
                return this.IncomingDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingDocumentsField, value) != true)) {
                    this.IncomingDocumentsField = value;
                    this.RaisePropertyChanged("IncomingDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSDocument> ReceivedDocuments {
            get {
                return this.ReceivedDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedDocumentsField, value) != true)) {
                    this.ReceivedDocumentsField = value;
                    this.RaisePropertyChanged("ReceivedDocuments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DocumentServiceAPI.IDocumentService")]
    public interface IDocumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetResourceFile", ReplyAction="http://tempuri.org/IDocumentService/GetResourceFileResponse")]
        System.IO.Stream GetResourceFile(int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetResourceFile", ReplyAction="http://tempuri.org/IDocumentService/GetResourceFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetResourceFileAsync(int fileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMasterData", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMasterDataResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMappingData> GetDocumentMasterData(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentInputParams> documentInputParamsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMasterData", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMasterDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMappingData>> GetDocumentMasterDataAsync(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentInputParams> documentInputParamsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsByChannelResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetDocumentsByChannel(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsByChannelResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument>> GetDocumentsByChannelAsync(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarketResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetDocumentsByChannelAndMarket(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument>> GetDocumentsByChannelAndMarketAsync(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarketAndProduct", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarketAndProductRespo" +
            "nse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetDocumentsByChannelAndMarketAndProduct(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarketAndProduct", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentsByChannelAndMarketAndProductRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument>> GetDocumentsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> GetDocumentFieldsByChannel(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField>> GetDocumentFieldsByChannelAsync(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarketResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> GetDocumentFieldsByChannelAndMarket(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField>> GetDocumentFieldsByChannelAndMarketAsync(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarketAndProduct" +
            "", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarketAndProduct" +
            "Response")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> GetDocumentFieldsByChannelAndMarketAndProduct(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarketAndProduct" +
            "", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldsByChannelAndMarketAndProduct" +
            "Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField>> GetDocumentFieldsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> GetDocumentFieldLocationsByChannel(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation>> GetDocumentFieldLocationsByChannelAsync(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarketRe" +
            "sponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> GetDocumentFieldLocationsByChannelAndMarket(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarketRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation>> GetDocumentFieldLocationsByChannelAndMarketAsync(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarketAn" +
            "dProduct", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarketAn" +
            "dProductResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> GetDocumentFieldLocationsByChannelAndMarketAndProduct(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarketAn" +
            "dProduct", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentFieldLocationsByChannelAndMarketAn" +
            "dProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation>> GetDocumentFieldLocationsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMapsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> GetDocumentMapsByChannel(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMapsByChannel", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap>> GetDocumentMapsByChannelAsync(int channelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarketResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> GetDocumentMapsByChannelAndMarket(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarket", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarketResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap>> GetDocumentMapsByChannelAndMarketAsync(int channelID, int marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarketAndProduct", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarketAndProductRe" +
            "sponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> GetDocumentMapsByChannelAndMarketAndProduct(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarketAndProduct", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentMapsByChannelAndMarketAndProductRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap>> GetDocumentMapsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentTypes", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentTypesResponse")]
        System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentType> GetDocumentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentTypes", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentType>> GetDocumentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/SaveDocument", ReplyAction="http://tempuri.org/IDocumentService/SaveDocumentResponse")]
        OrdersAPITests.DocumentServiceAPI.WSDocumentResult SaveDocument(byte[] newDocument, string documentName, int docTypeId, string accountId, string contractNumber, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/SaveDocument", ReplyAction="http://tempuri.org/IDocumentService/SaveDocumentResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocumentResult> SaveDocumentAsync(byte[] newDocument, string documentName, int docTypeId, string accountId, string contractNumber, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/SaveContractSupportingFile", ReplyAction="http://tempuri.org/IDocumentService/SaveContractSupportingFileResponse")]
        OrdersAPITests.DocumentServiceAPI.WSDocumentResult SaveContractSupportingFile(OrdersAPITests.DocumentServiceAPI.WSContractFileDetails fileDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/SaveContractSupportingFile", ReplyAction="http://tempuri.org/IDocumentService/SaveContractSupportingFileResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocumentResult> SaveContractSupportingFileAsync(OrdersAPITests.DocumentServiceAPI.WSContractFileDetails fileDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GenerateContractDocuments", ReplyAction="http://tempuri.org/IDocumentService/GenerateContractDocumentsResponse")]
        OrdersAPITests.DocumentServiceAPI.Result GenerateContractDocuments(OrdersAPITests.DocumentServiceAPI.WSContractDetails wsContractDetails, int documentType, bool showContractNumber, bool includeAssociatedDocs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GenerateContractDocuments", ReplyAction="http://tempuri.org/IDocumentService/GenerateContractDocumentsResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GenerateContractDocumentsAsync(OrdersAPITests.DocumentServiceAPI.WSContractDetails wsContractDetails, int documentType, bool showContractNumber, bool includeAssociatedDocs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GenerateContractDocumentsCollection", ReplyAction="http://tempuri.org/IDocumentService/GenerateContractDocumentsCollectionResponse")]
        OrdersAPITests.DocumentServiceAPI.Result GenerateContractDocumentsCollection(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSContractDetails> wsContractDetails, int documentType, bool showContractNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GenerateContractDocumentsCollection", ReplyAction="http://tempuri.org/IDocumentService/GenerateContractDocumentsCollectionResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GenerateContractDocumentsCollectionAsync(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSContractDetails> wsContractDetails, int documentType, bool showContractNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetZippedDocumentByFileId", ReplyAction="http://tempuri.org/IDocumentService/GetZippedDocumentByFileIdResponse")]
        OrdersAPITests.DocumentServiceAPI.Result GetZippedDocumentByFileId(string fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetZippedDocumentByFileId", ReplyAction="http://tempuri.org/IDocumentService/GetZippedDocumentByFileIdResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GetZippedDocumentByFileIdAsync(string fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GenerateContractDocumentUsingGUID", ReplyAction="http://tempuri.org/IDocumentService/GenerateContractDocumentUsingGUIDResponse")]
        OrdersAPITests.DocumentServiceAPI.Result GenerateContractDocumentUsingGUID(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GenerateContractDocumentUsingGUID", ReplyAction="http://tempuri.org/IDocumentService/GenerateContractDocumentUsingGUIDResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GenerateContractDocumentUsingGUIDAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentSubmissionStatus", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentSubmissionStatusResponse")]
        OrdersAPITests.DocumentServiceAPI.WSDocumentSubmissionStatus GetDocumentSubmissionStatus(string contractNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentSubmissionStatus", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentSubmissionStatusResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocumentSubmissionStatus> GetDocumentSubmissionStatusAsync(string contractNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentByGuid", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentByGuidResponse")]
        OrdersAPITests.DocumentServiceAPI.WSDocument GetDocumentByGuid(string documentGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentByGuid", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentByGuidResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocument> GetDocumentByGuidAsync(string documentGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetTabletDocumentByDocumentId", ReplyAction="http://tempuri.org/IDocumentService/GetTabletDocumentByDocumentIdResponse")]
        OrdersAPITests.DocumentServiceAPI.TabletDocument GetTabletDocumentByDocumentId(int documentId, string salesAgentGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetTabletDocumentByDocumentId", ReplyAction="http://tempuri.org/IDocumentService/GetTabletDocumentByDocumentIdResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetTabletDocumentByDocumentIdAsync(int documentId, string salesAgentGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetTabletLatestAPK", ReplyAction="http://tempuri.org/IDocumentService/GetTabletLatestAPKResponse")]
        OrdersAPITests.DocumentServiceAPI.AndroidPackage GetTabletLatestAPK(string deviceId, bool getFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetTabletLatestAPK", ReplyAction="http://tempuri.org/IDocumentService/GetTabletLatestAPKResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.AndroidPackage> GetTabletLatestAPKAsync(string deviceId, bool getFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetTabletLatestAPKRawFile", ReplyAction="http://tempuri.org/IDocumentService/GetTabletLatestAPKRawFileResponse")]
        byte[] GetTabletLatestAPKRawFile(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetTabletLatestAPKRawFile", ReplyAction="http://tempuri.org/IDocumentService/GetTabletLatestAPKRawFileResponse")]
        System.Threading.Tasks.Task<byte[]> GetTabletLatestAPKRawFileAsync(string deviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Echo", ReplyAction="http://tempuri.org/IDocumentService/EchoResponse")]
        string Echo(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Echo", ReplyAction="http://tempuri.org/IDocumentService/EchoResponse")]
        System.Threading.Tasks.Task<string> EchoAsync(string input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentServiceChannel : OrdersAPITests.DocumentServiceAPI.IDocumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentServiceClient : System.ServiceModel.ClientBase<OrdersAPITests.DocumentServiceAPI.IDocumentService>, OrdersAPITests.DocumentServiceAPI.IDocumentService {
        
        public DocumentServiceClient() {
        }
        
        public DocumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.Stream GetResourceFile(int fileID) {
            return base.Channel.GetResourceFile(fileID);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetResourceFileAsync(int fileID) {
            return base.Channel.GetResourceFileAsync(fileID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMappingData> GetDocumentMasterData(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentInputParams> documentInputParamsList) {
            return base.Channel.GetDocumentMasterData(documentInputParamsList);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMappingData>> GetDocumentMasterDataAsync(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentInputParams> documentInputParamsList) {
            return base.Channel.GetDocumentMasterDataAsync(documentInputParamsList);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetDocumentsByChannel(int channelID) {
            return base.Channel.GetDocumentsByChannel(channelID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument>> GetDocumentsByChannelAsync(int channelID) {
            return base.Channel.GetDocumentsByChannelAsync(channelID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetDocumentsByChannelAndMarket(int channelID, int marketID) {
            return base.Channel.GetDocumentsByChannelAndMarket(channelID, marketID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument>> GetDocumentsByChannelAndMarketAsync(int channelID, int marketID) {
            return base.Channel.GetDocumentsByChannelAndMarketAsync(channelID, marketID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetDocumentsByChannelAndMarketAndProduct(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentsByChannelAndMarketAndProduct(channelID, marketID, productID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocument>> GetDocumentsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentsByChannelAndMarketAndProductAsync(channelID, marketID, productID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> GetDocumentFieldsByChannel(int channelID) {
            return base.Channel.GetDocumentFieldsByChannel(channelID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField>> GetDocumentFieldsByChannelAsync(int channelID) {
            return base.Channel.GetDocumentFieldsByChannelAsync(channelID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> GetDocumentFieldsByChannelAndMarket(int channelID, int marketID) {
            return base.Channel.GetDocumentFieldsByChannelAndMarket(channelID, marketID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField>> GetDocumentFieldsByChannelAndMarketAsync(int channelID, int marketID) {
            return base.Channel.GetDocumentFieldsByChannelAndMarketAsync(channelID, marketID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField> GetDocumentFieldsByChannelAndMarketAndProduct(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentFieldsByChannelAndMarketAndProduct(channelID, marketID, productID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentField>> GetDocumentFieldsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentFieldsByChannelAndMarketAndProductAsync(channelID, marketID, productID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> GetDocumentFieldLocationsByChannel(int channelID) {
            return base.Channel.GetDocumentFieldLocationsByChannel(channelID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation>> GetDocumentFieldLocationsByChannelAsync(int channelID) {
            return base.Channel.GetDocumentFieldLocationsByChannelAsync(channelID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> GetDocumentFieldLocationsByChannelAndMarket(int channelID, int marketID) {
            return base.Channel.GetDocumentFieldLocationsByChannelAndMarket(channelID, marketID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation>> GetDocumentFieldLocationsByChannelAndMarketAsync(int channelID, int marketID) {
            return base.Channel.GetDocumentFieldLocationsByChannelAndMarketAsync(channelID, marketID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation> GetDocumentFieldLocationsByChannelAndMarketAndProduct(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentFieldLocationsByChannelAndMarketAndProduct(channelID, marketID, productID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentFieldLocation>> GetDocumentFieldLocationsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentFieldLocationsByChannelAndMarketAndProductAsync(channelID, marketID, productID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> GetDocumentMapsByChannel(int channelID) {
            return base.Channel.GetDocumentMapsByChannel(channelID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap>> GetDocumentMapsByChannelAsync(int channelID) {
            return base.Channel.GetDocumentMapsByChannelAsync(channelID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> GetDocumentMapsByChannelAndMarket(int channelID, int marketID) {
            return base.Channel.GetDocumentMapsByChannelAndMarket(channelID, marketID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap>> GetDocumentMapsByChannelAndMarketAsync(int channelID, int marketID) {
            return base.Channel.GetDocumentMapsByChannelAndMarketAsync(channelID, marketID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap> GetDocumentMapsByChannelAndMarketAndProduct(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentMapsByChannelAndMarketAndProduct(channelID, marketID, productID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentMap>> GetDocumentMapsByChannelAndMarketAndProductAsync(int channelID, int marketID, int productID) {
            return base.Channel.GetDocumentMapsByChannelAndMarketAndProductAsync(channelID, marketID, productID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentType> GetDocumentTypes() {
            return base.Channel.GetDocumentTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.TabletDocumentType>> GetDocumentTypesAsync() {
            return base.Channel.GetDocumentTypesAsync();
        }
        
        public OrdersAPITests.DocumentServiceAPI.WSDocumentResult SaveDocument(byte[] newDocument, string documentName, int docTypeId, string accountId, string contractNumber, string username) {
            return base.Channel.SaveDocument(newDocument, documentName, docTypeId, accountId, contractNumber, username);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocumentResult> SaveDocumentAsync(byte[] newDocument, string documentName, int docTypeId, string accountId, string contractNumber, string username) {
            return base.Channel.SaveDocumentAsync(newDocument, documentName, docTypeId, accountId, contractNumber, username);
        }
        
        public OrdersAPITests.DocumentServiceAPI.WSDocumentResult SaveContractSupportingFile(OrdersAPITests.DocumentServiceAPI.WSContractFileDetails fileDetails) {
            return base.Channel.SaveContractSupportingFile(fileDetails);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocumentResult> SaveContractSupportingFileAsync(OrdersAPITests.DocumentServiceAPI.WSContractFileDetails fileDetails) {
            return base.Channel.SaveContractSupportingFileAsync(fileDetails);
        }
        
        public OrdersAPITests.DocumentServiceAPI.Result GenerateContractDocuments(OrdersAPITests.DocumentServiceAPI.WSContractDetails wsContractDetails, int documentType, bool showContractNumber, bool includeAssociatedDocs) {
            return base.Channel.GenerateContractDocuments(wsContractDetails, documentType, showContractNumber, includeAssociatedDocs);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GenerateContractDocumentsAsync(OrdersAPITests.DocumentServiceAPI.WSContractDetails wsContractDetails, int documentType, bool showContractNumber, bool includeAssociatedDocs) {
            return base.Channel.GenerateContractDocumentsAsync(wsContractDetails, documentType, showContractNumber, includeAssociatedDocs);
        }
        
        public OrdersAPITests.DocumentServiceAPI.Result GenerateContractDocumentsCollection(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSContractDetails> wsContractDetails, int documentType, bool showContractNumber) {
            return base.Channel.GenerateContractDocumentsCollection(wsContractDetails, documentType, showContractNumber);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GenerateContractDocumentsCollectionAsync(System.Collections.Generic.List<OrdersAPITests.DocumentServiceAPI.WSContractDetails> wsContractDetails, int documentType, bool showContractNumber) {
            return base.Channel.GenerateContractDocumentsCollectionAsync(wsContractDetails, documentType, showContractNumber);
        }
        
        public OrdersAPITests.DocumentServiceAPI.Result GetZippedDocumentByFileId(string fileId) {
            return base.Channel.GetZippedDocumentByFileId(fileId);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GetZippedDocumentByFileIdAsync(string fileId) {
            return base.Channel.GetZippedDocumentByFileIdAsync(fileId);
        }
        
        public OrdersAPITests.DocumentServiceAPI.Result GenerateContractDocumentUsingGUID(System.Guid guid) {
            return base.Channel.GenerateContractDocumentUsingGUID(guid);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.Result> GenerateContractDocumentUsingGUIDAsync(System.Guid guid) {
            return base.Channel.GenerateContractDocumentUsingGUIDAsync(guid);
        }
        
        public OrdersAPITests.DocumentServiceAPI.WSDocumentSubmissionStatus GetDocumentSubmissionStatus(string contractNumber) {
            return base.Channel.GetDocumentSubmissionStatus(contractNumber);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocumentSubmissionStatus> GetDocumentSubmissionStatusAsync(string contractNumber) {
            return base.Channel.GetDocumentSubmissionStatusAsync(contractNumber);
        }
        
        public OrdersAPITests.DocumentServiceAPI.WSDocument GetDocumentByGuid(string documentGUID) {
            return base.Channel.GetDocumentByGuid(documentGUID);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.WSDocument> GetDocumentByGuidAsync(string documentGUID) {
            return base.Channel.GetDocumentByGuidAsync(documentGUID);
        }
        
        public OrdersAPITests.DocumentServiceAPI.TabletDocument GetTabletDocumentByDocumentId(int documentId, string salesAgentGUID) {
            return base.Channel.GetTabletDocumentByDocumentId(documentId, salesAgentGUID);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.TabletDocument> GetTabletDocumentByDocumentIdAsync(int documentId, string salesAgentGUID) {
            return base.Channel.GetTabletDocumentByDocumentIdAsync(documentId, salesAgentGUID);
        }
        
        public OrdersAPITests.DocumentServiceAPI.AndroidPackage GetTabletLatestAPK(string deviceId, bool getFile) {
            return base.Channel.GetTabletLatestAPK(deviceId, getFile);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.DocumentServiceAPI.AndroidPackage> GetTabletLatestAPKAsync(string deviceId, bool getFile) {
            return base.Channel.GetTabletLatestAPKAsync(deviceId, getFile);
        }
        
        public byte[] GetTabletLatestAPKRawFile(string deviceId) {
            return base.Channel.GetTabletLatestAPKRawFile(deviceId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetTabletLatestAPKRawFileAsync(string deviceId) {
            return base.Channel.GetTabletLatestAPKRawFileAsync(deviceId);
        }
        
        public string Echo(string input) {
            return base.Channel.Echo(input);
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync(string input) {
            return base.Channel.EchoAsync(input);
        }
    }
}
