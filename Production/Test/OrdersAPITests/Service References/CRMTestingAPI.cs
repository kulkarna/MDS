//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrdersAPITests.OrderEntryAPI
{
    using System.Runtime.Serialization;
    using System;

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Runtime.Serialization", "4.0.0.0" )]
    [System.Runtime.Serialization.DataContractAttribute( Name = "ContractPackage", Namespace = "http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMServices" )]
    [System.SerializableAttribute()]
    public partial class ContractPackage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.OrderEntryAPI.Contract ContractField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.OrderEntryAPI.Customer CustomerField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;

        [global::System.ComponentModel.BrowsableAttribute( false )]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.OrderEntryAPI.Contract Contract
        {
            get
            {
                return this.ContractField;
            }
            set
            {
                if ((object.ReferenceEquals( this.ContractField, value ) != true))
                {
                    this.ContractField = value;
                    this.RaisePropertyChanged( "Contract" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.OrderEntryAPI.Customer Customer
        {
            get
            {
                return this.CustomerField;
            }
            set
            {
                if ((object.ReferenceEquals( this.CustomerField, value ) != true))
                {
                    this.CustomerField = value;
                    this.RaisePropertyChanged( "Customer" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                if ((this.UserIdField.Equals( value ) != true))
                {
                    this.UserIdField = value;
                    this.RaisePropertyChanged( "UserId" );
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged( string propertyName )
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged( this, new System.ComponentModel.PropertyChangedEventArgs( propertyName ) );
            }
        }
    }
    



    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Runtime.Serialization", "4.0.0.0" )]
    [System.Runtime.Serialization.DataContractAttribute( Name = "User", Namespace = "http://schemas.datacontract.org/2004/07/LibertyPower.Business.CommonBusiness.Secu" +
        "rityManager" )]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private bool IsActivek__BackingFieldField;

        private int createdByField;

        private System.DateTime dateCreatedField;

        private System.DateTime dateModifiedField;

        private string emailField;

        private string firstNameField;

        private string lastNameField;

        private int legacyIDField;

        private System.Collections.Generic.List<OrdersAPITests.OrderEntryAPI.Activity> listOfActivitesField;

        private System.Collections.Generic.List<OrdersAPITests.OrderEntryAPI.Role> listOfRolesField;

        private int modifiedByField;

        private string passwordField;

        private string userGuidField;

        private int userIDField;

        private string userImageField;

        private string userNameField;

        private OrdersAPITests.OrderEntryAPI.TypeofUser userTypeField;

        private System.Collections.Generic.List<string> validationMessagesField;

        [global::System.ComponentModel.BrowsableAttribute( false )]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( Name = "<IsActive>k__BackingField", IsRequired = true )]
        public bool IsActivek__BackingField
        {
            get
            {
                return this.IsActivek__BackingFieldField;
            }
            set
            {
                if ((this.IsActivek__BackingFieldField.Equals( value ) != true))
                {
                    this.IsActivek__BackingFieldField = value;
                    this.RaisePropertyChanged( "IsActivek__BackingField" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public int createdBy
        {
            get
            {
                return this.createdByField;
            }
            set
            {
                if ((this.createdByField.Equals( value ) != true))
                {
                    this.createdByField = value;
                    this.RaisePropertyChanged( "createdBy" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public System.DateTime dateCreated
        {
            get
            {
                return this.dateCreatedField;
            }
            set
            {
                if ((this.dateCreatedField.Equals( value ) != true))
                {
                    this.dateCreatedField = value;
                    this.RaisePropertyChanged( "dateCreated" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public System.DateTime dateModified
        {
            get
            {
                return this.dateModifiedField;
            }
            set
            {
                if ((this.dateModifiedField.Equals( value ) != true))
                {
                    this.dateModifiedField = value;
                    this.RaisePropertyChanged( "dateModified" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public string email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                if ((object.ReferenceEquals( this.emailField, value ) != true))
                {
                    this.emailField = value;
                    this.RaisePropertyChanged( "email" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public string firstName
        {
            get
            {
                return this.firstNameField;
            }
            set
            {
                if ((object.ReferenceEquals( this.firstNameField, value ) != true))
                {
                    this.firstNameField = value;
                    this.RaisePropertyChanged( "firstName" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public string lastName
        {
            get
            {
                return this.lastNameField;
            }
            set
            {
                if ((object.ReferenceEquals( this.lastNameField, value ) != true))
                {
                    this.lastNameField = value;
                    this.RaisePropertyChanged( "lastName" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public int legacyID
        {
            get
            {
                return this.legacyIDField;
            }
            set
            {
                if ((this.legacyIDField.Equals( value ) != true))
                {
                    this.legacyIDField = value;
                    this.RaisePropertyChanged( "legacyID" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public System.Collections.Generic.List<OrdersAPITests.OrderEntryAPI.Activity> listOfActivites
        {
            get
            {
                return this.listOfActivitesField;
            }
            set
            {
                if ((object.ReferenceEquals( this.listOfActivitesField, value ) != true))
                {
                    this.listOfActivitesField = value;
                    this.RaisePropertyChanged( "listOfActivites" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public System.Collections.Generic.List<OrdersAPITests.OrderEntryAPI.Role> listOfRoles
        {
            get
            {
                return this.listOfRolesField;
            }
            set
            {
                if ((object.ReferenceEquals( this.listOfRolesField, value ) != true))
                {
                    this.listOfRolesField = value;
                    this.RaisePropertyChanged( "listOfRoles" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public int modifiedBy
        {
            get
            {
                return this.modifiedByField;
            }
            set
            {
                if ((this.modifiedByField.Equals( value ) != true))
                {
                    this.modifiedByField = value;
                    this.RaisePropertyChanged( "modifiedBy" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                if ((object.ReferenceEquals( this.passwordField, value ) != true))
                {
                    this.passwordField = value;
                    this.RaisePropertyChanged( "password" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public string userGuid
        {
            get
            {
                return this.userGuidField;
            }
            set
            {
                if ((object.ReferenceEquals( this.userGuidField, value ) != true))
                {
                    this.userGuidField = value;
                    this.RaisePropertyChanged( "userGuid" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public int userID
        {
            get
            {
                return this.userIDField;
            }
            set
            {
                if ((this.userIDField.Equals( value ) != true))
                {
                    this.userIDField = value;
                    this.RaisePropertyChanged( "userID" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public string userImage
        {
            get
            {
                return this.userImageField;
            }
            set
            {
                if ((object.ReferenceEquals( this.userImageField, value ) != true))
                {
                    this.userImageField = value;
                    this.RaisePropertyChanged( "userImage" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public string userName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                if ((object.ReferenceEquals( this.userNameField, value ) != true))
                {
                    this.userNameField = value;
                    this.RaisePropertyChanged( "userName" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public OrdersAPITests.OrderEntryAPI.TypeofUser userType
        {
            get
            {
                return this.userTypeField;
            }
            set
            {
                if ((this.userTypeField.Equals( value ) != true))
                {
                    this.userTypeField = value;
                    this.RaisePropertyChanged( "userType" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute( IsRequired = true )]
        public System.Collections.Generic.List<string> validationMessages
        {
            get
            {
                return this.validationMessagesField;
            }
            set
            {
                if ((object.ReferenceEquals( this.validationMessagesField, value ) != true))
                {
                    this.validationMessagesField = value;
                    this.RaisePropertyChanged( "validationMessages" );
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged( string propertyName )
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged( this, new System.ComponentModel.PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Runtime.Serialization", "4.0.0.0" )]
    [System.Runtime.Serialization.DataContractAttribute( Name = "Activity", Namespace = "http://schemas.datacontract.org/2004/07/LibertyPower.Business.CommonBusiness.Secu" +
        "rityManager" )]
    [System.SerializableAttribute()]
    public partial class Activity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityDescField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityKeyField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppKeyField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;

        [global::System.ComponentModel.BrowsableAttribute( false )]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityDesc
        {
            get
            {
                return this.ActivityDescField;
            }
            set
            {
                if ((object.ReferenceEquals( this.ActivityDescField, value ) != true))
                {
                    this.ActivityDescField = value;
                    this.RaisePropertyChanged( "ActivityDesc" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityKey
        {
            get
            {
                return this.ActivityKeyField;
            }
            set
            {
                if ((this.ActivityKeyField.Equals( value ) != true))
                {
                    this.ActivityKeyField = value;
                    this.RaisePropertyChanged( "ActivityKey" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppKey
        {
            get
            {
                return this.AppKeyField;
            }
            set
            {
                if ((object.ReferenceEquals( this.AppKeyField, value ) != true))
                {
                    this.AppKeyField = value;
                    this.RaisePropertyChanged( "AppKey" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                return this.CreatedByField;
            }
            set
            {
                if ((this.CreatedByField.Equals( value ) != true))
                {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged( "CreatedBy" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                if ((this.DateCreatedField.Equals( value ) != true))
                {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged( "DateCreated" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified
        {
            get
            {
                return this.DateModifiedField;
            }
            set
            {
                if ((this.DateModifiedField.Equals( value ) != true))
                {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged( "DateModified" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedBy
        {
            get
            {
                return this.ModifiedByField;
            }
            set
            {
                if ((this.ModifiedByField.Equals( value ) != true))
                {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged( "ModifiedBy" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName
        {
            get
            {
                return this.RoleNameField;
            }
            set
            {
                if ((object.ReferenceEquals( this.RoleNameField, value ) != true))
                {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged( "RoleName" );
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged( string propertyName )
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged( this, new System.ComponentModel.PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Runtime.Serialization", "4.0.0.0" )]
    [System.Runtime.Serialization.DataContractAttribute( Name = "Role", Namespace = "http://schemas.datacontract.org/2004/07/LibertyPower.Business.CommonBusiness.Secu" +
        "rityManager" )]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.OrderEntryAPI.Activity> ActivitiesOfRoleField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;

        [global::System.ComponentModel.BrowsableAttribute( false )]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.OrderEntryAPI.Activity> ActivitiesOfRole
        {
            get
            {
                return this.ActivitiesOfRoleField;
            }
            set
            {
                if ((object.ReferenceEquals( this.ActivitiesOfRoleField, value ) != true))
                {
                    this.ActivitiesOfRoleField = value;
                    this.RaisePropertyChanged( "ActivitiesOfRole" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy
        {
            get
            {
                return this.CreatedByField;
            }
            set
            {
                if ((this.CreatedByField.Equals( value ) != true))
                {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged( "CreatedBy" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                if ((this.DateCreatedField.Equals( value ) != true))
                {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged( "DateCreated" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified
        {
            get
            {
                return this.DateModifiedField;
            }
            set
            {
                if ((this.DateModifiedField.Equals( value ) != true))
                {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged( "DateModified" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                if ((object.ReferenceEquals( this.DescriptionField, value ) != true))
                {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged( "Description" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedBy
        {
            get
            {
                return this.ModifiedByField;
            }
            set
            {
                if ((this.ModifiedByField.Equals( value ) != true))
                {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged( "ModifiedBy" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID
        {
            get
            {
                return this.RoleIDField;
            }
            set
            {
                if ((this.RoleIDField.Equals( value ) != true))
                {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged( "RoleID" );
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName
        {
            get
            {
                return this.RoleNameField;
            }
            set
            {
                if ((object.ReferenceEquals( this.RoleNameField, value ) != true))
                {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged( "RoleName" );
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged( string propertyName )
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged( this, new System.ComponentModel.PropertyChangedEventArgs( propertyName ) );
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Runtime.Serialization", "4.0.0.0" )]
    [System.Runtime.Serialization.DataContractAttribute( Name = "TypeofUser", Namespace = "http://schemas.datacontract.org/2004/07/LibertyPower.Business.CommonBusiness.Secu" +
        "rityManager" )]
    public enum TypeofUser : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        INTERNAL = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXTERNAL = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.ServiceModel", "4.0.0.0" )]
    [System.ServiceModel.ServiceContractAttribute( ConfigurationName = "OrderEntryAPI.ICRMTesting" )]
    public interface ICRMTesting
    {

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/Echo", ReplyAction = "http://tempuri.org/ICRMTesting/EchoResponse" )]
        string Echo();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/Echo", ReplyAction = "http://tempuri.org/ICRMTesting/EchoResponse" )]
        System.Threading.Tasks.Task<string> EchoAsync();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/EchoString", ReplyAction = "http://tempuri.org/ICRMTesting/EchoStringResponse" )]
        string EchoString( string value );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/EchoString", ReplyAction = "http://tempuri.org/ICRMTesting/EchoStringResponse" )]
        System.Threading.Tasks.Task<string> EchoStringAsync( string value );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomAccountNumber", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomAccountNumberResponse" )]
        string GenerateRandomAccountNumber( int utilityId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomAccountNumber", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomAccountNumberResponse" )]
        System.Threading.Tasks.Task<string> GenerateRandomAccountNumberAsync( int utilityId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomAccount", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomAccountResponse" )]
        OrdersAPITests.OrderEntryAPI.Account GenerateRandomAccount();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomAccount", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomAccountResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Account> GenerateRandomAccountAsync();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomAccountByAccountType", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomAccountByAccountTypeResponse" )]
        OrdersAPITests.OrderEntryAPI.Account GenerateRandomAccountByAccountType( OrdersAPITests.OrderEntryAPI.AccountType type );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomAccountByAccountType", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomAccountByAccountTypeResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Account> GenerateRandomAccountByAccountTypeAsync( OrdersAPITests.OrderEntryAPI.AccountType type );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomBasicContract", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomBasicContractResponse" )]
        OrdersAPITests.OrderEntryAPI.Contract GenerateRandomBasicContract();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomBasicContract", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomBasicContractResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomBasicContractAsync();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannelAndUtility", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannelAndUtilityResp" +
            "onse" )]
        OrdersAPITests.OrderEntryAPI.Contract GenerateRandomContractBySalesChannelAndUtility( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId, int utilityId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannelAndUtility", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannelAndUtilityResp" +
            "onse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomContractBySalesChannelAndUtilityAsync( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId, int utilityId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannel", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannelResponse" )]
        OrdersAPITests.OrderEntryAPI.Contract GenerateRandomContractBySalesChannel( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannel", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomContractBySalesChannelResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomContractBySalesChannelAsync( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomRenewalContractBySalesChannel", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomRenewalContractBySalesChannelRespons" +
            "e" )]
        OrdersAPITests.OrderEntryAPI.Contract GenerateRandomRenewalContractBySalesChannel( System.DateTime contractSignedDate, int salesChannelId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomRenewalContractBySalesChannel", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomRenewalContractBySalesChannelRespons" +
            "e" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomRenewalContractBySalesChannelAsync( System.DateTime contractSignedDate, int salesChannelId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetTestCustomer", ReplyAction = "http://tempuri.org/ICRMTesting/GetTestCustomerResponse" )]
        OrdersAPITests.OrderEntryAPI.Customer GetTestCustomer();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetTestCustomer", ReplyAction = "http://tempuri.org/ICRMTesting/GetTestCustomerResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Customer> GetTestCustomerAsync();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetRandomUser", ReplyAction = "http://tempuri.org/ICRMTesting/GetRandomUserResponse" )]
        OrdersAPITests.OrderEntryAPI.User GetRandomUser();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetRandomUser", ReplyAction = "http://tempuri.org/ICRMTesting/GetRandomUserResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.User> GetRandomUserAsync();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetUserForContractSubmittal", ReplyAction = "http://tempuri.org/ICRMTesting/GetUserForContractSubmittalResponse" )]
        OrdersAPITests.OrderEntryAPI.User GetUserForContractSubmittal( int salesChanelId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetUserForContractSubmittal", ReplyAction = "http://tempuri.org/ICRMTesting/GetUserForContractSubmittalResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.User> GetUserForContractSubmittalAsync( int salesChanelId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateContractByPriceId", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateContractByPriceIdResponse" )]
        OrdersAPITests.OrderEntryAPI.Contract GenerateContractByPriceId( long priceID );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateContractByPriceId", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateContractByPriceIdResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateContractByPriceIdAsync( long priceID );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetValidPriceIdForTesting", ReplyAction = "http://tempuri.org/ICRMTesting/GetValidPriceIdForTestingResponse" )]
        long GetValidPriceIdForTesting( int channelId, System.DateTime priceDate, int marketId, int utilityId, int accountTypeId, int productBrandId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GetValidPriceIdForTesting", ReplyAction = "http://tempuri.org/ICRMTesting/GetValidPriceIdForTestingResponse" )]
        System.Threading.Tasks.Task<long> GetValidPriceIdForTestingAsync( int channelId, System.DateTime priceDate, int marketId, int utilityId, int accountTypeId, int productBrandId );

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomContractSubmissionPackage", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomContractSubmissionPackageResponse" )]
        OrdersAPITests.OrderEntryAPI.ContractPackage GenerateRandomContractSubmissionPackage();

        [System.ServiceModel.OperationContractAttribute( Action = "http://tempuri.org/ICRMTesting/GenerateRandomContractSubmissionPackage", ReplyAction = "http://tempuri.org/ICRMTesting/GenerateRandomContractSubmissionPackageResponse" )]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.ContractPackage> GenerateRandomContractSubmissionPackageAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRMTesting/GetContractWithLoadedSubtypes", ReplyAction = "http://tempuri.org/ICRMTesting/GetContractWithLoadedSubtypesResponse")]
        OrdersAPITests.OrderEntryAPI.Contract GetContractWithLoadedSubtypes( int contractId );

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICRMTesting/GetContractWithLoadedSubtypes", ReplyAction = "http://tempuri.org/ICRMTesting/GetContractWithLoadedSubtypesResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GetContractWithLoadedSubtypesAsync( int contractId);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.ServiceModel", "4.0.0.0" )]
    public interface ICRMTestingChannel : OrdersAPITests.OrderEntryAPI.ICRMTesting, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute( "System.ServiceModel", "4.0.0.0" )]
    public partial class CRMTestingClient : System.ServiceModel.ClientBase<OrdersAPITests.OrderEntryAPI.ICRMTesting>, OrdersAPITests.OrderEntryAPI.ICRMTesting
    {

        public CRMTestingClient()
        {
        }

        public CRMTestingClient( string endpointConfigurationName ) :
            base( endpointConfigurationName )
        {
        }

        public CRMTestingClient( string endpointConfigurationName, string remoteAddress ) :
            base( endpointConfigurationName, remoteAddress )
        {
        }

        public CRMTestingClient( string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress ) :
            base( endpointConfigurationName, remoteAddress )
        {
        }

        public CRMTestingClient( System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress ) :
            base( binding, remoteAddress )
        {
        }

        public string Echo()
        {
            return base.Channel.Echo();
        }

        public System.Threading.Tasks.Task<string> EchoAsync()
        {
            return base.Channel.EchoAsync();
        }

        public string EchoString( string value )
        {
            return base.Channel.EchoString( value );
        }

        public System.Threading.Tasks.Task<string> EchoStringAsync( string value )
        {
            return base.Channel.EchoStringAsync( value );
        }

        public string GenerateRandomAccountNumber( int utilityId )
        {
            return base.Channel.GenerateRandomAccountNumber( utilityId );
        }

        public System.Threading.Tasks.Task<string> GenerateRandomAccountNumberAsync( int utilityId )
        {
            return base.Channel.GenerateRandomAccountNumberAsync( utilityId );
        }

        public OrdersAPITests.OrderEntryAPI.Account GenerateRandomAccount()
        {
            return base.Channel.GenerateRandomAccount();
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Account> GenerateRandomAccountAsync()
        {
            return base.Channel.GenerateRandomAccountAsync();
        }

        public OrdersAPITests.OrderEntryAPI.Account GenerateRandomAccountByAccountType( OrdersAPITests.OrderEntryAPI.AccountType type )
        {
            return base.Channel.GenerateRandomAccountByAccountType( type );
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Account> GenerateRandomAccountByAccountTypeAsync( OrdersAPITests.OrderEntryAPI.AccountType type )
        {
            return base.Channel.GenerateRandomAccountByAccountTypeAsync( type );
        }

        public OrdersAPITests.OrderEntryAPI.Contract GenerateRandomBasicContract()
        {
            return base.Channel.GenerateRandomBasicContract();
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomBasicContractAsync()
        {
            return base.Channel.GenerateRandomBasicContractAsync();
        }

        public OrdersAPITests.OrderEntryAPI.Contract GenerateRandomContractBySalesChannelAndUtility( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId, int utilityId )
        {
            return base.Channel.GenerateRandomContractBySalesChannelAndUtility( startFlowDate, contractSignedDate, salesChannelId, utilityId );
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomContractBySalesChannelAndUtilityAsync( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId, int utilityId )
        {
            return base.Channel.GenerateRandomContractBySalesChannelAndUtilityAsync( startFlowDate, contractSignedDate, salesChannelId, utilityId );
        }

        public OrdersAPITests.OrderEntryAPI.Contract GenerateRandomContractBySalesChannel( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId )
        {
            return base.Channel.GenerateRandomContractBySalesChannel( startFlowDate, contractSignedDate, salesChannelId );
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomContractBySalesChannelAsync( System.DateTime startFlowDate, System.DateTime contractSignedDate, int salesChannelId )
        {
            return base.Channel.GenerateRandomContractBySalesChannelAsync( startFlowDate, contractSignedDate, salesChannelId );
        }

        public OrdersAPITests.OrderEntryAPI.Contract GenerateRandomRenewalContractBySalesChannel( System.DateTime contractSignedDate, int salesChannelId )
        {
            return base.Channel.GenerateRandomRenewalContractBySalesChannel( contractSignedDate, salesChannelId );
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateRandomRenewalContractBySalesChannelAsync( System.DateTime contractSignedDate, int salesChannelId )
        {
            return base.Channel.GenerateRandomRenewalContractBySalesChannelAsync( contractSignedDate, salesChannelId );
        }

        public OrdersAPITests.OrderEntryAPI.Customer GetTestCustomer()
        {
            return base.Channel.GetTestCustomer();
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Customer> GetTestCustomerAsync()
        {
            return base.Channel.GetTestCustomerAsync();
        }

        public OrdersAPITests.OrderEntryAPI.User GetRandomUser()
        {
            return base.Channel.GetRandomUser();
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.User> GetRandomUserAsync()
        {
            return base.Channel.GetRandomUserAsync();
        }

        public OrdersAPITests.OrderEntryAPI.User GetUserForContractSubmittal( int salesChanelId )
        {
            return base.Channel.GetUserForContractSubmittal( salesChanelId );
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.User> GetUserForContractSubmittalAsync( int salesChanelId )
        {
            return base.Channel.GetUserForContractSubmittalAsync( salesChanelId );
        }

        public OrdersAPITests.OrderEntryAPI.Contract GenerateContractByPriceId( long priceID )
        {
            return base.Channel.GenerateContractByPriceId( priceID );
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GenerateContractByPriceIdAsync( long priceID )
        {
            return base.Channel.GenerateContractByPriceIdAsync( priceID );
        }

        public long GetValidPriceIdForTesting( int channelId, System.DateTime priceDate, int marketId, int utilityId, int accountTypeId, int productBrandId )
        {
            return base.Channel.GetValidPriceIdForTesting( channelId, priceDate, marketId, utilityId, accountTypeId, productBrandId );
        }

        public System.Threading.Tasks.Task<long> GetValidPriceIdForTestingAsync( int channelId, System.DateTime priceDate, int marketId, int utilityId, int accountTypeId, int productBrandId )
        {
            return base.Channel.GetValidPriceIdForTestingAsync( channelId, priceDate, marketId, utilityId, accountTypeId, productBrandId );
        }

        public OrdersAPITests.OrderEntryAPI.ContractPackage GenerateRandomContractSubmissionPackage()
        {
            return base.Channel.GenerateRandomContractSubmissionPackage();
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.ContractPackage> GenerateRandomContractSubmissionPackageAsync()
        {
            return base.Channel.GenerateRandomContractSubmissionPackageAsync();
        }

        public OrdersAPITests.OrderEntryAPI.Contract GetContractWithLoadedSubtypes(int contractId)
        {
            return base.Channel.GetContractWithLoadedSubtypes(contractId);
        }

        public System.Threading.Tasks.Task<OrdersAPITests.OrderEntryAPI.Contract> GetContractWithLoadedSubtypesAsync(int contractId)
        {
            return base.Channel.GetContractWithLoadedSubtypesAsync(contractId);
        }
    
    }


}
