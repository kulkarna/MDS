//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrdersAPITests.CommonServicesAPI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSResult", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.CommonServicesAPI.WSSalesChannelUserResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrdersAPITests.CommonServicesAPI.WSUtilityResult))]
    public partial class WSResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasErrors {
            get {
                return this.HasErrorsField;
            }
            set {
                if ((this.HasErrorsField.Equals(value) != true)) {
                    this.HasErrorsField = value;
                    this.RaisePropertyChanged("HasErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSSalesChannelUserResult", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSSalesChannelUserResult : OrdersAPITests.CommonServicesAPI.WSResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannelUser> SalesChannelUsersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannelUser> SalesChannelUsers {
            get {
                return this.SalesChannelUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesChannelUsersField, value) != true)) {
                    this.SalesChannelUsersField = value;
                    this.RaisePropertyChanged("SalesChannelUsers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSUtilityResult", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSUtilityResult : OrdersAPITests.CommonServicesAPI.WSResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility> UtilitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility> Utilities {
            get {
                return this.UtilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilitiesField, value) != true)) {
                    this.UtilitiesField = value;
                    this.RaisePropertyChanged("Utilities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSUtility", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSUtility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountNumberLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnrollmentLeadDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetailMarketCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailMarketIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountNumberLength {
            get {
                return this.AccountNumberLengthField;
            }
            set {
                if ((this.AccountNumberLengthField.Equals(value) != true)) {
                    this.AccountNumberLengthField = value;
                    this.RaisePropertyChanged("AccountNumberLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumberPrefix {
            get {
                return this.AccountNumberPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberPrefixField, value) != true)) {
                    this.AccountNumberPrefixField = value;
                    this.RaisePropertyChanged("AccountNumberPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeDescription {
            get {
                return this.CodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeDescriptionField, value) != true)) {
                    this.CodeDescriptionField = value;
                    this.RaisePropertyChanged("CodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnrollmentLeadDays {
            get {
                return this.EnrollmentLeadDaysField;
            }
            set {
                if ((this.EnrollmentLeadDaysField.Equals(value) != true)) {
                    this.EnrollmentLeadDaysField = value;
                    this.RaisePropertyChanged("EnrollmentLeadDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Identity {
            get {
                return this.IdentityField;
            }
            set {
                if ((this.IdentityField.Equals(value) != true)) {
                    this.IdentityField = value;
                    this.RaisePropertyChanged("Identity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetailMarketCode {
            get {
                return this.RetailMarketCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RetailMarketCodeField, value) != true)) {
                    this.RetailMarketCodeField = value;
                    this.RaisePropertyChanged("RetailMarketCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailMarketID {
            get {
                return this.RetailMarketIDField;
            }
            set {
                if ((this.RetailMarketIDField.Equals(value) != true)) {
                    this.RetailMarketIDField = value;
                    this.RaisePropertyChanged("RetailMarketID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSSalesChannelUser", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSSalesChannelUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChannelManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDevelopmentManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLPChannelManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegacyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportsToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((this.ChannelIDField.Equals(value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelName {
            get {
                return this.ChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNameField, value) != true)) {
                    this.ChannelNameField = value;
                    this.RaisePropertyChanged("ChannelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateModified {
            get {
                return this.DateModifiedField;
            }
            set {
                if ((this.DateModifiedField.Equals(value) != true)) {
                    this.DateModifiedField = value;
                    this.RaisePropertyChanged("DateModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntityID {
            get {
                return this.EntityIDField;
            }
            set {
                if ((this.EntityIDField.Equals(value) != true)) {
                    this.EntityIDField = value;
                    this.RaisePropertyChanged("EntityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChannelManager {
            get {
                return this.IsChannelManagerField;
            }
            set {
                if ((this.IsChannelManagerField.Equals(value) != true)) {
                    this.IsChannelManagerField = value;
                    this.RaisePropertyChanged("IsChannelManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDevelopmentManager {
            get {
                return this.IsDevelopmentManagerField;
            }
            set {
                if ((this.IsDevelopmentManagerField.Equals(value) != true)) {
                    this.IsDevelopmentManagerField = value;
                    this.RaisePropertyChanged("IsDevelopmentManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLPChannelManager {
            get {
                return this.IsLPChannelManagerField;
            }
            set {
                if ((this.IsLPChannelManagerField.Equals(value) != true)) {
                    this.IsLPChannelManagerField = value;
                    this.RaisePropertyChanged("IsLPChannelManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegacyID {
            get {
                return this.LegacyIDField;
            }
            set {
                if ((this.LegacyIDField.Equals(value) != true)) {
                    this.LegacyIDField = value;
                    this.RaisePropertyChanged("LegacyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportsTo {
            get {
                return this.ReportsToField;
            }
            set {
                if ((this.ReportsToField.Equals(value) != true)) {
                    this.ReportsToField = value;
                    this.RaisePropertyChanged("ReportsTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UserGuidField, value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSRetailMarket", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSRetailMarket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarketCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PucCertificationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailMarketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WholesaleMarkedIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInactive {
            get {
                return this.IsInactiveField;
            }
            set {
                if ((this.IsInactiveField.Equals(value) != true)) {
                    this.IsInactiveField = value;
                    this.RaisePropertyChanged("IsInactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketCode {
            get {
                return this.MarketCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketCodeField, value) != true)) {
                    this.MarketCodeField = value;
                    this.RaisePropertyChanged("MarketCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PucCertificationNumber {
            get {
                return this.PucCertificationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PucCertificationNumberField, value) != true)) {
                    this.PucCertificationNumberField = value;
                    this.RaisePropertyChanged("PucCertificationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailMarketId {
            get {
                return this.RetailMarketIdField;
            }
            set {
                if ((this.RetailMarketIdField.Equals(value) != true)) {
                    this.RetailMarketIdField = value;
                    this.RaisePropertyChanged("RetailMarketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WholesaleMarkedId {
            get {
                return this.WholesaleMarkedIdField;
            }
            set {
                if ((this.WholesaleMarkedIdField.Equals(value) != true)) {
                    this.WholesaleMarkedIdField = value;
                    this.RaisePropertyChanged("WholesaleMarkedId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSSalesChannel", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSSalesChannel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChannelDevelopmentManagerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelGroupIdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelTypeIdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasManagedUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelDescription {
            get {
                return this.ChannelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelDescriptionField, value) != true)) {
                    this.ChannelDescriptionField = value;
                    this.RaisePropertyChanged("ChannelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChannelDevelopmentManagerID {
            get {
                return this.ChannelDevelopmentManagerIDField;
            }
            set {
                if ((this.ChannelDevelopmentManagerIDField.Equals(value) != true)) {
                    this.ChannelDevelopmentManagerIDField = value;
                    this.RaisePropertyChanged("ChannelDevelopmentManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelGroupIdentity {
            get {
                return this.ChannelGroupIdentityField;
            }
            set {
                if ((this.ChannelGroupIdentityField.Equals(value) != true)) {
                    this.ChannelGroupIdentityField = value;
                    this.RaisePropertyChanged("ChannelGroupIdentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelID {
            get {
                return this.ChannelIDField;
            }
            set {
                if ((this.ChannelIDField.Equals(value) != true)) {
                    this.ChannelIDField = value;
                    this.RaisePropertyChanged("ChannelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelName {
            get {
                return this.ChannelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelNameField, value) != true)) {
                    this.ChannelNameField = value;
                    this.RaisePropertyChanged("ChannelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelTypeIdentity {
            get {
                return this.ChannelTypeIdentityField;
            }
            set {
                if ((this.ChannelTypeIdentityField.Equals(value) != true)) {
                    this.ChannelTypeIdentityField = value;
                    this.RaisePropertyChanged("ChannelTypeIdentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasManagedUsers {
            get {
                return this.HasManagedUsersField;
            }
            set {
                if ((this.HasManagedUsersField.Equals(value) != true)) {
                    this.HasManagedUsersField = value;
                    this.RaisePropertyChanged("HasManagedUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInActive {
            get {
                return this.IsInActiveField;
            }
            set {
                if ((this.IsInActiveField.Equals(value) != true)) {
                    this.IsInActiveField = value;
                    this.RaisePropertyChanged("IsInActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessActivity", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class BusinessActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessActivityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityField, value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessActivityID {
            get {
                return this.BusinessActivityIDField;
            }
            set {
                if ((this.BusinessActivityIDField.Equals(value) != true)) {
                    this.BusinessActivityIDField = value;
                    this.RaisePropertyChanged("BusinessActivityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class BusinessType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessTypeID {
            get {
                return this.BusinessTypeIDField;
            }
            set {
                if ((this.BusinessTypeIDField.Equals(value) != true)) {
                    this.BusinessTypeIDField = value;
                    this.RaisePropertyChanged("BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentType", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSDocumentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((this.DocTypeIDField.Equals(value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentMappingData", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities.Documents")]
    [System.SerializableAttribute()]
    public partial class WSDocumentMappingData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentFieldLocation> DocumentFieldLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentField> DocumentFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentMap> DocumentMapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentType1> DocumentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocument> DocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentFieldLocation> DocumentFieldLocations {
            get {
                return this.DocumentFieldLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentFieldLocationsField, value) != true)) {
                    this.DocumentFieldLocationsField = value;
                    this.RaisePropertyChanged("DocumentFieldLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentField> DocumentFields {
            get {
                return this.DocumentFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentFieldsField, value) != true)) {
                    this.DocumentFieldsField = value;
                    this.RaisePropertyChanged("DocumentFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentMap> DocumentMaps {
            get {
                return this.DocumentMapsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentMapsField, value) != true)) {
                    this.DocumentMapsField = value;
                    this.RaisePropertyChanged("DocumentMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentType1> DocumentTypes {
            get {
                return this.DocumentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypesField, value) != true)) {
                    this.DocumentTypesField = value;
                    this.RaisePropertyChanged("DocumentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocument> Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasErrors {
            get {
                return this.HasErrorsField;
            }
            set {
                if ((this.HasErrorsField.Equals(value) != true)) {
                    this.HasErrorsField = value;
                    this.RaisePropertyChanged("HasErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentFieldLocation", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities.Documents")]
    [System.SerializableAttribute()]
    public partial class WSDocumentFieldLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationX {
            get {
                return this.LocationXField;
            }
            set {
                if ((this.LocationXField.Equals(value) != true)) {
                    this.LocationXField = value;
                    this.RaisePropertyChanged("LocationX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationY {
            get {
                return this.LocationYField;
            }
            set {
                if ((this.LocationYField.Equals(value) != true)) {
                    this.LocationYField = value;
                    this.RaisePropertyChanged("LocationY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentField", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities.Documents")]
    [System.SerializableAttribute()]
    public partial class WSDocumentField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FieldTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Prompt1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Prompt2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldID {
            get {
                return this.FieldIDField;
            }
            set {
                if ((this.FieldIDField.Equals(value) != true)) {
                    this.FieldIDField = value;
                    this.RaisePropertyChanged("FieldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FieldTypeID {
            get {
                return this.FieldTypeIDField;
            }
            set {
                if ((this.FieldTypeIDField.Equals(value) != true)) {
                    this.FieldTypeIDField = value;
                    this.RaisePropertyChanged("FieldTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prompt1 {
            get {
                return this.Prompt1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Prompt1Field, value) != true)) {
                    this.Prompt1Field = value;
                    this.RaisePropertyChanged("Prompt1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prompt2 {
            get {
                return this.Prompt2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Prompt2Field, value) != true)) {
                    this.Prompt2Field = value;
                    this.RaisePropertyChanged("Prompt2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentMap", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities.Documents")]
    [System.SerializableAttribute()]
    public partial class WSDocumentMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AccountTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BrandIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentMapIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MarketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TemplateTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountTypeID {
            get {
                return this.AccountTypeIDField;
            }
            set {
                if ((this.AccountTypeIDField.Equals(value) != true)) {
                    this.AccountTypeIDField = value;
                    this.RaisePropertyChanged("AccountTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentMapID {
            get {
                return this.DocumentMapIDField;
            }
            set {
                if ((this.DocumentMapIDField.Equals(value) != true)) {
                    this.DocumentMapIDField = value;
                    this.RaisePropertyChanged("DocumentMapID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MarketID {
            get {
                return this.MarketIDField;
            }
            set {
                if ((this.MarketIDField.Equals(value) != true)) {
                    this.MarketIDField = value;
                    this.RaisePropertyChanged("MarketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TemplateTypeID {
            get {
                return this.TemplateTypeIDField;
            }
            set {
                if ((this.TemplateTypeIDField.Equals(value) != true)) {
                    this.TemplateTypeIDField = value;
                    this.RaisePropertyChanged("TemplateTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocumentType", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities.Documents")]
    [System.SerializableAttribute()]
    public partial class WSDocumentType1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxRecords {
            get {
                return this.MaxRecordsField;
            }
            set {
                if ((this.MaxRecordsField.Equals(value) != true)) {
                    this.MaxRecordsField = value;
                    this.RaisePropertyChanged("MaxRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSDocument", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices.WSEntities.Documents")]
    [System.SerializableAttribute()]
    public partial class WSDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocOrientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocOrientation {
            get {
                return this.DocOrientationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocOrientationField, value) != true)) {
                    this.DocOrientationField = value;
                    this.RaisePropertyChanged("DocOrientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentVersion {
            get {
                return this.DocumentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentVersionField, value) != true)) {
                    this.DocumentVersionField = value;
                    this.RaisePropertyChanged("DocumentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSAccountType", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSAccountType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountTypeId {
            get {
                return this.AccountTypeIdField;
            }
            set {
                if ((this.AccountTypeIdField.Equals(value) != true)) {
                    this.AccountTypeIdField = value;
                    this.RaisePropertyChanged("AccountTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommonServicesAPI.ICommonServices")]
    public interface ICommonServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilitiesByUserGuidAndZipcode", ReplyAction="http://tempuri.org/ICommonServices/GetUtilitiesByUserGuidAndZipcodeResponse")]
        OrdersAPITests.CommonServicesAPI.WSUtilityResult GetUtilitiesByUserGuidAndZipcode(string UserGuid, string Zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilitiesByUserGuidAndZipcode", ReplyAction="http://tempuri.org/ICommonServices/GetUtilitiesByUserGuidAndZipcodeResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSUtilityResult> GetUtilitiesByUserGuidAndZipcodeAsync(string UserGuid, string Zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilityById", ReplyAction="http://tempuri.org/ICommonServices/GetUtilityByIdResponse")]
        OrdersAPITests.CommonServicesAPI.WSUtilityResult GetUtilityById(int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilityById", ReplyAction="http://tempuri.org/ICommonServices/GetUtilityByIdResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSUtilityResult> GetUtilityByIdAsync(int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetActiveUtilities", ReplyAction="http://tempuri.org/ICommonServices/GetActiveUtilitiesResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility> GetActiveUtilities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetActiveUtilities", ReplyAction="http://tempuri.org/ICommonServices/GetActiveUtilitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility>> GetActiveUtilitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilitiesByMarketAndSalesChannel", ReplyAction="http://tempuri.org/ICommonServices/GetUtilitiesByMarketAndSalesChannelResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility> GetUtilitiesByMarketAndSalesChannel(string market, string salesChannelCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilitiesByMarketAndSalesChannel", ReplyAction="http://tempuri.org/ICommonServices/GetUtilitiesByMarketAndSalesChannelResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility>> GetUtilitiesByMarketAndSalesChannelAsync(string market, string salesChannelCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilityByUtilityCode", ReplyAction="http://tempuri.org/ICommonServices/GetUtilityByUtilityCodeResponse")]
        OrdersAPITests.CommonServicesAPI.WSUtility GetUtilityByUtilityCode(string utilityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUtilityByUtilityCode", ReplyAction="http://tempuri.org/ICommonServices/GetUtilityByUtilityCodeResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSUtility> GetUtilityByUtilityCodeAsync(string utilityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetActiveMarkets", ReplyAction="http://tempuri.org/ICommonServices/GetActiveMarketsResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket> GetActiveMarkets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetActiveMarkets", ReplyAction="http://tempuri.org/ICommonServices/GetActiveMarketsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket>> GetActiveMarketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelUser", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelUserResponse")]
        OrdersAPITests.CommonServicesAPI.WSSalesChannelUserResult GetSalesChannelUser(string UserGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelUser", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelUserResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSSalesChannelUserResult> GetSalesChannelUserAsync(string UserGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetActiveSalesChannels", ReplyAction="http://tempuri.org/ICommonServices/GetActiveSalesChannelsResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannel> GetActiveSalesChannels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetActiveSalesChannels", ReplyAction="http://tempuri.org/ICommonServices/GetActiveSalesChannelsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannel>> GetActiveSalesChannelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelById", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelByIdResponse")]
        OrdersAPITests.CommonServicesAPI.WSSalesChannel GetSalesChannelById(int salesChannelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelById", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelByIdResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSSalesChannel> GetSalesChannelByIdAsync(int salesChannelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelSupportEmailList", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelSupportEmailListResponse")]
        System.Collections.Generic.List<string> GetSalesChannelSupportEmailList(int channelId, string fromEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelSupportEmailList", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelSupportEmailListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetSalesChannelSupportEmailListAsync(int channelId, string fromEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetMarketsBySalesChannelCode", ReplyAction="http://tempuri.org/ICommonServices/GetMarketsBySalesChannelCodeResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket> GetMarketsBySalesChannelCode(string salesChannelCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetMarketsBySalesChannelCode", ReplyAction="http://tempuri.org/ICommonServices/GetMarketsBySalesChannelCodeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket>> GetMarketsBySalesChannelCodeAsync(string salesChannelCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelUsersByDeviceID", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelUsersByDeviceIDResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannelUser> GetSalesChannelUsersByDeviceID(string deviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetSalesChannelUsersByDeviceID", ReplyAction="http://tempuri.org/ICommonServices/GetSalesChannelUsersByDeviceIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannelUser>> GetSalesChannelUsersByDeviceIDAsync(string deviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetBusinessActivities", ReplyAction="http://tempuri.org/ICommonServices/GetBusinessActivitiesResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessActivity> GetBusinessActivities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetBusinessActivities", ReplyAction="http://tempuri.org/ICommonServices/GetBusinessActivitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessActivity>> GetBusinessActivitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetBusinessTypes", ReplyAction="http://tempuri.org/ICommonServices/GetBusinessTypesResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessType> GetBusinessTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetBusinessTypes", ReplyAction="http://tempuri.org/ICommonServices/GetBusinessTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessType>> GetBusinessTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUserIdByUsername", ReplyAction="http://tempuri.org/ICommonServices/GetUserIdByUsernameResponse")]
        int GetUserIdByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetUserIdByUsername", ReplyAction="http://tempuri.org/ICommonServices/GetUserIdByUsernameResponse")]
        System.Threading.Tasks.Task<int> GetUserIdByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetDocumentTypes", ReplyAction="http://tempuri.org/ICommonServices/GetDocumentTypesResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentType> GetDocumentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetDocumentTypes", ReplyAction="http://tempuri.org/ICommonServices/GetDocumentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentType>> GetDocumentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetDocumentMasterData", ReplyAction="http://tempuri.org/ICommonServices/GetDocumentMasterDataResponse")]
        OrdersAPITests.CommonServicesAPI.WSDocumentMappingData GetDocumentMasterData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetDocumentMasterData", ReplyAction="http://tempuri.org/ICommonServices/GetDocumentMasterDataResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSDocumentMappingData> GetDocumentMasterDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetNewContractNumber", ReplyAction="http://tempuri.org/ICommonServices/GetNewContractNumberResponse")]
        string GetNewContractNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetNewContractNumber", ReplyAction="http://tempuri.org/ICommonServices/GetNewContractNumberResponse")]
        System.Threading.Tasks.Task<string> GetNewContractNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/IsAccountNumberInSystem", ReplyAction="http://tempuri.org/ICommonServices/IsAccountNumberInSystemResponse")]
        OrdersAPITests.CommonServicesAPI.WSResult IsAccountNumberInSystem(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/IsAccountNumberInSystem", ReplyAction="http://tempuri.org/ICommonServices/IsAccountNumberInSystemResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSResult> IsAccountNumberInSystemAsync(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/IsAccountNumberValid", ReplyAction="http://tempuri.org/ICommonServices/IsAccountNumberValidResponse")]
        OrdersAPITests.CommonServicesAPI.WSResult IsAccountNumberValid(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/IsAccountNumberValid", ReplyAction="http://tempuri.org/ICommonServices/IsAccountNumberValidResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSResult> IsAccountNumberValidAsync(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetAccountTypes", ReplyAction="http://tempuri.org/ICommonServices/GetAccountTypesResponse")]
        System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSAccountType> GetAccountTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetAccountTypes", ReplyAction="http://tempuri.org/ICommonServices/GetAccountTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSAccountType>> GetAccountTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServicesChannel : OrdersAPITests.CommonServicesAPI.ICommonServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServicesClient : System.ServiceModel.ClientBase<OrdersAPITests.CommonServicesAPI.ICommonServices>, OrdersAPITests.CommonServicesAPI.ICommonServices {
        
        public CommonServicesClient() {
        }
        
        public CommonServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OrdersAPITests.CommonServicesAPI.WSUtilityResult GetUtilitiesByUserGuidAndZipcode(string UserGuid, string Zipcode) {
            return base.Channel.GetUtilitiesByUserGuidAndZipcode(UserGuid, Zipcode);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSUtilityResult> GetUtilitiesByUserGuidAndZipcodeAsync(string UserGuid, string Zipcode) {
            return base.Channel.GetUtilitiesByUserGuidAndZipcodeAsync(UserGuid, Zipcode);
        }
        
        public OrdersAPITests.CommonServicesAPI.WSUtilityResult GetUtilityById(int utilityId) {
            return base.Channel.GetUtilityById(utilityId);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSUtilityResult> GetUtilityByIdAsync(int utilityId) {
            return base.Channel.GetUtilityByIdAsync(utilityId);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility> GetActiveUtilities() {
            return base.Channel.GetActiveUtilities();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility>> GetActiveUtilitiesAsync() {
            return base.Channel.GetActiveUtilitiesAsync();
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility> GetUtilitiesByMarketAndSalesChannel(string market, string salesChannelCode) {
            return base.Channel.GetUtilitiesByMarketAndSalesChannel(market, salesChannelCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSUtility>> GetUtilitiesByMarketAndSalesChannelAsync(string market, string salesChannelCode) {
            return base.Channel.GetUtilitiesByMarketAndSalesChannelAsync(market, salesChannelCode);
        }
        
        public OrdersAPITests.CommonServicesAPI.WSUtility GetUtilityByUtilityCode(string utilityCode) {
            return base.Channel.GetUtilityByUtilityCode(utilityCode);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSUtility> GetUtilityByUtilityCodeAsync(string utilityCode) {
            return base.Channel.GetUtilityByUtilityCodeAsync(utilityCode);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket> GetActiveMarkets() {
            return base.Channel.GetActiveMarkets();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket>> GetActiveMarketsAsync() {
            return base.Channel.GetActiveMarketsAsync();
        }
        
        public OrdersAPITests.CommonServicesAPI.WSSalesChannelUserResult GetSalesChannelUser(string UserGuid) {
            return base.Channel.GetSalesChannelUser(UserGuid);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSSalesChannelUserResult> GetSalesChannelUserAsync(string UserGuid) {
            return base.Channel.GetSalesChannelUserAsync(UserGuid);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannel> GetActiveSalesChannels() {
            return base.Channel.GetActiveSalesChannels();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannel>> GetActiveSalesChannelsAsync() {
            return base.Channel.GetActiveSalesChannelsAsync();
        }
        
        public OrdersAPITests.CommonServicesAPI.WSSalesChannel GetSalesChannelById(int salesChannelId) {
            return base.Channel.GetSalesChannelById(salesChannelId);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSSalesChannel> GetSalesChannelByIdAsync(int salesChannelId) {
            return base.Channel.GetSalesChannelByIdAsync(salesChannelId);
        }
        
        public System.Collections.Generic.List<string> GetSalesChannelSupportEmailList(int channelId, string fromEmail) {
            return base.Channel.GetSalesChannelSupportEmailList(channelId, fromEmail);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetSalesChannelSupportEmailListAsync(int channelId, string fromEmail) {
            return base.Channel.GetSalesChannelSupportEmailListAsync(channelId, fromEmail);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket> GetMarketsBySalesChannelCode(string salesChannelCode) {
            return base.Channel.GetMarketsBySalesChannelCode(salesChannelCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSRetailMarket>> GetMarketsBySalesChannelCodeAsync(string salesChannelCode) {
            return base.Channel.GetMarketsBySalesChannelCodeAsync(salesChannelCode);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannelUser> GetSalesChannelUsersByDeviceID(string deviceID) {
            return base.Channel.GetSalesChannelUsersByDeviceID(deviceID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSSalesChannelUser>> GetSalesChannelUsersByDeviceIDAsync(string deviceID) {
            return base.Channel.GetSalesChannelUsersByDeviceIDAsync(deviceID);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessActivity> GetBusinessActivities() {
            return base.Channel.GetBusinessActivities();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessActivity>> GetBusinessActivitiesAsync() {
            return base.Channel.GetBusinessActivitiesAsync();
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessType> GetBusinessTypes() {
            return base.Channel.GetBusinessTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.BusinessType>> GetBusinessTypesAsync() {
            return base.Channel.GetBusinessTypesAsync();
        }
        
        public int GetUserIdByUsername(string username) {
            return base.Channel.GetUserIdByUsername(username);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdByUsernameAsync(string username) {
            return base.Channel.GetUserIdByUsernameAsync(username);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentType> GetDocumentTypes() {
            return base.Channel.GetDocumentTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSDocumentType>> GetDocumentTypesAsync() {
            return base.Channel.GetDocumentTypesAsync();
        }
        
        public OrdersAPITests.CommonServicesAPI.WSDocumentMappingData GetDocumentMasterData() {
            return base.Channel.GetDocumentMasterData();
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSDocumentMappingData> GetDocumentMasterDataAsync() {
            return base.Channel.GetDocumentMasterDataAsync();
        }
        
        public string GetNewContractNumber() {
            return base.Channel.GetNewContractNumber();
        }
        
        public System.Threading.Tasks.Task<string> GetNewContractNumberAsync() {
            return base.Channel.GetNewContractNumberAsync();
        }
        
        public OrdersAPITests.CommonServicesAPI.WSResult IsAccountNumberInSystem(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberInSystem(accountNumber, utilityId);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSResult> IsAccountNumberInSystemAsync(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberInSystemAsync(accountNumber, utilityId);
        }
        
        public OrdersAPITests.CommonServicesAPI.WSResult IsAccountNumberValid(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberValid(accountNumber, utilityId);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CommonServicesAPI.WSResult> IsAccountNumberValidAsync(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberValidAsync(accountNumber, utilityId);
        }
        
        public System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSAccountType> GetAccountTypes() {
            return base.Channel.GetAccountTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrdersAPITests.CommonServicesAPI.WSAccountType>> GetAccountTypesAsync() {
            return base.Channel.GetAccountTypesAsync();
        }
    }
}
