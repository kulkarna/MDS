//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UsageWindowsService.OfferEngineAccountsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAccountInfo", Namespace="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0")]
    [System.SerializableAttribute()]
    public partial class ServiceAccountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string UtilityField;
        
        private string AccountNumberField;
        
        private string UpdateSourceField;
        
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ICapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TCapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LbmpZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoadProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoadShapeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LossFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceAddressZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingAccountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Utility {
            get {
                return this.UtilityField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilityField, value) != true)) {
                    this.UtilityField = value;
                    this.RaisePropertyChanged("Utility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string UpdateSource {
            get {
                return this.UpdateSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateSourceField, value) != true)) {
                    this.UpdateSourceField = value;
                    this.RaisePropertyChanged("UpdateSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<decimal> ICap {
            get {
                return this.ICapField;
            }
            set {
                if ((this.ICapField.Equals(value) != true)) {
                    this.ICapField = value;
                    this.RaisePropertyChanged("ICap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<decimal> TCap {
            get {
                return this.TCapField;
            }
            set {
                if ((this.TCapField.Equals(value) != true)) {
                    this.TCapField = value;
                    this.RaisePropertyChanged("TCap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Grid {
            get {
                return this.GridField;
            }
            set {
                if ((object.ReferenceEquals(this.GridField, value) != true)) {
                    this.GridField = value;
                    this.RaisePropertyChanged("Grid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string LbmpZone {
            get {
                return this.LbmpZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.LbmpZoneField, value) != true)) {
                    this.LbmpZoneField = value;
                    this.RaisePropertyChanged("LbmpZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string LoadProfile {
            get {
                return this.LoadProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadProfileField, value) != true)) {
                    this.LoadProfileField = value;
                    this.RaisePropertyChanged("LoadProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string LoadShapeId {
            get {
                return this.LoadShapeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadShapeIdField, value) != true)) {
                    this.LoadShapeIdField = value;
                    this.RaisePropertyChanged("LoadShapeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<decimal> LossFactor {
            get {
                return this.LossFactorField;
            }
            set {
                if ((this.LossFactorField.Equals(value) != true)) {
                    this.LossFactorField = value;
                    this.RaisePropertyChanged("LossFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string MeterType {
            get {
                return this.MeterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterTypeField, value) != true)) {
                    this.MeterTypeField = value;
                    this.RaisePropertyChanged("MeterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string RateClass {
            get {
                return this.RateClassField;
            }
            set {
                if ((object.ReferenceEquals(this.RateClassField, value) != true)) {
                    this.RateClassField = value;
                    this.RaisePropertyChanged("RateClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string ServiceClass {
            get {
                return this.ServiceClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceClassField, value) != true)) {
                    this.ServiceClassField = value;
                    this.RaisePropertyChanged("ServiceClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string TariffCode {
            get {
                return this.TariffCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffCodeField, value) != true)) {
                    this.TariffCodeField = value;
                    this.RaisePropertyChanged("TariffCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string Voltage {
            get {
                return this.VoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.VoltageField, value) != true)) {
                    this.VoltageField = value;
                    this.RaisePropertyChanged("Voltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string ServiceAddressZipCode {
            get {
                return this.ServiceAddressZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceAddressZipCodeField, value) != true)) {
                    this.ServiceAddressZipCodeField = value;
                    this.RaisePropertyChanged("ServiceAddressZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string MeterNumber {
            get {
                return this.MeterNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterNumberField, value) != true)) {
                    this.MeterNumberField = value;
                    this.RaisePropertyChanged("MeterNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string NameKey {
            get {
                return this.NameKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.NameKeyField, value) != true)) {
                    this.NameKeyField = value;
                    this.RaisePropertyChanged("NameKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string Strata {
            get {
                return this.StrataField;
            }
            set {
                if ((object.ReferenceEquals(this.StrataField, value) != true)) {
                    this.StrataField = value;
                    this.RaisePropertyChanged("Strata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public string BillingAccount {
            get {
                return this.BillingAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAccountField, value) != true)) {
                    this.BillingAccountField = value;
                    this.RaisePropertyChanged("BillingAccount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemError", Namespace="http://LibertyPowerCorp.com/RepositoryManagement/Common/1.0.0")]
    [System.SerializableAttribute()]
    public partial class SystemError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataStoreError", Namespace="http://LibertyPowerCorp.com/RepositoryManagement/Common/1.0.0")]
    [System.SerializableAttribute()]
    public partial class DataStoreError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessProcessError", Namespace="http://LibertyPowerCorp.com/RepositoryManagement/Common/1.0.0")]
    [System.SerializableAttribute()]
    public partial class BusinessProcessError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackedField", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.RepositoryManagement.Dto")]
    public enum TrackedField : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountType = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingAccount = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grid = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICap = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LBMPZone = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadProfile = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadShapeID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LossFactor = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterNumber = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterType = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameKey = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateClass = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceAddressZipCode = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceClass = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Strata = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TariffCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Utility = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TCap = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voltage = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zone = 19,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0", ConfigurationName="OfferEngineAccountsService.IAccounts")]
    public interface IAccounts {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/SubmitServiceAccountUpdate", ReplyAction="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/SubmitServiceAccountUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(UsageWindowsService.OfferEngineAccountsService.SystemError), Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/SubmitServiceAccountUpdateSystemErrorFault", Name="SystemError", Namespace="http://LibertyPowerCorp.com/RepositoryManagement/Common/1.0.0")]
        [System.ServiceModel.FaultContractAttribute(typeof(UsageWindowsService.OfferEngineAccountsService.DataStoreError), Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/SubmitServiceAccountUpdateDataStoreErrorFault", Name="DataStoreError", Namespace="http://LibertyPowerCorp.com/RepositoryManagement/Common/1.0.0")]
        [System.ServiceModel.FaultContractAttribute(typeof(UsageWindowsService.OfferEngineAccountsService.BusinessProcessError), Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/SubmitServiceAccountUpdateBusinessProcessErrorFault", Name="BusinessProcessError", Namespace="http://LibertyPowerCorp.com/RepositoryManagement/Common/1.0.0")]
        void SubmitServiceAccountUpdate(UsageWindowsService.OfferEngineAccountsService.ServiceAccountInfo value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/SubmitServiceAccountUpdate", ReplyAction="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/SubmitServiceAccountUpdateResponse")]
        System.Threading.Tasks.Task SubmitServiceAccountUpdateAsync(UsageWindowsService.OfferEngineAccountsService.ServiceAccountInfo value);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/UpdateCrmIfAccountMeetsPropertiesRequirements")]
        void UpdateCrmIfAccountMeetsPropertiesRequirements(System.Nullable<int> utilityId, string account);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/UpdateCrmIfAccountMeetsPropertiesRequirements")]
        System.Threading.Tasks.Task UpdateCrmIfAccountMeetsPropertiesRequirementsAsync(System.Nullable<int> utilityId, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/GetServiceAccountProperties", ReplyAction="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/GetServiceAccountPropertiesResponse")]
        System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string> GetServiceAccountProperties(string messageId, string utilityCode, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/GetServiceAccountProperties", ReplyAction="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/GetServiceAccountPropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string>> GetServiceAccountPropertiesAsync(string messageId, string utilityCode, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/UpdateServiceAccountProperties", ReplyAction="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/UpdateServiceAccountPropertiesResponse")]
        void UpdateServiceAccountProperties(string messageId, string utilityCode, string accountNumber, string updateSource, string updateUser, System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string> accountPropertiesNameValueList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/UpdateServiceAccountProperties", ReplyAction="http://LibertyPowerCorp.com/RepositoryManagement/AccountManagement/1.0.0/IAccount" +
            "s/UpdateServiceAccountPropertiesResponse")]
        System.Threading.Tasks.Task UpdateServiceAccountPropertiesAsync(string messageId, string utilityCode, string accountNumber, string updateSource, string updateUser, System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string> accountPropertiesNameValueList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountsChannel : UsageWindowsService.OfferEngineAccountsService.IAccounts, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountsClient : System.ServiceModel.ClientBase<UsageWindowsService.OfferEngineAccountsService.IAccounts>, UsageWindowsService.OfferEngineAccountsService.IAccounts {
        
        public AccountsClient() {
        }
        
        public AccountsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SubmitServiceAccountUpdate(UsageWindowsService.OfferEngineAccountsService.ServiceAccountInfo value) {
            base.Channel.SubmitServiceAccountUpdate(value);
        }
        
        public System.Threading.Tasks.Task SubmitServiceAccountUpdateAsync(UsageWindowsService.OfferEngineAccountsService.ServiceAccountInfo value) {
            return base.Channel.SubmitServiceAccountUpdateAsync(value);
        }
        
        public void UpdateCrmIfAccountMeetsPropertiesRequirements(System.Nullable<int> utilityId, string account) {
            base.Channel.UpdateCrmIfAccountMeetsPropertiesRequirements(utilityId, account);
        }
        
        public System.Threading.Tasks.Task UpdateCrmIfAccountMeetsPropertiesRequirementsAsync(System.Nullable<int> utilityId, string account) {
            return base.Channel.UpdateCrmIfAccountMeetsPropertiesRequirementsAsync(utilityId, account);
        }
        
        public System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string> GetServiceAccountProperties(string messageId, string utilityCode, string accountNumber) {
            return base.Channel.GetServiceAccountProperties(messageId, utilityCode, accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string>> GetServiceAccountPropertiesAsync(string messageId, string utilityCode, string accountNumber) {
            return base.Channel.GetServiceAccountPropertiesAsync(messageId, utilityCode, accountNumber);
        }
        
        public void UpdateServiceAccountProperties(string messageId, string utilityCode, string accountNumber, string updateSource, string updateUser, System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string> accountPropertiesNameValueList) {
            base.Channel.UpdateServiceAccountProperties(messageId, utilityCode, accountNumber, updateSource, updateUser, accountPropertiesNameValueList);
        }
        
        public System.Threading.Tasks.Task UpdateServiceAccountPropertiesAsync(string messageId, string utilityCode, string accountNumber, string updateSource, string updateUser, System.Collections.Generic.Dictionary<UsageWindowsService.OfferEngineAccountsService.TrackedField, string> accountPropertiesNameValueList) {
            return base.Channel.UpdateServiceAccountPropertiesAsync(messageId, utilityCode, accountNumber, updateSource, updateUser, accountPropertiesNameValueList);
        }
    }
}
