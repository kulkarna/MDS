//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
// 
#pragma warning disable 1591

namespace LibertyPower.Business.CustomerManagement.AccountManagement.com.libertypowercorp.enrollment {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RepositoryServicesSoap", Namespace="http://enrollment.libertypowercorp.com/")]
    public partial class RepositoryServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AppendDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppendMultipleDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTemplateIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeAltOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLetterQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProtectDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnProtectDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestMeOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteDocHistoryByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteDocHistoryByContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilePathByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilledTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTemplateMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTemplateMappingByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTemplateID_SupressContractNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentPrintHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateVersionsByContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFilledTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoGenerateLettersOfflineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDocumentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoGenerateLettersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDocumentBytesAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByIDDSAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTemplateIDAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByType_HideContractNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeAttached_HideContractNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeDSAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback File2BytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeAlt2BytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDocumentByTypeDS2BytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepositoryPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepositoryURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepositoryHistoryLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepositoryPreviewLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepositoryPrintLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyRepositoryLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateFolderPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateFullPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateFullPath_ProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentTypeInfo_ByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentTypeInfo_ByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentSetupInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RepositoryServices() {
            this.Url = global::LibertyPower.Business.CustomerManagement.AccountManagement.Properties.Settings.Default.AccountManagement_com_libertypowercorp_enrollment_RepositoryServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AppendDocsCompletedEventHandler AppendDocsCompleted;
        
        /// <remarks/>
        public event AppendMultipleDocsCompletedEventHandler AppendMultipleDocsCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTemplateIDCompletedEventHandler GenerateDocumentByTemplateIDCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeCompletedEventHandler GenerateDocumentByTypeCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeAltCompletedEventHandler GenerateDocumentByTypeAltCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeDSCompletedEventHandler GenerateDocumentByTypeDSCompleted;
        
        /// <remarks/>
        public event GenerateLetterQueueCompletedEventHandler GenerateLetterQueueCompleted;
        
        /// <remarks/>
        public event LogErrorCompletedEventHandler LogErrorCompleted;
        
        /// <remarks/>
        public event ProtectDocumentCompletedEventHandler ProtectDocumentCompleted;
        
        /// <remarks/>
        public event UnProtectDocumentCompletedEventHandler UnProtectDocumentCompleted;
        
        /// <remarks/>
        public event TestMeCompletedEventHandler TestMeCompleted;
        
        /// <remarks/>
        public event WriteDocHistoryByAccountCompletedEventHandler WriteDocHistoryByAccountCompleted;
        
        /// <remarks/>
        public event WriteDocHistoryByContractCompletedEventHandler WriteDocHistoryByContractCompleted;
        
        /// <remarks/>
        public event GetFilePathByGuidCompletedEventHandler GetFilePathByGuidCompleted;
        
        /// <remarks/>
        public event GetFilledTemplateCompletedEventHandler GetFilledTemplateCompleted;
        
        /// <remarks/>
        public event FindTemplatesCompletedEventHandler FindTemplatesCompleted;
        
        /// <remarks/>
        public event GetTemplateMappingsCompletedEventHandler GetTemplateMappingsCompleted;
        
        /// <remarks/>
        public event InsertTemplateMappingCompletedEventHandler InsertTemplateMappingCompleted;
        
        /// <remarks/>
        public event DeleteTemplateMappingByIdCompletedEventHandler DeleteTemplateMappingByIdCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTemplateID_SupressContractNumberCompletedEventHandler GenerateDocumentByTemplateID_SupressContractNumberCompleted;
        
        /// <remarks/>
        public event GetErrorLogCompletedEventHandler GetErrorLogCompleted;
        
        /// <remarks/>
        public event GetDocumentPrintHistoryCompletedEventHandler GetDocumentPrintHistoryCompleted;
        
        /// <remarks/>
        public event GetTemplateVersionsByContractCompletedEventHandler GetTemplateVersionsByContractCompleted;
        
        /// <remarks/>
        public event DownloadFilledTemplateCompletedEventHandler DownloadFilledTemplateCompleted;
        
        /// <remarks/>
        public event AutoGenerateLettersOfflineCompletedEventHandler AutoGenerateLettersOfflineCompleted;
        
        /// <remarks/>
        public event AddDocumentTypeCompletedEventHandler AddDocumentTypeCompleted;
        
        /// <remarks/>
        public event AutoGenerateLettersCompletedEventHandler AutoGenerateLettersCompleted;
        
        /// <remarks/>
        public event GetDocumentCountCompletedEventHandler GetDocumentCountCompleted;
        
        /// <remarks/>
        public event SaveDocumentBytesAttachedCompletedEventHandler SaveDocumentBytesAttachedCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByIDDSAttachedCompletedEventHandler GenerateDocumentByIDDSAttachedCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTemplateIDAttachedCompletedEventHandler GenerateDocumentByTemplateIDAttachedCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeAttachedCompletedEventHandler GenerateDocumentByTypeAttachedCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByType_HideContractNumberCompletedEventHandler GenerateDocumentByType_HideContractNumberCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeAttached_HideContractNumberCompletedEventHandler GenerateDocumentByTypeAttached_HideContractNumberCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeDSAttachCompletedEventHandler GenerateDocumentByTypeDSAttachCompleted;
        
        /// <remarks/>
        public event File2BytesCompletedEventHandler File2BytesCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeAlt2BytesCompletedEventHandler GenerateDocumentByTypeAlt2BytesCompleted;
        
        /// <remarks/>
        public event GenerateDocumentByTypeDS2BytesCompletedEventHandler GenerateDocumentByTypeDS2BytesCompleted;
        
        /// <remarks/>
        public event GetRepositoryPathCompletedEventHandler GetRepositoryPathCompleted;
        
        /// <remarks/>
        public event GetRepositoryURLCompletedEventHandler GetRepositoryURLCompleted;
        
        /// <remarks/>
        public event RepositoryHistoryLocationCompletedEventHandler RepositoryHistoryLocationCompleted;
        
        /// <remarks/>
        public event RepositoryPreviewLocationCompletedEventHandler RepositoryPreviewLocationCompleted;
        
        /// <remarks/>
        public event RepositoryPrintLocationCompletedEventHandler RepositoryPrintLocationCompleted;
        
        /// <remarks/>
        public event VerifyRepositoryLocationsCompletedEventHandler VerifyRepositoryLocationsCompleted;
        
        /// <remarks/>
        public event GetTemplateFolderPathCompletedEventHandler GetTemplateFolderPathCompleted;
        
        /// <remarks/>
        public event GetTemplateFullPathCompletedEventHandler GetTemplateFullPathCompleted;
        
        /// <remarks/>
        public event GetTemplateFullPath_ProductCompletedEventHandler GetTemplateFullPath_ProductCompleted;
        
        /// <remarks/>
        public event DocumentTypeInfo_ByCodeCompletedEventHandler DocumentTypeInfo_ByCodeCompleted;
        
        /// <remarks/>
        public event DocumentTypeInfo_ByIDCompletedEventHandler DocumentTypeInfo_ByIDCompleted;
        
        /// <remarks/>
        public event DocumentSetupInfoCompletedEventHandler DocumentSetupInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/AppendDocs", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result AppendDocs(string firstFilePath, string fileToBeAppended, string destinationFilePath) {
            object[] results = this.Invoke("AppendDocs", new object[] {
                        firstFilePath,
                        fileToBeAppended,
                        destinationFilePath});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void AppendDocsAsync(string firstFilePath, string fileToBeAppended, string destinationFilePath) {
            this.AppendDocsAsync(firstFilePath, fileToBeAppended, destinationFilePath, null);
        }
        
        /// <remarks/>
        public void AppendDocsAsync(string firstFilePath, string fileToBeAppended, string destinationFilePath, object userState) {
            if ((this.AppendDocsOperationCompleted == null)) {
                this.AppendDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppendDocsOperationCompleted);
            }
            this.InvokeAsync("AppendDocs", new object[] {
                        firstFilePath,
                        fileToBeAppended,
                        destinationFilePath}, this.AppendDocsOperationCompleted, userState);
        }
        
        private void OnAppendDocsOperationCompleted(object arg) {
            if ((this.AppendDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppendDocsCompleted(this, new AppendDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/AppendMultipleDocs", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result AppendMultipleDocs(object[] filePaths, string destinationFilePath) {
            object[] results = this.Invoke("AppendMultipleDocs", new object[] {
                        filePaths,
                        destinationFilePath});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void AppendMultipleDocsAsync(object[] filePaths, string destinationFilePath) {
            this.AppendMultipleDocsAsync(filePaths, destinationFilePath, null);
        }
        
        /// <remarks/>
        public void AppendMultipleDocsAsync(object[] filePaths, string destinationFilePath, object userState) {
            if ((this.AppendMultipleDocsOperationCompleted == null)) {
                this.AppendMultipleDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppendMultipleDocsOperationCompleted);
            }
            this.InvokeAsync("AppendMultipleDocs", new object[] {
                        filePaths,
                        destinationFilePath}, this.AppendMultipleDocsOperationCompleted, userState);
        }
        
        private void OnAppendMultipleDocsOperationCompleted(object arg) {
            if ((this.AppendMultipleDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppendMultipleDocsCompleted(this, new AppendMultipleDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTemplateID", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTemplateID(int templateID, string contractNumber, bool blnIncludeTC) {
            object[] results = this.Invoke("GenerateDocumentByTemplateID", new object[] {
                        templateID,
                        contractNumber,
                        blnIncludeTC});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTemplateIDAsync(int templateID, string contractNumber, bool blnIncludeTC) {
            this.GenerateDocumentByTemplateIDAsync(templateID, contractNumber, blnIncludeTC, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTemplateIDAsync(int templateID, string contractNumber, bool blnIncludeTC, object userState) {
            if ((this.GenerateDocumentByTemplateIDOperationCompleted == null)) {
                this.GenerateDocumentByTemplateIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTemplateIDOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTemplateID", new object[] {
                        templateID,
                        contractNumber,
                        blnIncludeTC}, this.GenerateDocumentByTemplateIDOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTemplateIDOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTemplateIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTemplateIDCompleted(this, new GenerateDocumentByTemplateIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByType", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByType(int docType, string contractNumber, bool blnIncludeTC) {
            object[] results = this.Invoke("GenerateDocumentByType", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAsync(int docType, string contractNumber, bool blnIncludeTC) {
            this.GenerateDocumentByTypeAsync(docType, contractNumber, blnIncludeTC, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAsync(int docType, string contractNumber, bool blnIncludeTC, object userState) {
            if ((this.GenerateDocumentByTypeOperationCompleted == null)) {
                this.GenerateDocumentByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByType", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC}, this.GenerateDocumentByTypeOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeCompleted(this, new GenerateDocumentByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTypeAlt", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTypeAlt(int docTypeID, string contractNumber, object[] accountNumberList, bool blnIncludeAssocDocs, bool blnAttach, string user, string reasonCode) {
            object[] results = this.Invoke("GenerateDocumentByTypeAlt", new object[] {
                        docTypeID,
                        contractNumber,
                        accountNumberList,
                        blnIncludeAssocDocs,
                        blnAttach,
                        user,
                        reasonCode});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAltAsync(int docTypeID, string contractNumber, object[] accountNumberList, bool blnIncludeAssocDocs, bool blnAttach, string user, string reasonCode) {
            this.GenerateDocumentByTypeAltAsync(docTypeID, contractNumber, accountNumberList, blnIncludeAssocDocs, blnAttach, user, reasonCode, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAltAsync(int docTypeID, string contractNumber, object[] accountNumberList, bool blnIncludeAssocDocs, bool blnAttach, string user, string reasonCode, object userState) {
            if ((this.GenerateDocumentByTypeAltOperationCompleted == null)) {
                this.GenerateDocumentByTypeAltOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeAltOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTypeAlt", new object[] {
                        docTypeID,
                        contractNumber,
                        accountNumberList,
                        blnIncludeAssocDocs,
                        blnAttach,
                        user,
                        reasonCode}, this.GenerateDocumentByTypeAltOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeAltOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeAltCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeAltCompleted(this, new GenerateDocumentByTypeAltCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTypeDS", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTypeDS(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, string user, string reasonCode) {
            object[] results = this.Invoke("GenerateDocumentByTypeDS", new object[] {
                        docTypeID,
                        dsData,
                        blnIncludeAssocDocs,
                        user,
                        reasonCode});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeDSAsync(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, string user, string reasonCode) {
            this.GenerateDocumentByTypeDSAsync(docTypeID, dsData, blnIncludeAssocDocs, user, reasonCode, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeDSAsync(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, string user, string reasonCode, object userState) {
            if ((this.GenerateDocumentByTypeDSOperationCompleted == null)) {
                this.GenerateDocumentByTypeDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeDSOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTypeDS", new object[] {
                        docTypeID,
                        dsData,
                        blnIncludeAssocDocs,
                        user,
                        reasonCode}, this.GenerateDocumentByTypeDSOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeDSOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeDSCompleted(this, new GenerateDocumentByTypeDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateLetterQueue", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GenerateLetterQueue(string userName) {
            object[] results = this.Invoke("GenerateLetterQueue", new object[] {
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateLetterQueueAsync(string userName) {
            this.GenerateLetterQueueAsync(userName, null);
        }
        
        /// <remarks/>
        public void GenerateLetterQueueAsync(string userName, object userState) {
            if ((this.GenerateLetterQueueOperationCompleted == null)) {
                this.GenerateLetterQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLetterQueueOperationCompleted);
            }
            this.InvokeAsync("GenerateLetterQueue", new object[] {
                        userName}, this.GenerateLetterQueueOperationCompleted, userState);
        }
        
        private void OnGenerateLetterQueueOperationCompleted(object arg) {
            if ((this.GenerateLetterQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLetterQueueCompleted(this, new GenerateLetterQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/LogError", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogError(string appSource, string error_Text, EventLogEntryType entryType) {
            this.Invoke("LogError", new object[] {
                        appSource,
                        error_Text,
                        entryType});
        }
        
        /// <remarks/>
        public void LogErrorAsync(string appSource, string error_Text, EventLogEntryType entryType) {
            this.LogErrorAsync(appSource, error_Text, entryType, null);
        }
        
        /// <remarks/>
        public void LogErrorAsync(string appSource, string error_Text, EventLogEntryType entryType, object userState) {
            if ((this.LogErrorOperationCompleted == null)) {
                this.LogErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogErrorOperationCompleted);
            }
            this.InvokeAsync("LogError", new object[] {
                        appSource,
                        error_Text,
                        entryType}, this.LogErrorOperationCompleted, userState);
        }
        
        private void OnLogErrorOperationCompleted(object arg) {
            if ((this.LogErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/ProtectDocument", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result ProtectDocument(string documentPath, string destinationPath, ProtectionType protection) {
            object[] results = this.Invoke("ProtectDocument", new object[] {
                        documentPath,
                        destinationPath,
                        protection});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void ProtectDocumentAsync(string documentPath, string destinationPath, ProtectionType protection) {
            this.ProtectDocumentAsync(documentPath, destinationPath, protection, null);
        }
        
        /// <remarks/>
        public void ProtectDocumentAsync(string documentPath, string destinationPath, ProtectionType protection, object userState) {
            if ((this.ProtectDocumentOperationCompleted == null)) {
                this.ProtectDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProtectDocumentOperationCompleted);
            }
            this.InvokeAsync("ProtectDocument", new object[] {
                        documentPath,
                        destinationPath,
                        protection}, this.ProtectDocumentOperationCompleted, userState);
        }
        
        private void OnProtectDocumentOperationCompleted(object arg) {
            if ((this.ProtectDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProtectDocumentCompleted(this, new ProtectDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/UnProtectDocument", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result UnProtectDocument(string documentPath, string destinationPath) {
            object[] results = this.Invoke("UnProtectDocument", new object[] {
                        documentPath,
                        destinationPath});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void UnProtectDocumentAsync(string documentPath, string destinationPath) {
            this.UnProtectDocumentAsync(documentPath, destinationPath, null);
        }
        
        /// <remarks/>
        public void UnProtectDocumentAsync(string documentPath, string destinationPath, object userState) {
            if ((this.UnProtectDocumentOperationCompleted == null)) {
                this.UnProtectDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnProtectDocumentOperationCompleted);
            }
            this.InvokeAsync("UnProtectDocument", new object[] {
                        documentPath,
                        destinationPath}, this.UnProtectDocumentOperationCompleted, userState);
        }
        
        private void OnUnProtectDocumentOperationCompleted(object arg) {
            if ((this.UnProtectDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnProtectDocumentCompleted(this, new UnProtectDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/TestMe", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestMe() {
            object[] results = this.Invoke("TestMe", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestMeAsync() {
            this.TestMeAsync(null);
        }
        
        /// <remarks/>
        public void TestMeAsync(object userState) {
            if ((this.TestMeOperationCompleted == null)) {
                this.TestMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestMeOperationCompleted);
            }
            this.InvokeAsync("TestMe", new object[0], this.TestMeOperationCompleted, userState);
        }
        
        private void OnTestMeOperationCompleted(object arg) {
            if ((this.TestMeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestMeCompleted(this, new TestMeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/WriteDocHistoryByAccount", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result WriteDocHistoryByAccount(string accountID, int documentType, string documentPath, string userName) {
            object[] results = this.Invoke("WriteDocHistoryByAccount", new object[] {
                        accountID,
                        documentType,
                        documentPath,
                        userName});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void WriteDocHistoryByAccountAsync(string accountID, int documentType, string documentPath, string userName) {
            this.WriteDocHistoryByAccountAsync(accountID, documentType, documentPath, userName, null);
        }
        
        /// <remarks/>
        public void WriteDocHistoryByAccountAsync(string accountID, int documentType, string documentPath, string userName, object userState) {
            if ((this.WriteDocHistoryByAccountOperationCompleted == null)) {
                this.WriteDocHistoryByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteDocHistoryByAccountOperationCompleted);
            }
            this.InvokeAsync("WriteDocHistoryByAccount", new object[] {
                        accountID,
                        documentType,
                        documentPath,
                        userName}, this.WriteDocHistoryByAccountOperationCompleted, userState);
        }
        
        private void OnWriteDocHistoryByAccountOperationCompleted(object arg) {
            if ((this.WriteDocHistoryByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteDocHistoryByAccountCompleted(this, new WriteDocHistoryByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/WriteDocHistoryByContract", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result WriteDocHistoryByContract(string contractNumber, int documentType, string documentPath, string userName) {
            object[] results = this.Invoke("WriteDocHistoryByContract", new object[] {
                        contractNumber,
                        documentType,
                        documentPath,
                        userName});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void WriteDocHistoryByContractAsync(string contractNumber, int documentType, string documentPath, string userName) {
            this.WriteDocHistoryByContractAsync(contractNumber, documentType, documentPath, userName, null);
        }
        
        /// <remarks/>
        public void WriteDocHistoryByContractAsync(string contractNumber, int documentType, string documentPath, string userName, object userState) {
            if ((this.WriteDocHistoryByContractOperationCompleted == null)) {
                this.WriteDocHistoryByContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteDocHistoryByContractOperationCompleted);
            }
            this.InvokeAsync("WriteDocHistoryByContract", new object[] {
                        contractNumber,
                        documentType,
                        documentPath,
                        userName}, this.WriteDocHistoryByContractOperationCompleted, userState);
        }
        
        private void OnWriteDocHistoryByContractOperationCompleted(object arg) {
            if ((this.WriteDocHistoryByContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteDocHistoryByContractCompleted(this, new WriteDocHistoryByContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetFilePathByGuid", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFilePathByGuid(string guid) {
            object[] results = this.Invoke("GetFilePathByGuid", new object[] {
                        guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilePathByGuidAsync(string guid) {
            this.GetFilePathByGuidAsync(guid, null);
        }
        
        /// <remarks/>
        public void GetFilePathByGuidAsync(string guid, object userState) {
            if ((this.GetFilePathByGuidOperationCompleted == null)) {
                this.GetFilePathByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePathByGuidOperationCompleted);
            }
            this.InvokeAsync("GetFilePathByGuid", new object[] {
                        guid}, this.GetFilePathByGuidOperationCompleted, userState);
        }
        
        private void OnGetFilePathByGuidOperationCompleted(object arg) {
            if ((this.GetFilePathByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePathByGuidCompleted(this, new GetFilePathByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetFilledTemplate", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFilledTemplate(string templatePath, System.Data.DataSet mergeData, string userName) {
            object[] results = this.Invoke("GetFilledTemplate", new object[] {
                        templatePath,
                        mergeData,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilledTemplateAsync(string templatePath, System.Data.DataSet mergeData, string userName) {
            this.GetFilledTemplateAsync(templatePath, mergeData, userName, null);
        }
        
        /// <remarks/>
        public void GetFilledTemplateAsync(string templatePath, System.Data.DataSet mergeData, string userName, object userState) {
            if ((this.GetFilledTemplateOperationCompleted == null)) {
                this.GetFilledTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilledTemplateOperationCompleted);
            }
            this.InvokeAsync("GetFilledTemplate", new object[] {
                        templatePath,
                        mergeData,
                        userName}, this.GetFilledTemplateOperationCompleted, userState);
        }
        
        private void OnGetFilledTemplateOperationCompleted(object arg) {
            if ((this.GetFilledTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilledTemplateCompleted(this, new GetFilledTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/FindTemplates", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public usp_TemplateMappingSelectResult[] FindTemplates([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> documentTypeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> marketId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> utilityId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> productBrandId, string productId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> accountTypeId, string contractType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> languageId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> channelGroupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> termInMonths) {
            object[] results = this.Invoke("FindTemplates", new object[] {
                        documentTypeId,
                        marketId,
                        utilityId,
                        productBrandId,
                        productId,
                        accountTypeId,
                        contractType,
                        languageId,
                        channelGroupId,
                        termInMonths});
            return ((usp_TemplateMappingSelectResult[])(results[0]));
        }
        
        /// <remarks/>
        public void FindTemplatesAsync(System.Nullable<int> documentTypeId, System.Nullable<int> marketId, System.Nullable<int> utilityId, System.Nullable<int> productBrandId, string productId, System.Nullable<int> accountTypeId, string contractType, System.Nullable<int> languageId, System.Nullable<int> channelGroupId, System.Nullable<int> termInMonths) {
            this.FindTemplatesAsync(documentTypeId, marketId, utilityId, productBrandId, productId, accountTypeId, contractType, languageId, channelGroupId, termInMonths, null);
        }
        
        /// <remarks/>
        public void FindTemplatesAsync(System.Nullable<int> documentTypeId, System.Nullable<int> marketId, System.Nullable<int> utilityId, System.Nullable<int> productBrandId, string productId, System.Nullable<int> accountTypeId, string contractType, System.Nullable<int> languageId, System.Nullable<int> channelGroupId, System.Nullable<int> termInMonths, object userState) {
            if ((this.FindTemplatesOperationCompleted == null)) {
                this.FindTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindTemplatesOperationCompleted);
            }
            this.InvokeAsync("FindTemplates", new object[] {
                        documentTypeId,
                        marketId,
                        utilityId,
                        productBrandId,
                        productId,
                        accountTypeId,
                        contractType,
                        languageId,
                        channelGroupId,
                        termInMonths}, this.FindTemplatesOperationCompleted, userState);
        }
        
        private void OnFindTemplatesOperationCompleted(object arg) {
            if ((this.FindTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindTemplatesCompleted(this, new FindTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetTemplateMappings", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public vw_TemplateMappingFull[] GetTemplateMappings(int templateId) {
            object[] results = this.Invoke("GetTemplateMappings", new object[] {
                        templateId});
            return ((vw_TemplateMappingFull[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateMappingsAsync(int templateId) {
            this.GetTemplateMappingsAsync(templateId, null);
        }
        
        /// <remarks/>
        public void GetTemplateMappingsAsync(int templateId, object userState) {
            if ((this.GetTemplateMappingsOperationCompleted == null)) {
                this.GetTemplateMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateMappingsOperationCompleted);
            }
            this.InvokeAsync("GetTemplateMappings", new object[] {
                        templateId}, this.GetTemplateMappingsOperationCompleted, userState);
        }
        
        private void OnGetTemplateMappingsOperationCompleted(object arg) {
            if ((this.GetTemplateMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateMappingsCompleted(this, new GetTemplateMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/InsertTemplateMapping", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertTemplateMapping(int templateId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> marketId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> utilityId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> accountTypeId, string productId, string contractType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> channelGroupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> termMinMonths, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> termMaxMonths, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> productBrandId, bool isDefault, string user) {
            object[] results = this.Invoke("InsertTemplateMapping", new object[] {
                        templateId,
                        marketId,
                        utilityId,
                        accountTypeId,
                        productId,
                        contractType,
                        channelGroupId,
                        termMinMonths,
                        termMaxMonths,
                        productBrandId,
                        isDefault,
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTemplateMappingAsync(int templateId, System.Nullable<int> marketId, System.Nullable<int> utilityId, System.Nullable<int> accountTypeId, string productId, string contractType, System.Nullable<int> channelGroupId, System.Nullable<int> termMinMonths, System.Nullable<int> termMaxMonths, System.Nullable<int> productBrandId, bool isDefault, string user) {
            this.InsertTemplateMappingAsync(templateId, marketId, utilityId, accountTypeId, productId, contractType, channelGroupId, termMinMonths, termMaxMonths, productBrandId, isDefault, user, null);
        }
        
        /// <remarks/>
        public void InsertTemplateMappingAsync(int templateId, System.Nullable<int> marketId, System.Nullable<int> utilityId, System.Nullable<int> accountTypeId, string productId, string contractType, System.Nullable<int> channelGroupId, System.Nullable<int> termMinMonths, System.Nullable<int> termMaxMonths, System.Nullable<int> productBrandId, bool isDefault, string user, object userState) {
            if ((this.InsertTemplateMappingOperationCompleted == null)) {
                this.InsertTemplateMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTemplateMappingOperationCompleted);
            }
            this.InvokeAsync("InsertTemplateMapping", new object[] {
                        templateId,
                        marketId,
                        utilityId,
                        accountTypeId,
                        productId,
                        contractType,
                        channelGroupId,
                        termMinMonths,
                        termMaxMonths,
                        productBrandId,
                        isDefault,
                        user}, this.InsertTemplateMappingOperationCompleted, userState);
        }
        
        private void OnInsertTemplateMappingOperationCompleted(object arg) {
            if ((this.InsertTemplateMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTemplateMappingCompleted(this, new InsertTemplateMappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/DeleteTemplateMappingById", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTemplateMappingById(int templateMapId) {
            object[] results = this.Invoke("DeleteTemplateMappingById", new object[] {
                        templateMapId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTemplateMappingByIdAsync(int templateMapId) {
            this.DeleteTemplateMappingByIdAsync(templateMapId, null);
        }
        
        /// <remarks/>
        public void DeleteTemplateMappingByIdAsync(int templateMapId, object userState) {
            if ((this.DeleteTemplateMappingByIdOperationCompleted == null)) {
                this.DeleteTemplateMappingByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateMappingByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteTemplateMappingById", new object[] {
                        templateMapId}, this.DeleteTemplateMappingByIdOperationCompleted, userState);
        }
        
        private void OnDeleteTemplateMappingByIdOperationCompleted(object arg) {
            if ((this.DeleteTemplateMappingByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTemplateMappingByIdCompleted(this, new DeleteTemplateMappingByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTemplateID_SupressContra" +
            "ctNumber", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTemplateID_SupressContractNumber(int templateID, string contractNumber, bool showContractNumber) {
            object[] results = this.Invoke("GenerateDocumentByTemplateID_SupressContractNumber", new object[] {
                        templateID,
                        contractNumber,
                        showContractNumber});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTemplateID_SupressContractNumberAsync(int templateID, string contractNumber, bool showContractNumber) {
            this.GenerateDocumentByTemplateID_SupressContractNumberAsync(templateID, contractNumber, showContractNumber, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTemplateID_SupressContractNumberAsync(int templateID, string contractNumber, bool showContractNumber, object userState) {
            if ((this.GenerateDocumentByTemplateID_SupressContractNumberOperationCompleted == null)) {
                this.GenerateDocumentByTemplateID_SupressContractNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTemplateID_SupressContractNumberOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTemplateID_SupressContractNumber", new object[] {
                        templateID,
                        contractNumber,
                        showContractNumber}, this.GenerateDocumentByTemplateID_SupressContractNumberOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTemplateID_SupressContractNumberOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTemplateID_SupressContractNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTemplateID_SupressContractNumberCompleted(this, new GenerateDocumentByTemplateID_SupressContractNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetErrorLog", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetErrorLog(System.DateTime startDate, System.DateTime endDate, EventLogEntryType eventType) {
            object[] results = this.Invoke("GetErrorLog", new object[] {
                        startDate,
                        endDate,
                        eventType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorLogAsync(System.DateTime startDate, System.DateTime endDate, EventLogEntryType eventType) {
            this.GetErrorLogAsync(startDate, endDate, eventType, null);
        }
        
        /// <remarks/>
        public void GetErrorLogAsync(System.DateTime startDate, System.DateTime endDate, EventLogEntryType eventType, object userState) {
            if ((this.GetErrorLogOperationCompleted == null)) {
                this.GetErrorLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorLogOperationCompleted);
            }
            this.InvokeAsync("GetErrorLog", new object[] {
                        startDate,
                        endDate,
                        eventType}, this.GetErrorLogOperationCompleted, userState);
        }
        
        private void OnGetErrorLogOperationCompleted(object arg) {
            if ((this.GetErrorLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorLogCompleted(this, new GetErrorLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetDocumentPrintHistory", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDocumentPrintHistory(System.DateTime startTime, System.DateTime endTime, string creatingUser) {
            object[] results = this.Invoke("GetDocumentPrintHistory", new object[] {
                        startTime,
                        endTime,
                        creatingUser});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentPrintHistoryAsync(System.DateTime startTime, System.DateTime endTime, string creatingUser) {
            this.GetDocumentPrintHistoryAsync(startTime, endTime, creatingUser, null);
        }
        
        /// <remarks/>
        public void GetDocumentPrintHistoryAsync(System.DateTime startTime, System.DateTime endTime, string creatingUser, object userState) {
            if ((this.GetDocumentPrintHistoryOperationCompleted == null)) {
                this.GetDocumentPrintHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentPrintHistoryOperationCompleted);
            }
            this.InvokeAsync("GetDocumentPrintHistory", new object[] {
                        startTime,
                        endTime,
                        creatingUser}, this.GetDocumentPrintHistoryOperationCompleted, userState);
        }
        
        private void OnGetDocumentPrintHistoryOperationCompleted(object arg) {
            if ((this.GetDocumentPrintHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentPrintHistoryCompleted(this, new GetDocumentPrintHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetTemplateVersionsByContract", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TemplateVersionInfo[] GetTemplateVersionsByContract(string contractNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> documentTypeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> marketId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> utilityId, string productId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> accountTypeId, string contractType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> languageId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> channelGroupId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> termInMonths, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> contractDate) {
            object[] results = this.Invoke("GetTemplateVersionsByContract", new object[] {
                        contractNumber,
                        documentTypeId,
                        marketId,
                        utilityId,
                        productId,
                        accountTypeId,
                        contractType,
                        languageId,
                        channelGroupId,
                        termInMonths,
                        contractDate});
            return ((TemplateVersionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateVersionsByContractAsync(string contractNumber, System.Nullable<int> documentTypeId, System.Nullable<int> marketId, System.Nullable<int> utilityId, string productId, System.Nullable<int> accountTypeId, string contractType, System.Nullable<int> languageId, System.Nullable<int> channelGroupId, System.Nullable<int> termInMonths, System.Nullable<System.DateTime> contractDate) {
            this.GetTemplateVersionsByContractAsync(contractNumber, documentTypeId, marketId, utilityId, productId, accountTypeId, contractType, languageId, channelGroupId, termInMonths, contractDate, null);
        }
        
        /// <remarks/>
        public void GetTemplateVersionsByContractAsync(string contractNumber, System.Nullable<int> documentTypeId, System.Nullable<int> marketId, System.Nullable<int> utilityId, string productId, System.Nullable<int> accountTypeId, string contractType, System.Nullable<int> languageId, System.Nullable<int> channelGroupId, System.Nullable<int> termInMonths, System.Nullable<System.DateTime> contractDate, object userState) {
            if ((this.GetTemplateVersionsByContractOperationCompleted == null)) {
                this.GetTemplateVersionsByContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateVersionsByContractOperationCompleted);
            }
            this.InvokeAsync("GetTemplateVersionsByContract", new object[] {
                        contractNumber,
                        documentTypeId,
                        marketId,
                        utilityId,
                        productId,
                        accountTypeId,
                        contractType,
                        languageId,
                        channelGroupId,
                        termInMonths,
                        contractDate}, this.GetTemplateVersionsByContractOperationCompleted, userState);
        }
        
        private void OnGetTemplateVersionsByContractOperationCompleted(object arg) {
            if ((this.GetTemplateVersionsByContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateVersionsByContractCompleted(this, new GetTemplateVersionsByContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/DownloadFilledTemplate", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DownloadFilledTemplate(int templateID, string contractNumber) {
            this.Invoke("DownloadFilledTemplate", new object[] {
                        templateID,
                        contractNumber});
        }
        
        /// <remarks/>
        public void DownloadFilledTemplateAsync(int templateID, string contractNumber) {
            this.DownloadFilledTemplateAsync(templateID, contractNumber, null);
        }
        
        /// <remarks/>
        public void DownloadFilledTemplateAsync(int templateID, string contractNumber, object userState) {
            if ((this.DownloadFilledTemplateOperationCompleted == null)) {
                this.DownloadFilledTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFilledTemplateOperationCompleted);
            }
            this.InvokeAsync("DownloadFilledTemplate", new object[] {
                        templateID,
                        contractNumber}, this.DownloadFilledTemplateOperationCompleted, userState);
        }
        
        private void OnDownloadFilledTemplateOperationCompleted(object arg) {
            if ((this.DownloadFilledTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFilledTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/AutoGenerateLettersOffline", RequestNamespace="http://enrollment.libertypowercorp.com/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AutoGenerateLettersOffline() {
            this.Invoke("AutoGenerateLettersOffline", new object[0]);
        }
        
        /// <remarks/>
        public void AutoGenerateLettersOfflineAsync() {
            this.AutoGenerateLettersOfflineAsync(null);
        }
        
        /// <remarks/>
        public void AutoGenerateLettersOfflineAsync(object userState) {
            if ((this.AutoGenerateLettersOfflineOperationCompleted == null)) {
                this.AutoGenerateLettersOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoGenerateLettersOfflineOperationCompleted);
            }
            this.InvokeAsync("AutoGenerateLettersOffline", new object[0], this.AutoGenerateLettersOfflineOperationCompleted, userState);
        }
        
        private void OnAutoGenerateLettersOfflineOperationCompleted(object arg) {
            if ((this.AutoGenerateLettersOfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoGenerateLettersOfflineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/AddDocumentType", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result AddDocumentType(string document_type_name, string document_type_code, string repository_folder, string Username) {
            object[] results = this.Invoke("AddDocumentType", new object[] {
                        document_type_name,
                        document_type_code,
                        repository_folder,
                        Username});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void AddDocumentTypeAsync(string document_type_name, string document_type_code, string repository_folder, string Username) {
            this.AddDocumentTypeAsync(document_type_name, document_type_code, repository_folder, Username, null);
        }
        
        /// <remarks/>
        public void AddDocumentTypeAsync(string document_type_name, string document_type_code, string repository_folder, string Username, object userState) {
            if ((this.AddDocumentTypeOperationCompleted == null)) {
                this.AddDocumentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDocumentTypeOperationCompleted);
            }
            this.InvokeAsync("AddDocumentType", new object[] {
                        document_type_name,
                        document_type_code,
                        repository_folder,
                        Username}, this.AddDocumentTypeOperationCompleted, userState);
        }
        
        private void OnAddDocumentTypeOperationCompleted(object arg) {
            if ((this.AddDocumentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDocumentTypeCompleted(this, new AddDocumentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/AutoGenerateLetters", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result AutoGenerateLetters(int docTypeID, string user) {
            object[] results = this.Invoke("AutoGenerateLetters", new object[] {
                        docTypeID,
                        user});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void AutoGenerateLettersAsync(int docTypeID, string user) {
            this.AutoGenerateLettersAsync(docTypeID, user, null);
        }
        
        /// <remarks/>
        public void AutoGenerateLettersAsync(int docTypeID, string user, object userState) {
            if ((this.AutoGenerateLettersOperationCompleted == null)) {
                this.AutoGenerateLettersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoGenerateLettersOperationCompleted);
            }
            this.InvokeAsync("AutoGenerateLetters", new object[] {
                        docTypeID,
                        user}, this.AutoGenerateLettersOperationCompleted, userState);
        }
        
        private void OnAutoGenerateLettersOperationCompleted(object arg) {
            if ((this.AutoGenerateLettersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoGenerateLettersCompleted(this, new AutoGenerateLettersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetDocumentCount", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDocumentCount(int docTypeID, System.DateTime startDate, System.DateTime endDate, string username) {
            object[] results = this.Invoke("GetDocumentCount", new object[] {
                        docTypeID,
                        startDate,
                        endDate,
                        username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentCountAsync(int docTypeID, System.DateTime startDate, System.DateTime endDate, string username) {
            this.GetDocumentCountAsync(docTypeID, startDate, endDate, username, null);
        }
        
        /// <remarks/>
        public void GetDocumentCountAsync(int docTypeID, System.DateTime startDate, System.DateTime endDate, string username, object userState) {
            if ((this.GetDocumentCountOperationCompleted == null)) {
                this.GetDocumentCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentCountOperationCompleted);
            }
            this.InvokeAsync("GetDocumentCount", new object[] {
                        docTypeID,
                        startDate,
                        endDate,
                        username}, this.GetDocumentCountOperationCompleted, userState);
        }
        
        private void OnGetDocumentCountOperationCompleted(object arg) {
            if ((this.GetDocumentCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCountCompleted(this, new GetDocumentCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/SaveDocumentBytesAttached", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid SaveDocumentBytesAttached([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes, string documentName, int docTypeID, string accountID, string contractNbr, string user) {
            object[] results = this.Invoke("SaveDocumentBytesAttached", new object[] {
                        bytes,
                        documentName,
                        docTypeID,
                        accountID,
                        contractNbr,
                        user});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDocumentBytesAttachedAsync(byte[] bytes, string documentName, int docTypeID, string accountID, string contractNbr, string user) {
            this.SaveDocumentBytesAttachedAsync(bytes, documentName, docTypeID, accountID, contractNbr, user, null);
        }
        
        /// <remarks/>
        public void SaveDocumentBytesAttachedAsync(byte[] bytes, string documentName, int docTypeID, string accountID, string contractNbr, string user, object userState) {
            if ((this.SaveDocumentBytesAttachedOperationCompleted == null)) {
                this.SaveDocumentBytesAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDocumentBytesAttachedOperationCompleted);
            }
            this.InvokeAsync("SaveDocumentBytesAttached", new object[] {
                        bytes,
                        documentName,
                        docTypeID,
                        accountID,
                        contractNbr,
                        user}, this.SaveDocumentBytesAttachedOperationCompleted, userState);
        }
        
        private void OnSaveDocumentBytesAttachedOperationCompleted(object arg) {
            if ((this.SaveDocumentBytesAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDocumentBytesAttachedCompleted(this, new SaveDocumentBytesAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByIDDSAttached", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByIDDSAttached(int templateID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, bool blnAttach, string contractNumber, string user, string reasonCode) {
            object[] results = this.Invoke("GenerateDocumentByIDDSAttached", new object[] {
                        templateID,
                        dsData,
                        blnIncludeAssocDocs,
                        blnAttach,
                        contractNumber,
                        user,
                        reasonCode});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByIDDSAttachedAsync(int templateID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, bool blnAttach, string contractNumber, string user, string reasonCode) {
            this.GenerateDocumentByIDDSAttachedAsync(templateID, dsData, blnIncludeAssocDocs, blnAttach, contractNumber, user, reasonCode, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByIDDSAttachedAsync(int templateID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, bool blnAttach, string contractNumber, string user, string reasonCode, object userState) {
            if ((this.GenerateDocumentByIDDSAttachedOperationCompleted == null)) {
                this.GenerateDocumentByIDDSAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByIDDSAttachedOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByIDDSAttached", new object[] {
                        templateID,
                        dsData,
                        blnIncludeAssocDocs,
                        blnAttach,
                        contractNumber,
                        user,
                        reasonCode}, this.GenerateDocumentByIDDSAttachedOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByIDDSAttachedOperationCompleted(object arg) {
            if ((this.GenerateDocumentByIDDSAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByIDDSAttachedCompleted(this, new GenerateDocumentByIDDSAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTemplateIDAttached", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTemplateIDAttached(int templateID, string contractNumber, bool blnIncludeTC, bool blnAttach, string user) {
            object[] results = this.Invoke("GenerateDocumentByTemplateIDAttached", new object[] {
                        templateID,
                        contractNumber,
                        blnIncludeTC,
                        blnAttach,
                        user});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTemplateIDAttachedAsync(int templateID, string contractNumber, bool blnIncludeTC, bool blnAttach, string user) {
            this.GenerateDocumentByTemplateIDAttachedAsync(templateID, contractNumber, blnIncludeTC, blnAttach, user, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTemplateIDAttachedAsync(int templateID, string contractNumber, bool blnIncludeTC, bool blnAttach, string user, object userState) {
            if ((this.GenerateDocumentByTemplateIDAttachedOperationCompleted == null)) {
                this.GenerateDocumentByTemplateIDAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTemplateIDAttachedOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTemplateIDAttached", new object[] {
                        templateID,
                        contractNumber,
                        blnIncludeTC,
                        blnAttach,
                        user}, this.GenerateDocumentByTemplateIDAttachedOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTemplateIDAttachedOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTemplateIDAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTemplateIDAttachedCompleted(this, new GenerateDocumentByTemplateIDAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTypeAttached", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTypeAttached(int docType, string contractNumber, bool blnIncludeTC, bool blnAttach, string user) {
            object[] results = this.Invoke("GenerateDocumentByTypeAttached", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC,
                        blnAttach,
                        user});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAttachedAsync(int docType, string contractNumber, bool blnIncludeTC, bool blnAttach, string user) {
            this.GenerateDocumentByTypeAttachedAsync(docType, contractNumber, blnIncludeTC, blnAttach, user, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAttachedAsync(int docType, string contractNumber, bool blnIncludeTC, bool blnAttach, string user, object userState) {
            if ((this.GenerateDocumentByTypeAttachedOperationCompleted == null)) {
                this.GenerateDocumentByTypeAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeAttachedOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTypeAttached", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC,
                        blnAttach,
                        user}, this.GenerateDocumentByTypeAttachedOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeAttachedOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeAttachedCompleted(this, new GenerateDocumentByTypeAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByType_HideContractNumber", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByType_HideContractNumber(int docType, string contractNumber, bool blnIncludeTC, bool HideContractNumber) {
            object[] results = this.Invoke("GenerateDocumentByType_HideContractNumber", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC,
                        HideContractNumber});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByType_HideContractNumberAsync(int docType, string contractNumber, bool blnIncludeTC, bool HideContractNumber) {
            this.GenerateDocumentByType_HideContractNumberAsync(docType, contractNumber, blnIncludeTC, HideContractNumber, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByType_HideContractNumberAsync(int docType, string contractNumber, bool blnIncludeTC, bool HideContractNumber, object userState) {
            if ((this.GenerateDocumentByType_HideContractNumberOperationCompleted == null)) {
                this.GenerateDocumentByType_HideContractNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByType_HideContractNumberOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByType_HideContractNumber", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC,
                        HideContractNumber}, this.GenerateDocumentByType_HideContractNumberOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByType_HideContractNumberOperationCompleted(object arg) {
            if ((this.GenerateDocumentByType_HideContractNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByType_HideContractNumberCompleted(this, new GenerateDocumentByType_HideContractNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTypeAttached_HideContrac" +
            "tNumber", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTypeAttached_HideContractNumber(int docType, string contractNumber, bool blnIncludeTC, bool blnAttach, string user, bool HideContractNumber) {
            object[] results = this.Invoke("GenerateDocumentByTypeAttached_HideContractNumber", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC,
                        blnAttach,
                        user,
                        HideContractNumber});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAttached_HideContractNumberAsync(int docType, string contractNumber, bool blnIncludeTC, bool blnAttach, string user, bool HideContractNumber) {
            this.GenerateDocumentByTypeAttached_HideContractNumberAsync(docType, contractNumber, blnIncludeTC, blnAttach, user, HideContractNumber, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAttached_HideContractNumberAsync(int docType, string contractNumber, bool blnIncludeTC, bool blnAttach, string user, bool HideContractNumber, object userState) {
            if ((this.GenerateDocumentByTypeAttached_HideContractNumberOperationCompleted == null)) {
                this.GenerateDocumentByTypeAttached_HideContractNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeAttached_HideContractNumberOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTypeAttached_HideContractNumber", new object[] {
                        docType,
                        contractNumber,
                        blnIncludeTC,
                        blnAttach,
                        user,
                        HideContractNumber}, this.GenerateDocumentByTypeAttached_HideContractNumberOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeAttached_HideContractNumberOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeAttached_HideContractNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeAttached_HideContractNumberCompleted(this, new GenerateDocumentByTypeAttached_HideContractNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTypeDSAttach", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTypeDSAttach(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, bool blnAttach, string contractNumber, string user, string reasonCode) {
            object[] results = this.Invoke("GenerateDocumentByTypeDSAttach", new object[] {
                        docTypeID,
                        dsData,
                        blnIncludeAssocDocs,
                        blnAttach,
                        contractNumber,
                        user,
                        reasonCode});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeDSAttachAsync(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, bool blnAttach, string contractNumber, string user, string reasonCode) {
            this.GenerateDocumentByTypeDSAttachAsync(docTypeID, dsData, blnIncludeAssocDocs, blnAttach, contractNumber, user, reasonCode, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeDSAttachAsync(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, bool blnAttach, string contractNumber, string user, string reasonCode, object userState) {
            if ((this.GenerateDocumentByTypeDSAttachOperationCompleted == null)) {
                this.GenerateDocumentByTypeDSAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeDSAttachOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTypeDSAttach", new object[] {
                        docTypeID,
                        dsData,
                        blnIncludeAssocDocs,
                        blnAttach,
                        contractNumber,
                        user,
                        reasonCode}, this.GenerateDocumentByTypeDSAttachOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeDSAttachOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeDSAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeDSAttachCompleted(this, new GenerateDocumentByTypeDSAttachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/File2Bytes", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] File2Bytes(string path, bool bDeleteFile) {
            object[] results = this.Invoke("File2Bytes", new object[] {
                        path,
                        bDeleteFile});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void File2BytesAsync(string path, bool bDeleteFile) {
            this.File2BytesAsync(path, bDeleteFile, null);
        }
        
        /// <remarks/>
        public void File2BytesAsync(string path, bool bDeleteFile, object userState) {
            if ((this.File2BytesOperationCompleted == null)) {
                this.File2BytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFile2BytesOperationCompleted);
            }
            this.InvokeAsync("File2Bytes", new object[] {
                        path,
                        bDeleteFile}, this.File2BytesOperationCompleted, userState);
        }
        
        private void OnFile2BytesOperationCompleted(object arg) {
            if ((this.File2BytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.File2BytesCompleted(this, new File2BytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTypeAlt2Bytes", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTypeAlt2Bytes(int docTypeID, string contractNumber, object[] accountNumberList, bool blnIncludeAssocDocs, bool blnAttach, string user, string reasonCode) {
            object[] results = this.Invoke("GenerateDocumentByTypeAlt2Bytes", new object[] {
                        docTypeID,
                        contractNumber,
                        accountNumberList,
                        blnIncludeAssocDocs,
                        blnAttach,
                        user,
                        reasonCode});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAlt2BytesAsync(int docTypeID, string contractNumber, object[] accountNumberList, bool blnIncludeAssocDocs, bool blnAttach, string user, string reasonCode) {
            this.GenerateDocumentByTypeAlt2BytesAsync(docTypeID, contractNumber, accountNumberList, blnIncludeAssocDocs, blnAttach, user, reasonCode, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeAlt2BytesAsync(int docTypeID, string contractNumber, object[] accountNumberList, bool blnIncludeAssocDocs, bool blnAttach, string user, string reasonCode, object userState) {
            if ((this.GenerateDocumentByTypeAlt2BytesOperationCompleted == null)) {
                this.GenerateDocumentByTypeAlt2BytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeAlt2BytesOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTypeAlt2Bytes", new object[] {
                        docTypeID,
                        contractNumber,
                        accountNumberList,
                        blnIncludeAssocDocs,
                        blnAttach,
                        user,
                        reasonCode}, this.GenerateDocumentByTypeAlt2BytesOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeAlt2BytesOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeAlt2BytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeAlt2BytesCompleted(this, new GenerateDocumentByTypeAlt2BytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GenerateDocumentByTypeDS2Bytes", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GenerateDocumentByTypeDS2Bytes(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, string user, string reasonCode) {
            object[] results = this.Invoke("GenerateDocumentByTypeDS2Bytes", new object[] {
                        docTypeID,
                        dsData,
                        blnIncludeAssocDocs,
                        user,
                        reasonCode});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeDS2BytesAsync(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, string user, string reasonCode) {
            this.GenerateDocumentByTypeDS2BytesAsync(docTypeID, dsData, blnIncludeAssocDocs, user, reasonCode, null);
        }
        
        /// <remarks/>
        public void GenerateDocumentByTypeDS2BytesAsync(int docTypeID, System.Data.DataSet dsData, bool blnIncludeAssocDocs, string user, string reasonCode, object userState) {
            if ((this.GenerateDocumentByTypeDS2BytesOperationCompleted == null)) {
                this.GenerateDocumentByTypeDS2BytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDocumentByTypeDS2BytesOperationCompleted);
            }
            this.InvokeAsync("GenerateDocumentByTypeDS2Bytes", new object[] {
                        docTypeID,
                        dsData,
                        blnIncludeAssocDocs,
                        user,
                        reasonCode}, this.GenerateDocumentByTypeDS2BytesOperationCompleted, userState);
        }
        
        private void OnGenerateDocumentByTypeDS2BytesOperationCompleted(object arg) {
            if ((this.GenerateDocumentByTypeDS2BytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDocumentByTypeDS2BytesCompleted(this, new GenerateDocumentByTypeDS2BytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetRepositoryPath", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetRepositoryPath(RepositoryPathKeys pathKey) {
            object[] results = this.Invoke("GetRepositoryPath", new object[] {
                        pathKey});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepositoryPathAsync(RepositoryPathKeys pathKey) {
            this.GetRepositoryPathAsync(pathKey, null);
        }
        
        /// <remarks/>
        public void GetRepositoryPathAsync(RepositoryPathKeys pathKey, object userState) {
            if ((this.GetRepositoryPathOperationCompleted == null)) {
                this.GetRepositoryPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepositoryPathOperationCompleted);
            }
            this.InvokeAsync("GetRepositoryPath", new object[] {
                        pathKey}, this.GetRepositoryPathOperationCompleted, userState);
        }
        
        private void OnGetRepositoryPathOperationCompleted(object arg) {
            if ((this.GetRepositoryPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepositoryPathCompleted(this, new GetRepositoryPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetRepositoryURL", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetRepositoryURL(RepositoryPathKeys pathKey) {
            object[] results = this.Invoke("GetRepositoryURL", new object[] {
                        pathKey});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepositoryURLAsync(RepositoryPathKeys pathKey) {
            this.GetRepositoryURLAsync(pathKey, null);
        }
        
        /// <remarks/>
        public void GetRepositoryURLAsync(RepositoryPathKeys pathKey, object userState) {
            if ((this.GetRepositoryURLOperationCompleted == null)) {
                this.GetRepositoryURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepositoryURLOperationCompleted);
            }
            this.InvokeAsync("GetRepositoryURL", new object[] {
                        pathKey}, this.GetRepositoryURLOperationCompleted, userState);
        }
        
        private void OnGetRepositoryURLOperationCompleted(object arg) {
            if ((this.GetRepositoryURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepositoryURLCompleted(this, new GetRepositoryURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/RepositoryHistoryLocation", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RepositoryHistoryLocation() {
            object[] results = this.Invoke("RepositoryHistoryLocation", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RepositoryHistoryLocationAsync() {
            this.RepositoryHistoryLocationAsync(null);
        }
        
        /// <remarks/>
        public void RepositoryHistoryLocationAsync(object userState) {
            if ((this.RepositoryHistoryLocationOperationCompleted == null)) {
                this.RepositoryHistoryLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepositoryHistoryLocationOperationCompleted);
            }
            this.InvokeAsync("RepositoryHistoryLocation", new object[0], this.RepositoryHistoryLocationOperationCompleted, userState);
        }
        
        private void OnRepositoryHistoryLocationOperationCompleted(object arg) {
            if ((this.RepositoryHistoryLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepositoryHistoryLocationCompleted(this, new RepositoryHistoryLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/RepositoryPreviewLocation", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RepositoryPreviewLocation() {
            object[] results = this.Invoke("RepositoryPreviewLocation", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RepositoryPreviewLocationAsync() {
            this.RepositoryPreviewLocationAsync(null);
        }
        
        /// <remarks/>
        public void RepositoryPreviewLocationAsync(object userState) {
            if ((this.RepositoryPreviewLocationOperationCompleted == null)) {
                this.RepositoryPreviewLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepositoryPreviewLocationOperationCompleted);
            }
            this.InvokeAsync("RepositoryPreviewLocation", new object[0], this.RepositoryPreviewLocationOperationCompleted, userState);
        }
        
        private void OnRepositoryPreviewLocationOperationCompleted(object arg) {
            if ((this.RepositoryPreviewLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepositoryPreviewLocationCompleted(this, new RepositoryPreviewLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/RepositoryPrintLocation", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RepositoryPrintLocation() {
            object[] results = this.Invoke("RepositoryPrintLocation", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RepositoryPrintLocationAsync() {
            this.RepositoryPrintLocationAsync(null);
        }
        
        /// <remarks/>
        public void RepositoryPrintLocationAsync(object userState) {
            if ((this.RepositoryPrintLocationOperationCompleted == null)) {
                this.RepositoryPrintLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepositoryPrintLocationOperationCompleted);
            }
            this.InvokeAsync("RepositoryPrintLocation", new object[0], this.RepositoryPrintLocationOperationCompleted, userState);
        }
        
        private void OnRepositoryPrintLocationOperationCompleted(object arg) {
            if ((this.RepositoryPrintLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepositoryPrintLocationCompleted(this, new RepositoryPrintLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/VerifyRepositoryLocations", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result VerifyRepositoryLocations(object[] validPaths, object[] invalidPaths) {
            object[] results = this.Invoke("VerifyRepositoryLocations", new object[] {
                        validPaths,
                        invalidPaths});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyRepositoryLocationsAsync(object[] validPaths, object[] invalidPaths) {
            this.VerifyRepositoryLocationsAsync(validPaths, invalidPaths, null);
        }
        
        /// <remarks/>
        public void VerifyRepositoryLocationsAsync(object[] validPaths, object[] invalidPaths, object userState) {
            if ((this.VerifyRepositoryLocationsOperationCompleted == null)) {
                this.VerifyRepositoryLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyRepositoryLocationsOperationCompleted);
            }
            this.InvokeAsync("VerifyRepositoryLocations", new object[] {
                        validPaths,
                        invalidPaths}, this.VerifyRepositoryLocationsOperationCompleted, userState);
        }
        
        private void OnVerifyRepositoryLocationsOperationCompleted(object arg) {
            if ((this.VerifyRepositoryLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyRepositoryLocationsCompleted(this, new VerifyRepositoryLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetTemplateFolderPath", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetTemplateFolderPath(int document_Type_ID, bool blnLocalPath) {
            object[] results = this.Invoke("GetTemplateFolderPath", new object[] {
                        document_Type_ID,
                        blnLocalPath});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateFolderPathAsync(int document_Type_ID, bool blnLocalPath) {
            this.GetTemplateFolderPathAsync(document_Type_ID, blnLocalPath, null);
        }
        
        /// <remarks/>
        public void GetTemplateFolderPathAsync(int document_Type_ID, bool blnLocalPath, object userState) {
            if ((this.GetTemplateFolderPathOperationCompleted == null)) {
                this.GetTemplateFolderPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateFolderPathOperationCompleted);
            }
            this.InvokeAsync("GetTemplateFolderPath", new object[] {
                        document_Type_ID,
                        blnLocalPath}, this.GetTemplateFolderPathOperationCompleted, userState);
        }
        
        private void OnGetTemplateFolderPathOperationCompleted(object arg) {
            if ((this.GetTemplateFolderPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateFolderPathCompleted(this, new GetTemplateFolderPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetTemplateFullPath", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetTemplateFullPath(int template_ID, bool blnLocalPath) {
            object[] results = this.Invoke("GetTemplateFullPath", new object[] {
                        template_ID,
                        blnLocalPath});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateFullPathAsync(int template_ID, bool blnLocalPath) {
            this.GetTemplateFullPathAsync(template_ID, blnLocalPath, null);
        }
        
        /// <remarks/>
        public void GetTemplateFullPathAsync(int template_ID, bool blnLocalPath, object userState) {
            if ((this.GetTemplateFullPathOperationCompleted == null)) {
                this.GetTemplateFullPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateFullPathOperationCompleted);
            }
            this.InvokeAsync("GetTemplateFullPath", new object[] {
                        template_ID,
                        blnLocalPath}, this.GetTemplateFullPathOperationCompleted, userState);
        }
        
        private void OnGetTemplateFullPathOperationCompleted(object arg) {
            if ((this.GetTemplateFullPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateFullPathCompleted(this, new GetTemplateFullPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/GetTemplateFullPath_Product", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetTemplateFullPath_Product(string productID, int documentTypeID, bool blnLocalPath) {
            object[] results = this.Invoke("GetTemplateFullPath_Product", new object[] {
                        productID,
                        documentTypeID,
                        blnLocalPath});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateFullPath_ProductAsync(string productID, int documentTypeID, bool blnLocalPath) {
            this.GetTemplateFullPath_ProductAsync(productID, documentTypeID, blnLocalPath, null);
        }
        
        /// <remarks/>
        public void GetTemplateFullPath_ProductAsync(string productID, int documentTypeID, bool blnLocalPath, object userState) {
            if ((this.GetTemplateFullPath_ProductOperationCompleted == null)) {
                this.GetTemplateFullPath_ProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateFullPath_ProductOperationCompleted);
            }
            this.InvokeAsync("GetTemplateFullPath_Product", new object[] {
                        productID,
                        documentTypeID,
                        blnLocalPath}, this.GetTemplateFullPath_ProductOperationCompleted, userState);
        }
        
        private void OnGetTemplateFullPath_ProductOperationCompleted(object arg) {
            if ((this.GetTemplateFullPath_ProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateFullPath_ProductCompleted(this, new GetTemplateFullPath_ProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/DocumentTypeInfo_ByCode", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocumentTypeClass DocumentTypeInfo_ByCode(string document_code) {
            object[] results = this.Invoke("DocumentTypeInfo_ByCode", new object[] {
                        document_code});
            return ((DocumentTypeClass)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentTypeInfo_ByCodeAsync(string document_code) {
            this.DocumentTypeInfo_ByCodeAsync(document_code, null);
        }
        
        /// <remarks/>
        public void DocumentTypeInfo_ByCodeAsync(string document_code, object userState) {
            if ((this.DocumentTypeInfo_ByCodeOperationCompleted == null)) {
                this.DocumentTypeInfo_ByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentTypeInfo_ByCodeOperationCompleted);
            }
            this.InvokeAsync("DocumentTypeInfo_ByCode", new object[] {
                        document_code}, this.DocumentTypeInfo_ByCodeOperationCompleted, userState);
        }
        
        private void OnDocumentTypeInfo_ByCodeOperationCompleted(object arg) {
            if ((this.DocumentTypeInfo_ByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentTypeInfo_ByCodeCompleted(this, new DocumentTypeInfo_ByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/DocumentTypeInfo_ByID", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocumentTypeClass DocumentTypeInfo_ByID(int document_type_id) {
            object[] results = this.Invoke("DocumentTypeInfo_ByID", new object[] {
                        document_type_id});
            return ((DocumentTypeClass)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentTypeInfo_ByIDAsync(int document_type_id) {
            this.DocumentTypeInfo_ByIDAsync(document_type_id, null);
        }
        
        /// <remarks/>
        public void DocumentTypeInfo_ByIDAsync(int document_type_id, object userState) {
            if ((this.DocumentTypeInfo_ByIDOperationCompleted == null)) {
                this.DocumentTypeInfo_ByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentTypeInfo_ByIDOperationCompleted);
            }
            this.InvokeAsync("DocumentTypeInfo_ByID", new object[] {
                        document_type_id}, this.DocumentTypeInfo_ByIDOperationCompleted, userState);
        }
        
        private void OnDocumentTypeInfo_ByIDOperationCompleted(object arg) {
            if ((this.DocumentTypeInfo_ByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentTypeInfo_ByIDCompleted(this, new DocumentTypeInfo_ByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://enrollment.libertypowercorp.com/DocumentSetupInfo", RequestNamespace="http://enrollment.libertypowercorp.com/", ResponseNamespace="http://enrollment.libertypowercorp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocumentSetupClass DocumentSetupInfo(string document_setup_key) {
            object[] results = this.Invoke("DocumentSetupInfo", new object[] {
                        document_setup_key});
            return ((DocumentSetupClass)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentSetupInfoAsync(string document_setup_key) {
            this.DocumentSetupInfoAsync(document_setup_key, null);
        }
        
        /// <remarks/>
        public void DocumentSetupInfoAsync(string document_setup_key, object userState) {
            if ((this.DocumentSetupInfoOperationCompleted == null)) {
                this.DocumentSetupInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentSetupInfoOperationCompleted);
            }
            this.InvokeAsync("DocumentSetupInfo", new object[] {
                        document_setup_key}, this.DocumentSetupInfoOperationCompleted, userState);
        }
        
        private void OnDocumentSetupInfoOperationCompleted(object arg) {
            if ((this.DocumentSetupInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentSetupInfoCompleted(this, new DocumentSetupInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public partial class Result {
        
        private object valueField;
        
        private string exceptionStringField;
        
        private bool isSuccessfulField;
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionString {
            get {
                return this.exceptionStringField;
            }
            set {
                this.exceptionStringField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public partial class DocumentSetupClass {
        
        private int document_Setup_IDField;
        
        private string document_Setup_KeyField;
        
        private string document_Setup_PathField;
        
        private string document_Setup_UrlField;
        
        /// <remarks/>
        public int Document_Setup_ID {
            get {
                return this.document_Setup_IDField;
            }
            set {
                this.document_Setup_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Document_Setup_Key {
            get {
                return this.document_Setup_KeyField;
            }
            set {
                this.document_Setup_KeyField = value;
            }
        }
        
        /// <remarks/>
        public string Document_Setup_Path {
            get {
                return this.document_Setup_PathField;
            }
            set {
                this.document_Setup_PathField = value;
            }
        }
        
        /// <remarks/>
        public string Document_Setup_Url {
            get {
                return this.document_Setup_UrlField;
            }
            set {
                this.document_Setup_UrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public partial class DocumentTypeClass {
        
        private string documentTypeNameField;
        
        private int documentTypeIDField;
        
        private string documentTypeCodeField;
        
        private string repositoryFolderField;
        
        private int rowCountField;
        
        /// <remarks/>
        public string DocumentTypeName {
            get {
                return this.documentTypeNameField;
            }
            set {
                this.documentTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentTypeCode {
            get {
                return this.documentTypeCodeField;
            }
            set {
                this.documentTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RepositoryFolder {
            get {
                return this.repositoryFolderField;
            }
            set {
                this.repositoryFolderField = value;
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public partial class TemplateVersionInfo {
        
        private int templateIdField;
        
        private string templateNameField;
        
        private int templateVersionIdField;
        
        private string versionCodeField;
        
        /// <remarks/>
        public int TemplateId {
            get {
                return this.templateIdField;
            }
            set {
                this.templateIdField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public int TemplateVersionId {
            get {
                return this.templateVersionIdField;
            }
            set {
                this.templateVersionIdField = value;
            }
        }
        
        /// <remarks/>
        public string VersionCode {
            get {
                return this.versionCodeField;
            }
            set {
                this.versionCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public partial class vw_TemplateMappingFull {
        
        private int templateMapIDField;
        
        private int templateIDField;
        
        private int documentTypeIDField;
        
        private string documentTypeNameField;
        
        private string repositoryFolderField;
        
        private string templateNameField;
        
        private string templateTitleField;
        
        private System.Nullable<int> forcedRowCountField;
        
        private bool isInactiveField;
        
        private System.Nullable<bool> isDeletedField;
        
        private System.Nullable<int> etfIdField;
        
        private System.Nullable<int> marketIDField;
        
        private System.Nullable<int> utilityIDField;
        
        private System.Nullable<int> accountTypeIDField;
        
        private System.Nullable<int> channelGroupIDField;
        
        private string productIDField;
        
        private string contractTypeField;
        
        private bool isDefaultField;
        
        private System.Nullable<int> termMinMonthsField;
        
        private System.Nullable<int> termMaxMonthsField;
        
        private System.Nullable<int> productBrandIdField;
        
        private System.Nullable<System.DateTime> dateCreatedField;
        
        private string createdByField;
        
        private string accountTypeField;
        
        private string accountTypeDescriptionField;
        
        private string accountTypeGroupField;
        
        private string channelGroupNameField;
        
        private string channelGroupDescriptionField;
        
        private System.Nullable<int> channelTypeIDField;
        
        private System.Nullable<int> contractTypeIDField;
        
        private System.Nullable<int> languageIDField;
        
        private string languageNameField;
        
        private string marketCodeField;
        
        private string retailMarketDescriptionField;
        
        private System.Nullable<int> wholesaleMarketIDField;
        
        private string pucCertificationNumberField;
        
        private string brandNameField;
        
        private string productDescriptionField;
        
        private string productCategoryField;
        
        private string productSubCategoryField;
        
        private string utilityCodeField;
        
        private string utilityFullNameField;
        
        private string utilityShortNameField;
        
        private string utilityDunsNumberField;
        
        private string utilityEntityIDField;
        
        private string utilityLegacyNameField;
        
        /// <remarks/>
        public int TemplateMapID {
            get {
                return this.templateMapIDField;
            }
            set {
                this.templateMapIDField = value;
            }
        }
        
        /// <remarks/>
        public int TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentTypeName {
            get {
                return this.documentTypeNameField;
            }
            set {
                this.documentTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string RepositoryFolder {
            get {
                return this.repositoryFolderField;
            }
            set {
                this.repositoryFolderField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateTitle {
            get {
                return this.templateTitleField;
            }
            set {
                this.templateTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ForcedRowCount {
            get {
                return this.forcedRowCountField;
            }
            set {
                this.forcedRowCountField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInactive {
            get {
                return this.isInactiveField;
            }
            set {
                this.isInactiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EtfId {
            get {
                return this.etfIdField;
            }
            set {
                this.etfIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MarketID {
            get {
                return this.marketIDField;
            }
            set {
                this.marketIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UtilityID {
            get {
                return this.utilityIDField;
            }
            set {
                this.utilityIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AccountTypeID {
            get {
                return this.accountTypeIDField;
            }
            set {
                this.accountTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ChannelGroupID {
            get {
                return this.channelGroupIDField;
            }
            set {
                this.channelGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContractType {
            get {
                return this.contractTypeField;
            }
            set {
                this.contractTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TermMinMonths {
            get {
                return this.termMinMonthsField;
            }
            set {
                this.termMinMonthsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TermMaxMonths {
            get {
                return this.termMaxMonthsField;
            }
            set {
                this.termMaxMonthsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProductBrandId {
            get {
                return this.productBrandIdField;
            }
            set {
                this.productBrandIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeDescription {
            get {
                return this.accountTypeDescriptionField;
            }
            set {
                this.accountTypeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string AccountTypeGroup {
            get {
                return this.accountTypeGroupField;
            }
            set {
                this.accountTypeGroupField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelGroupName {
            get {
                return this.channelGroupNameField;
            }
            set {
                this.channelGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelGroupDescription {
            get {
                return this.channelGroupDescriptionField;
            }
            set {
                this.channelGroupDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ChannelTypeID {
            get {
                return this.channelTypeIDField;
            }
            set {
                this.channelTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ContractTypeID {
            get {
                return this.contractTypeIDField;
            }
            set {
                this.contractTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LanguageID {
            get {
                return this.languageIDField;
            }
            set {
                this.languageIDField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageName {
            get {
                return this.languageNameField;
            }
            set {
                this.languageNameField = value;
            }
        }
        
        /// <remarks/>
        public string MarketCode {
            get {
                return this.marketCodeField;
            }
            set {
                this.marketCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RetailMarketDescription {
            get {
                return this.retailMarketDescriptionField;
            }
            set {
                this.retailMarketDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> WholesaleMarketID {
            get {
                return this.wholesaleMarketIDField;
            }
            set {
                this.wholesaleMarketIDField = value;
            }
        }
        
        /// <remarks/>
        public string PucCertificationNumber {
            get {
                return this.pucCertificationNumberField;
            }
            set {
                this.pucCertificationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string BrandName {
            get {
                return this.brandNameField;
            }
            set {
                this.brandNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductDescription {
            get {
                return this.productDescriptionField;
            }
            set {
                this.productDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCategory {
            get {
                return this.productCategoryField;
            }
            set {
                this.productCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string ProductSubCategory {
            get {
                return this.productSubCategoryField;
            }
            set {
                this.productSubCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityCode {
            get {
                return this.utilityCodeField;
            }
            set {
                this.utilityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityFullName {
            get {
                return this.utilityFullNameField;
            }
            set {
                this.utilityFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityShortName {
            get {
                return this.utilityShortNameField;
            }
            set {
                this.utilityShortNameField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityDunsNumber {
            get {
                return this.utilityDunsNumberField;
            }
            set {
                this.utilityDunsNumberField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityEntityID {
            get {
                return this.utilityEntityIDField;
            }
            set {
                this.utilityEntityIDField = value;
            }
        }
        
        /// <remarks/>
        public string UtilityLegacyName {
            get {
                return this.utilityLegacyNameField;
            }
            set {
                this.utilityLegacyNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public partial class usp_TemplateMappingSelectResult {
        
        private int templateIDField;
        
        private int documentTypeIDField;
        
        private string documentTypeNameField;
        
        private string repositoryFolderField;
        
        private string templateNameField;
        
        private string templateTitleField;
        
        private System.Nullable<int> forcedRowCountField;
        
        /// <remarks/>
        public int TemplateID {
            get {
                return this.templateIDField;
            }
            set {
                this.templateIDField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentTypeName {
            get {
                return this.documentTypeNameField;
            }
            set {
                this.documentTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string RepositoryFolder {
            get {
                return this.repositoryFolderField;
            }
            set {
                this.repositoryFolderField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateTitle {
            get {
                return this.templateTitleField;
            }
            set {
                this.templateTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ForcedRowCount {
            get {
                return this.forcedRowCountField;
            }
            set {
                this.forcedRowCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public enum EventLogEntryType {
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Information,
        
        /// <remarks/>
        SuccessAudit,
        
        /// <remarks/>
        FailureAudit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public enum ProtectionType {
        
        /// <remarks/>
        AllowOnlyComments,
        
        /// <remarks/>
        AllowOnlyFormFields,
        
        /// <remarks/>
        AllowOnlyRevisions,
        
        /// <remarks/>
        ReadOnly,
        
        /// <remarks/>
        NoProtection,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://enrollment.libertypowercorp.com/")]
    public enum RepositoryPathKeys {
        
        /// <remarks/>
        DocumentPrintPath,
        
        /// <remarks/>
        DocumentWorkingPath,
        
        /// <remarks/>
        DocumentPreviewPath,
        
        /// <remarks/>
        DocumentHistoryPath,
        
        /// <remarks/>
        DocumentRepositoryPath,
        
        /// <remarks/>
        DocumentTemplatePath,
        
        /// <remarks/>
        ServerMapPath,
        
        /// <remarks/>
        DocumentLibraryPath,
        
        /// <remarks/>
        DocumentTemplateArchivePath,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AppendDocsCompletedEventHandler(object sender, AppendDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppendDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppendDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AppendMultipleDocsCompletedEventHandler(object sender, AppendMultipleDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppendMultipleDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppendMultipleDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTemplateIDCompletedEventHandler(object sender, GenerateDocumentByTemplateIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTemplateIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTemplateIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeCompletedEventHandler(object sender, GenerateDocumentByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeAltCompletedEventHandler(object sender, GenerateDocumentByTypeAltCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeAltCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeAltCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeDSCompletedEventHandler(object sender, GenerateDocumentByTypeDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateLetterQueueCompletedEventHandler(object sender, GenerateLetterQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateLetterQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateLetterQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProtectDocumentCompletedEventHandler(object sender, ProtectDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProtectDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProtectDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnProtectDocumentCompletedEventHandler(object sender, UnProtectDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnProtectDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnProtectDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestMeCompletedEventHandler(object sender, TestMeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestMeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestMeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WriteDocHistoryByAccountCompletedEventHandler(object sender, WriteDocHistoryByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteDocHistoryByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteDocHistoryByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WriteDocHistoryByContractCompletedEventHandler(object sender, WriteDocHistoryByContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteDocHistoryByContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteDocHistoryByContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFilePathByGuidCompletedEventHandler(object sender, GetFilePathByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePathByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilePathByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFilledTemplateCompletedEventHandler(object sender, GetFilledTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilledTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilledTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FindTemplatesCompletedEventHandler(object sender, FindTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public usp_TemplateMappingSelectResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((usp_TemplateMappingSelectResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateMappingsCompletedEventHandler(object sender, GetTemplateMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public vw_TemplateMappingFull[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((vw_TemplateMappingFull[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertTemplateMappingCompletedEventHandler(object sender, InsertTemplateMappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTemplateMappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTemplateMappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteTemplateMappingByIdCompletedEventHandler(object sender, DeleteTemplateMappingByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTemplateMappingByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTemplateMappingByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTemplateID_SupressContractNumberCompletedEventHandler(object sender, GenerateDocumentByTemplateID_SupressContractNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTemplateID_SupressContractNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTemplateID_SupressContractNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetErrorLogCompletedEventHandler(object sender, GetErrorLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocumentPrintHistoryCompletedEventHandler(object sender, GetDocumentPrintHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentPrintHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentPrintHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateVersionsByContractCompletedEventHandler(object sender, GetTemplateVersionsByContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateVersionsByContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateVersionsByContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateVersionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateVersionInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DownloadFilledTemplateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoGenerateLettersOfflineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddDocumentTypeCompletedEventHandler(object sender, AddDocumentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoGenerateLettersCompletedEventHandler(object sender, AutoGenerateLettersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoGenerateLettersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoGenerateLettersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocumentCountCompletedEventHandler(object sender, GetDocumentCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveDocumentBytesAttachedCompletedEventHandler(object sender, SaveDocumentBytesAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDocumentBytesAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDocumentBytesAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByIDDSAttachedCompletedEventHandler(object sender, GenerateDocumentByIDDSAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByIDDSAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByIDDSAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTemplateIDAttachedCompletedEventHandler(object sender, GenerateDocumentByTemplateIDAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTemplateIDAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTemplateIDAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeAttachedCompletedEventHandler(object sender, GenerateDocumentByTypeAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByType_HideContractNumberCompletedEventHandler(object sender, GenerateDocumentByType_HideContractNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByType_HideContractNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByType_HideContractNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeAttached_HideContractNumberCompletedEventHandler(object sender, GenerateDocumentByTypeAttached_HideContractNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeAttached_HideContractNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeAttached_HideContractNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeDSAttachCompletedEventHandler(object sender, GenerateDocumentByTypeDSAttachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeDSAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeDSAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void File2BytesCompletedEventHandler(object sender, File2BytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class File2BytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal File2BytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeAlt2BytesCompletedEventHandler(object sender, GenerateDocumentByTypeAlt2BytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeAlt2BytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeAlt2BytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GenerateDocumentByTypeDS2BytesCompletedEventHandler(object sender, GenerateDocumentByTypeDS2BytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDocumentByTypeDS2BytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDocumentByTypeDS2BytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRepositoryPathCompletedEventHandler(object sender, GetRepositoryPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepositoryPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepositoryPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRepositoryURLCompletedEventHandler(object sender, GetRepositoryURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepositoryURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepositoryURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RepositoryHistoryLocationCompletedEventHandler(object sender, RepositoryHistoryLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepositoryHistoryLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepositoryHistoryLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RepositoryPreviewLocationCompletedEventHandler(object sender, RepositoryPreviewLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepositoryPreviewLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepositoryPreviewLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RepositoryPrintLocationCompletedEventHandler(object sender, RepositoryPrintLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepositoryPrintLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepositoryPrintLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void VerifyRepositoryLocationsCompletedEventHandler(object sender, VerifyRepositoryLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyRepositoryLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyRepositoryLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateFolderPathCompletedEventHandler(object sender, GetTemplateFolderPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateFolderPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateFolderPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateFullPathCompletedEventHandler(object sender, GetTemplateFullPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateFullPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateFullPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTemplateFullPath_ProductCompletedEventHandler(object sender, GetTemplateFullPath_ProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateFullPath_ProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateFullPath_ProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DocumentTypeInfo_ByCodeCompletedEventHandler(object sender, DocumentTypeInfo_ByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentTypeInfo_ByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentTypeInfo_ByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentTypeClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypeClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DocumentTypeInfo_ByIDCompletedEventHandler(object sender, DocumentTypeInfo_ByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentTypeInfo_ByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentTypeInfo_ByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentTypeClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentTypeClass)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DocumentSetupInfoCompletedEventHandler(object sender, DocumentSetupInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentSetupInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentSetupInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentSetupClass Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentSetupClass)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591