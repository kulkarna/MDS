@model DataAccessLayerEntityFramework.MeterNumberPattern

@{
    ViewBag.Title = "Create Meter Number Pattern";
}
@using UserInterfaceValidationExtensions

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

<div class="edit_section">
    <div class="edit_header">
        <div class="meternopattern_ico"></div>
        <div class="edit_header_desc"><h4>Meter Number Pattern</h4> <h3>New Record</h3> </div>
    </div>
    <div class="form-details">
        <div class="form_fieldset">
            <fieldset>
                <legend>Load Profile</legend>
                <div class="textblock">
                    <div class="details-data-section">
                        <div id="Gen"  class="activable">
                            <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                            <div class="edit_section_heading" onclick="showDiv('hideContent',this.id)">General</div>
                            <div id="hideContent" class="editdetails">
                                <div class="details-full-section">
                                    <div class="details-left-section">
                                    <div class="editor-label">@Html.LabelFor(model => model.UtilityCompany.UtilityCode, "Utility Code")</div>
                                    <div class="editor-field">@Html.DropDownList("UtilityCompanyId", String.Empty) 
                            @{
    if (Session["IsPostBack"] == "true" && (Model.UtilityCompanyId == null || Model.UtilityCompanyId == Guid.Empty))
    { 
                                <span class="field-validation-error" data-valmsg-for="UtilityCompanyId" data-valmsg-replace="true">Utility Code is required.</span>
    }
                            }</div>
                                    <div class="clear"></div>
                                    <div class="editor-label">@Html.LabelFor(model => model.MeterNumberPattern1, "Meter Number Pattern")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.MeterNumberPattern1) 
                            @{
    if (Session["IsPostBack"] == "true" && string.IsNullOrWhiteSpace(Model.MeterNumberPattern1))
    { 
                                <span class="field-validation-error" data-valmsg-for="MeterNumberPattern1" data-valmsg-replace="true">Meter Number Pattern is required.</span>
    }
                            }</div>
                                    <div class="clear"></div>
                                    <div class="editor-label">@Html.LabelFor(model => model.MeterNumberPatternDescription, "Meter Number Pattern Description")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.MeterNumberPatternDescription) 
                            @{
    if (Session["IsPostBack"] == "true" && string.IsNullOrWhiteSpace(Model.MeterNumberPatternDescription))
    { 
                                <span class="field-validation-error" data-valmsg-for="MeterNumberPatternDescription" data-valmsg-replace="true">Meter Number Pattern Description is required.</span>
    }
                            }</div>
                                    <div class="clear"></div>
                                        </div>
                                    <div class="details-right-section">
                                    <div class="editor-label">@Html.LabelFor(model => model.MeterNumberAddLeadingZero, "Meter Number Add Leading Zero")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.MeterNumberAddLeadingZero) @Html.ValidationMessageFor(model => model.MeterNumberAddLeadingZero)</div>
                                    <div class="clear"></div>
                                    <div class="editor-label">@Html.LabelFor(model => model.MeterNumberTruncateLast, "Meter Number Truncate Last")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.MeterNumberTruncateLast) @Html.ValidationMessageFor(model => model.MeterNumberTruncateLast)</div>
                                    <div class="clear"></div>
                                    <div class="editor-label">@Html.LabelFor(model => model.MeterNumberRequiredForEdiRequest, "Meter Number Required For EDI Request")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.MeterNumberRequiredForEdiRequest) @Html.ValidationMessageFor(model => model.MeterNumberRequiredForEdiRequest)</div>
                                </div></div>
                            </div>
                        </div>
                        <br />
                        <div id="info"  class="activable">
                            <img id="dirImg3" class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent2',this.id)" /> 
                            <div class="edit_section_heading" onclick="showDiv('hideContent2',this.id)">Audit Information</div>
                            <div id="hideContent2" class="editdetails" >
                                <div class="details-full-section">
                                    <div class="editor-label">@Html.LabelFor(model => model.Inactive)</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.Inactive) @Html.ValidationMessageFor(model => model.Inactive)</div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.CreatedBy, "Created By") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.CreatedBy) @Html.ValidationMessageFor(model => model.CreatedBy) </div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.CreatedDate, "Created Date") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.CreatedDate) @Html.ValidationMessageFor(model => model.CreatedDate) </div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.LastModifiedBy, "Last Modified By") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.LastModifiedBy) @Html.ValidationMessageFor(model => model.LastModifiedBy) </div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.LastModifiedDate, "Last Modified Date") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.LastModifiedDate) @Html.ValidationMessageFor(model => model.LastModifiedDate) </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</div>
}
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

<script>
    $(function () {
        $("#tabs").tabs();

    });