@model DataAccessLayerEntityFramework.ICapTCapRefresh

@{
    ViewBag.Title = "Create I-Cap T-Cap Refresh Period";
}
@using UserInterfaceValidationExtensions

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

<div class="edit_section">
    <div class="edit_header">
        <div class="icaptcaprefreshperiod_ico"></div>
        <div class="edit_header_desc"><h4>I-Cap T-Cap Refresh Period</h4> <h3>New Record</h3> </div>
    </div>
    <div class="form-details">
        <div class="form_fieldset">
            <fieldset>
                <legend>Load Profile</legend>
                <div class="textblock">
                    <div class="details-data-section">
                        <div id="Gen"  class="activable">
                            <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                            <div class="edit_section_heading" onclick="showDiv('hideContent',this.id)">General</div>
                            <div id="hideContent" class="editdetails">
                                <div class="details-full-section">
                                    <div class="details-left-section">
                                    <div class="editor-label">@Html.LabelFor(model => model.UtilityCompany.UtilityCode, "Utility Code")</div>
                                    <div class="editor-field">@Html.DropDownList("UtilityCompanyId", String.Empty) @Html.ValidationMessageFor(model => model.UtilityCompanyId)</div>
                                    <div class="clear"></div>
                                    <div class="editor-label">@Html.LabelFor(model => model.ICapNextRefresh, "I-Cap Next Refresh")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.ICapNextRefresh) @Html.ValidationMessageFor(model => model.ICapNextRefresh)</div>
                                    <div class="clear"></div>
                                    <div class="editor-label">@Html.LabelFor(model => model.ICapEffectiveDate, "I-Cap Effective Date")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.ICapEffectiveDate) @Html.ValidationMessageFor(model => model.ICapEffectiveDate)</div>
                                    <div class="clear"></div>
                                        </div>
                                    <div class="details-right-section">
                                    <div class="editor-label">@Html.LabelFor(model => model.TCapNextRefresh, "T-Cap Next Refresh")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.TCapNextRefresh) @Html.ValidationMessageFor(model => model.TCapNextRefresh)</div>
                                    <div class="clear"></div>
                                    <div class="editor-label">@Html.LabelFor(model => model.TCapEffectiveDate, "T-Cap Effective Date")</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.TCapEffectiveDate) @Html.ValidationMessageFor(model => model.TCapEffectiveDate)</div>
                                </div></div>
                            </div>
                        </div>
                        <br />
                        <div id="info"  class="activable">
                            <img id="dirImg3" class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent2',this.id)" /> 
                            <div class="edit_section_heading" onclick="showDiv('hideContent2',this.id)">Audit Information</div>
                            <div id="hideContent2" class="editdetails" >
                                <div class="details-full-section">
                                    <div class="editor-label">@Html.LabelFor(model => model.Inactive)</div>
                                    <div class="editor-field">@Html.EditorFor(model => model.Inactive) @Html.ValidationMessageFor(model => model.Inactive)</div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.CreatedBy, "Created By") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.CreatedBy) @Html.ValidationMessageFor(model => model.CreatedBy) </div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.CreatedDate, "Created Date") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.CreatedDate) @Html.ValidationMessageFor(model => model.CreatedDate) </div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.LastModifiedBy, "Last Modified By") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.LastModifiedBy) @Html.ValidationMessageFor(model => model.LastModifiedBy) </div>
                                    <div class="clear"></div>
                                    <div class="editor-label"> @Html.LabelFor(model => model.LastModifiedDate, "Last Modified Date") </div>
                                    <div class="editor-field"> @Html.DisplayFor(model => model.LastModifiedDate) @Html.ValidationMessageFor(model => model.LastModifiedDate) </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</div>
}
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    @if(Session["ErrorMessage"] != null) {<h3>@Session["ErrorMessage"].ToString()</h3>}
<script>
    $(function () {
        $("#tabs").tabs();

    });