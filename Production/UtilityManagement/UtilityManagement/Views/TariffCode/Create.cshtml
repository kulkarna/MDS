@model DataAccessLayerEntityFramework.TariffCode
@{
    ViewBag.Title = "Create Tariff Code";
}
@using UserInterfaceValidationExtensions

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    
      <div class="edit_section">
        <div class="edit_header">
            <div class="tariff_ico"></div>
            <div class="edit_header_desc"><h4>Tariff Code</h4>
            <h3>New Record</h3>
            @*Enrollment Type*@
            </div>
            </div>
        <div class="form_fieldset">
            <fieldset>
                <legend>Tariff Code</legend>

               <div class="textblock">
                <div class="details-data-section">
                    <div id="Gen"  class="activable">
                   <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                    <div class="edit_section_heading"  onclick="showDiv('hideContent',this.id)" >General</div>
                    <div id="hideContent" class="editdetails">
                    <div class="details-full-section">
                         <div class="details-left-section">
                        @Html.HiddenFor(model => model.UtilityCompanyId, new { id = "UtilityCompanyId", name = "UtilityCompanyId" })

                        <div class="editor-label">
                            @Html.LabelFor(model => model.UtilityCompanyId, "Utility Company")
                        </div>
                        <div class="editor-field">
                            @Html.Label((string)ViewBag.UtilityCode)
                            @Html.ValidationMessageFor(model => model.UtilityCompanyId, "The current Utility Company field value is invalid.")
                        </div>

                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TariffCodeId, "Tariff Code ID")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.TariffCodeId)
                            @Html.ValidationMessageFor(model => model.TariffCodeId)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TariffCodeCode, "Tariff Code")
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.TariffCodeCode)
                            @Html.ValidationMessageFor(model => model.TariffCodeCode, "The current Tariff Code field value is invalid.")
                            @{
    if (Session["IsPostBack"] == "true")
    {
        var validationMessage = Model.TariffCodeCodeValidationMessage();
        if (!string.IsNullOrWhiteSpace(validationMessage))
        { 
                                <span class="field-validation-error" data-valmsg-for="TariffCodeCode" data-valmsg-replace="true">@validationMessage</span>
        }
    }
                            }
                        </div>

                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Description)
                            @Html.ValidationMessageFor(model => model.Description)
                            @{
    if (Session["IsPostBack"] == "true")
    {
        var validationMessage = Model.DescriptionValidationMessage();
        if (!string.IsNullOrWhiteSpace(validationMessage))
        { 
                                <span class="field-validation-error" data-valmsg-for="Description" data-valmsg-replace="true">@validationMessage</span>
        }
    }
                            }
                        </div>
                         <div class="clear"></div>
                        </div>
                        <div class="details-right-section">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.AccountTypeId, "AccountType")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("AccountTypeId", String.Empty)
                            @Html.ValidationMessageFor(model => model.AccountTypeId, "The current Account Type field value is invalid.")
                        </div>
                         <div class="clear"></div>
                        <div class="editor-label">
                            @Html.Label("LP Standard Tariff Code")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("LpStandardTariffCodeId", String.Empty)
                            @Html.ValidationMessageFor(model => model.LpStandardTariffCodeId, "The current LP Standard Tariff Code field value is invalid.")
                        </div>
                    </div>
                        </div>
                        </div>
                        </div>

                   
                      <br />
                    <div id="info"  class="activable">
                    <img id="dirImg3" class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent2',this.id)" /> 
                    <div class="edit_section_heading" onclick="showDiv('hideContent2',this.id)">Audit Information</div>
                    <div id="hideContent2" class="editdetails">
                    <div class="details-full-section">
                        <div class="details-left-section">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Inactive)
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.Inactive)
                            @Html.ValidationMessageFor(model => model.Inactive)
                        </div>
                         <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CreatedBy, "Created By")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.CreatedBy)
                            @Html.ValidationMessageFor(model => model.CreatedBy)
                        </div>
                         <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CreatedDate, "Created Date")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.CreatedDate)
                            @Html.ValidationMessageFor(model => model.CreatedDate)
                        </div>
                         <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastModifiedBy, "Last Modified By")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.LastModifiedBy)
                            @Html.ValidationMessageFor(model => model.LastModifiedBy)
                        </div>
                         <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastModifiedDate, "Last Modified Date")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.LastModifiedDate)
                            @Html.ValidationMessageFor(model => model.LastModifiedDate)
                        </div>
                    </div>
                        </div>
                </div>
                        </div>
                </div>
                   </div>
            </fieldset>
        </div>
    </div>
}
@*@if (Session["ErrorMessage"] != null)
{<h3>@Session["ErrorMessage"].ToString()</h3>}*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $(function () {
        $("#tabs").tabs();
    });