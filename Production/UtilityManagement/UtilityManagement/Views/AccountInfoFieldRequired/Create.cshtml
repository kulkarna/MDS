@model UtilityManagement.Models.AccountInfoFieldRequiredModel

@{
    ViewBag.Title = "Create Account Info Field Required";
}
@using UserInterfaceValidationExtensions

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

     <div class="edit_section">
        <div class="edit_header">
            <div class="accountInfo_ico"></div>
            <div class="edit_header_desc"><h4>Account Info Field Required</h4>
            <h3>New Record</h3>
            </div>
            </div>
        <div class="form_fieldset">
            <fieldset>
                <legend>Account Info Field Required</legend>
                  <div class="textblock">
                    <div class="details-data-section">
                   <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                    <div class="edit_section_heading"  onclick="showDiv('hideContent',this.id)" >General</div>
                    <div id="hideContent" class="editdetails">
                    <div class="details-full-section">
                        <div class="details-left-section">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UtilityCompanyId, "Utility Company")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("UtilityCompanyId", String.Empty)
                            @Html.ValidationMessageFor(model => model.UtilityCompanyId, "The current Utility Company field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Grid, "Grid")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.Grid)
                            @Html.ValidationMessageFor(model => model.Grid, "The current Grid field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ICap, "I-Cap")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.ICap)
                            @Html.ValidationMessageFor(model => model.ICap, "The current I-Cap field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LbmpZone, "LBMP Zone")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.LbmpZone)
                            @Html.ValidationMessageFor(model => model.LbmpZone, "The current Lbmp Zone field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LoadProfile, "Load Profile")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.LoadProfile)
                            @Html.ValidationMessageFor(model => model.LoadProfile, "The current Load Profile field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.MeterOwner, "Meter Owner")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.MeterOwner)
                            @Html.ValidationMessageFor(model => model.MeterOwner, "The current Meter Owner field value is invalid.")
                        </div>
                          <div class="clear"></div>
                         </div>
                        <div class="details-right-section">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.MeterType, "Meter Type")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.MeterType)
                            @Html.ValidationMessageFor(model => model.MeterType, "The current Meter Type field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.RateClass, "Rate Class")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.RateClass)
                            @Html.ValidationMessageFor(model => model.RateClass, "The current Rate Class field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TariffCode, "Tariff Code")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.TariffCode)
                            @Html.ValidationMessageFor(model => model.TariffCode, "The current Tariff Code field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TCap, "T-Cap")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.TCap)
                            @Html.ValidationMessageFor(model => model.TCap, "The current T-Cap field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Voltage, "Voltage")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.Voltage)
                            @Html.ValidationMessageFor(model => model.Voltage, "The current Voltage field value is invalid.")
                        </div>
                          <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Zone, "Zone")
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.Zone)
                            @Html.ValidationMessageFor(model => model.Zone, "The current Zone field value is invalid.")
                        </div>
                    </div>
                  </div>
                </div>
                </div>
            </fieldset>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(function () {
        $("#tabs").tabs();
    });