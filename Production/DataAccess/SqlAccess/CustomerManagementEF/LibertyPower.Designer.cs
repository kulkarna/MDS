//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_AccountType", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountType), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_TaxStatus", "TaxStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.TaxStatus), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContract_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), "AccountContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountDetail_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), "AccountDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountDetail), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountUsage_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), "AccountUsage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountUsage), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContract_Contract", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), "AccountContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContractCommission_AccountContract", "AccountContract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContract), "AccountContractCommission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContractCommission), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContractRate_AccountContract", "AccountContract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContract), "AccountContractRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContractRate), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountStatus_AccountContract", "AccountContract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContract), "AccountStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountStatus), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountUsage_UsageReqStatus", "UsageReqStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.UsageReqStatus), "AccountUsage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountUsage), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_ContractDealType", "ContractDealType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ContractDealType), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_ContractStatus", "ContractStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ContractStatus), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_ContractTemplateType", "ContractTemplateType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ContractTemplateType), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_ContractType", "ContractType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ContractType), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_CreditAgency", "CreditAgency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CreditAgency), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_Contract", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_BillingType", "BillingType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.BillingType), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_MeterType", "MeterType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.MeterType), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_BusinessActivity", "BusinessActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.BusinessActivity), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_BusinessType", "BusinessType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.BusinessType), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_SalesChannel", "SalesChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannel), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_SalesChannelSupport_SalesChannel", "SalesChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannel), "SalesChannelSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannelSupport), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_SalesChannelUser_SalesChannel", "SalesChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannel), "SalesChannelUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannelUser), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_Market", "Market", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Market), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_Utility", "Utility", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Utility), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_PricingType", "PricingType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.PricingType), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Website_WebsiteType", "WebsiteType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.WebsiteType), "Website", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Website), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_WebsiteMenu_Website", "Website", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Website), "WebsiteMenu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.WebsiteMenu), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_CustomerPreference", "CustomerPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerPreference), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.WebsiteMenu), "WebsiteMenu1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.WebsiteMenu), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_WebsiteMenu_ExternalWebsite", "Website", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Website), "WebsiteMenu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.WebsiteMenu), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.WebsiteMenu), "WebsiteMenu1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.WebsiteMenu), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contact), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_Name", "Name", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Name), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountBilling_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Address), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountService_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Address), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Address), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contact), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_Name", "Name", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Name), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_OwnerName", "Name", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Name), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Account_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Account), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContract_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContract_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContractCommission_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountContractCommission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContractCommission), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContractCommission_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountContractCommission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContractCommission), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContractRate_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountContractRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContractRate), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountContractRate_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountContractRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountContractRate), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountDetail_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountDetail), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountDetail_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountDetail), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountStatus_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountStatus), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountStatus_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountStatus), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountUsage_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountUsage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountUsage), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_AccountUsage_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "AccountUsage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountUsage), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Address_UserCreated", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Address), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Address_UserModified", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Address), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contact_UserCreated", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contact), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contact_UserModified", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contact), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_UserCreatedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Contract_UserModifiedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contract), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_UserCreated", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Customer_UserModified", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerPreference_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "CustomerPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerPreference), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerPreference_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "CustomerPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerPreference), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Name_UserCreated", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Name", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Name), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_Name_UserModified", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "Name", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Name), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_SalesChannelSupport_ManagerUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "SalesChannelSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannelSupport), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_SalesChannelSupport_SupportUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "SalesChannelSupport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannelSupport), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_SalesChannelUser_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "SalesChannelUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannelUser), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerAddress_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Address), "CustomerAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerAddress), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerContact_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Contact), "CustomerContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerContact), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerAddress_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), "CustomerAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerAddress), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerContact_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), "CustomerContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerContact), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerName_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Customer), "CustomerName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerName), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_CustomerName_Name", "Name", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Name), "CustomerName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.CustomerName), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK__UserRole", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.UserRole), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK__UserRole__RoleID__2FBA0BF1", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.UserRole), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK__UserID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.UserRole), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK__UserRole__UserID__2EC5E7B8", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.UserRole), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_EmailDistributionList_EmailGroup", "EmailGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.EmailGroup), "EmailDistributionList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.EmailDistributionList), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_EmailModel_EmailType", "EmailType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.EmailType), "EmailModel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.EmailModel), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_EmailModel_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Language), "EmailModel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.EmailModel), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "EmailTypeEmailGroup", "EmailGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.EmailGroup), "EmailType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.EmailType))]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientApplicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ClientApplicationType), "ClientSubmitApplicationKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ClientSubmitApplicationKey), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_AccountType", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.AccountType), "ChannelMarketSegment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ChannelMarketSegment), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_Market", "Market", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Market), "ChannelMarketSegment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ChannelMarketSegment), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_SalesChannel", "SalesChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannel), "ChannelMarketSegment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ChannelMarketSegment), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_MarketProducts_Market", "Market", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Market), "MarketProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.MarketProduct), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_MarketProducts_ProductBrand", "ProductBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ProductBrand), "MarketProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.MarketProduct), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_MarketProducts_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "MarketProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.MarketProduct), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_ChannelMarketTerm_Market", "Market", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.Market), "ChannelMarketTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ChannelMarketTerm), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_ChannelMarketTerm_SalesChannel", "SalesChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannel), "ChannelMarketTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.ChannelMarketTerm), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_TabletDocuments_SalesChannel_ChannelID", "SalesChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.SalesChannel), "TabletDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.TabletDocument), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_TabletDataCache_CacheItem", "TabletDataCacheItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.TabletDataCacheItem), "TabletDataCache", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.TabletDataCache), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_TabletDataCache_ChannelId", "TabletDataCacheItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.TabletDataCacheItem), "TabletDataCache", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.TabletDataCache), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_DoNotKnock_DoNotKnockHistory", "DoNotKnock", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.DoNotKnock), "DoNotKnockHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.DoNotKnockHistory), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_DoNotKnock_User_EditedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "DoNotKnock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.DoNotKnock), true)]
[assembly: EdmRelationshipAttribute("LibertyPowerModel", "FK_User_DoNotKnockHistory", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.User), "DoNotKnockHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibertyPower.DataAccess.SqlAccess.CustomerManagementEF.DoNotKnockHistory), true)]

#endregion

namespace LibertyPower.DataAccess.SqlAccess.CustomerManagementEF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LibertyPowerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LibertyPowerEntities object using the connection string found in the 'LibertyPowerEntities' section of the application configuration file.
        /// </summary>
        public LibertyPowerEntities() : base("name=LibertyPowerEntities", "LibertyPowerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibertyPowerEntities object.
        /// </summary>
        public LibertyPowerEntities(string connectionString) : base(connectionString, "LibertyPowerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibertyPowerEntities object.
        /// </summary>
        public LibertyPowerEntities(EntityConnection connection) : base(connection, "LibertyPowerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountContract> AccountContracts
        {
            get
            {
                if ((_AccountContracts == null))
                {
                    _AccountContracts = base.CreateObjectSet<AccountContract>("AccountContracts");
                }
                return _AccountContracts;
            }
        }
        private ObjectSet<AccountContract> _AccountContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountContractCommission> AccountContractCommissions
        {
            get
            {
                if ((_AccountContractCommissions == null))
                {
                    _AccountContractCommissions = base.CreateObjectSet<AccountContractCommission>("AccountContractCommissions");
                }
                return _AccountContractCommissions;
            }
        }
        private ObjectSet<AccountContractCommission> _AccountContractCommissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountContractRate> AccountContractRates
        {
            get
            {
                if ((_AccountContractRates == null))
                {
                    _AccountContractRates = base.CreateObjectSet<AccountContractRate>("AccountContractRates");
                }
                return _AccountContractRates;
            }
        }
        private ObjectSet<AccountContractRate> _AccountContractRates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountDetail> AccountDetails
        {
            get
            {
                if ((_AccountDetails == null))
                {
                    _AccountDetails = base.CreateObjectSet<AccountDetail>("AccountDetails");
                }
                return _AccountDetails;
            }
        }
        private ObjectSet<AccountDetail> _AccountDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountStatus> AccountStatuses
        {
            get
            {
                if ((_AccountStatuses == null))
                {
                    _AccountStatuses = base.CreateObjectSet<AccountStatus>("AccountStatuses");
                }
                return _AccountStatuses;
            }
        }
        private ObjectSet<AccountStatus> _AccountStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountType> AccountTypes
        {
            get
            {
                if ((_AccountTypes == null))
                {
                    _AccountTypes = base.CreateObjectSet<AccountType>("AccountTypes");
                }
                return _AccountTypes;
            }
        }
        private ObjectSet<AccountType> _AccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountUsage> AccountUsages
        {
            get
            {
                if ((_AccountUsages == null))
                {
                    _AccountUsages = base.CreateObjectSet<AccountUsage>("AccountUsages");
                }
                return _AccountUsages;
            }
        }
        private ObjectSet<AccountUsage> _AccountUsages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contracts
        {
            get
            {
                if ((_Contracts == null))
                {
                    _Contracts = base.CreateObjectSet<Contract>("Contracts");
                }
                return _Contracts;
            }
        }
        private ObjectSet<Contract> _Contracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractDealType> ContractDealTypes
        {
            get
            {
                if ((_ContractDealTypes == null))
                {
                    _ContractDealTypes = base.CreateObjectSet<ContractDealType>("ContractDealTypes");
                }
                return _ContractDealTypes;
            }
        }
        private ObjectSet<ContractDealType> _ContractDealTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractStatus> ContractStatuses
        {
            get
            {
                if ((_ContractStatuses == null))
                {
                    _ContractStatuses = base.CreateObjectSet<ContractStatus>("ContractStatuses");
                }
                return _ContractStatuses;
            }
        }
        private ObjectSet<ContractStatus> _ContractStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractTemplateType> ContractTemplateTypes
        {
            get
            {
                if ((_ContractTemplateTypes == null))
                {
                    _ContractTemplateTypes = base.CreateObjectSet<ContractTemplateType>("ContractTemplateTypes");
                }
                return _ContractTemplateTypes;
            }
        }
        private ObjectSet<ContractTemplateType> _ContractTemplateTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractType> ContractTypes
        {
            get
            {
                if ((_ContractTypes == null))
                {
                    _ContractTypes = base.CreateObjectSet<ContractType>("ContractTypes");
                }
                return _ContractTypes;
            }
        }
        private ObjectSet<ContractType> _ContractTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditAgency> CreditAgencies
        {
            get
            {
                if ((_CreditAgencies == null))
                {
                    _CreditAgencies = base.CreateObjectSet<CreditAgency>("CreditAgencies");
                }
                return _CreditAgencies;
            }
        }
        private ObjectSet<CreditAgency> _CreditAgencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaxStatus> TaxStatuses
        {
            get
            {
                if ((_TaxStatuses == null))
                {
                    _TaxStatuses = base.CreateObjectSet<TaxStatus>("TaxStatuses");
                }
                return _TaxStatuses;
            }
        }
        private ObjectSet<TaxStatus> _TaxStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsageReqStatus> UsageReqStatuses
        {
            get
            {
                if ((_UsageReqStatuses == null))
                {
                    _UsageReqStatuses = base.CreateObjectSet<UsageReqStatus>("UsageReqStatuses");
                }
                return _UsageReqStatuses;
            }
        }
        private ObjectSet<UsageReqStatus> _UsageReqStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillingType> BillingTypes
        {
            get
            {
                if ((_BillingTypes == null))
                {
                    _BillingTypes = base.CreateObjectSet<BillingType>("BillingTypes");
                }
                return _BillingTypes;
            }
        }
        private ObjectSet<BillingType> _BillingTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessActivity> BusinessActivities
        {
            get
            {
                if ((_BusinessActivities == null))
                {
                    _BusinessActivities = base.CreateObjectSet<BusinessActivity>("BusinessActivities");
                }
                return _BusinessActivities;
            }
        }
        private ObjectSet<BusinessActivity> _BusinessActivities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessType> BusinessTypes
        {
            get
            {
                if ((_BusinessTypes == null))
                {
                    _BusinessTypes = base.CreateObjectSet<BusinessType>("BusinessTypes");
                }
                return _BusinessTypes;
            }
        }
        private ObjectSet<BusinessType> _BusinessTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeterType> MeterTypes
        {
            get
            {
                if ((_MeterTypes == null))
                {
                    _MeterTypes = base.CreateObjectSet<MeterType>("MeterTypes");
                }
                return _MeterTypes;
            }
        }
        private ObjectSet<MeterType> _MeterTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesChannel> SalesChannels
        {
            get
            {
                if ((_SalesChannels == null))
                {
                    _SalesChannels = base.CreateObjectSet<SalesChannel>("SalesChannels");
                }
                return _SalesChannels;
            }
        }
        private ObjectSet<SalesChannel> _SalesChannels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesChannelSupport> SalesChannelSupports
        {
            get
            {
                if ((_SalesChannelSupports == null))
                {
                    _SalesChannelSupports = base.CreateObjectSet<SalesChannelSupport>("SalesChannelSupports");
                }
                return _SalesChannelSupports;
            }
        }
        private ObjectSet<SalesChannelSupport> _SalesChannelSupports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesChannelUser> SalesChannelUsers
        {
            get
            {
                if ((_SalesChannelUsers == null))
                {
                    _SalesChannelUsers = base.CreateObjectSet<SalesChannelUser>("SalesChannelUsers");
                }
                return _SalesChannelUsers;
            }
        }
        private ObjectSet<SalesChannelUser> _SalesChannelUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountService> AccountServices
        {
            get
            {
                if ((_AccountServices == null))
                {
                    _AccountServices = base.CreateObjectSet<AccountService>("AccountServices");
                }
                return _AccountServices;
            }
        }
        private ObjectSet<AccountService> _AccountServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelGroup> ChannelGroups
        {
            get
            {
                if ((_ChannelGroups == null))
                {
                    _ChannelGroups = base.CreateObjectSet<ChannelGroup>("ChannelGroups");
                }
                return _ChannelGroups;
            }
        }
        private ObjectSet<ChannelGroup> _ChannelGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelType> ChannelTypes
        {
            get
            {
                if ((_ChannelTypes == null))
                {
                    _ChannelTypes = base.CreateObjectSet<ChannelType>("ChannelTypes");
                }
                return _ChannelTypes;
            }
        }
        private ObjectSet<ChannelType> _ChannelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Market> Markets
        {
            get
            {
                if ((_Markets == null))
                {
                    _Markets = base.CreateObjectSet<Market>("Markets");
                }
                return _Markets;
            }
        }
        private ObjectSet<Market> _Markets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PricingType> PricingTypes
        {
            get
            {
                if ((_PricingTypes == null))
                {
                    _PricingTypes = base.CreateObjectSet<PricingType>("PricingTypes");
                }
                return _PricingTypes;
            }
        }
        private ObjectSet<PricingType> _PricingTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Utility> Utilities
        {
            get
            {
                if ((_Utilities == null))
                {
                    _Utilities = base.CreateObjectSet<Utility>("Utilities");
                }
                return _Utilities;
            }
        }
        private ObjectSet<Utility> _Utilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Website> Websites
        {
            get
            {
                if ((_Websites == null))
                {
                    _Websites = base.CreateObjectSet<Website>("Websites");
                }
                return _Websites;
            }
        }
        private ObjectSet<Website> _Websites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebsiteMenu> WebsiteMenus
        {
            get
            {
                if ((_WebsiteMenus == null))
                {
                    _WebsiteMenus = base.CreateObjectSet<WebsiteMenu>("WebsiteMenus");
                }
                return _WebsiteMenus;
            }
        }
        private ObjectSet<WebsiteMenu> _WebsiteMenus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebsiteType> WebsiteTypes
        {
            get
            {
                if ((_WebsiteTypes == null))
                {
                    _WebsiteTypes = base.CreateObjectSet<WebsiteType>("WebsiteTypes");
                }
                return _WebsiteTypes;
            }
        }
        private ObjectSet<WebsiteType> _WebsiteTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZipCode> ZipCodes
        {
            get
            {
                if ((_ZipCodes == null))
                {
                    _ZipCodes = base.CreateObjectSet<ZipCode>("ZipCodes");
                }
                return _ZipCodes;
            }
        }
        private ObjectSet<ZipCode> _ZipCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerPreference> CustomerPreferences
        {
            get
            {
                if ((_CustomerPreferences == null))
                {
                    _CustomerPreferences = base.CreateObjectSet<CustomerPreference>("CustomerPreferences");
                }
                return _CustomerPreferences;
            }
        }
        private ObjectSet<CustomerPreference> _CustomerPreferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Name> Names
        {
            get
            {
                if ((_Names == null))
                {
                    _Names = base.CreateObjectSet<Name>("Names");
                }
                return _Names;
            }
        }
        private ObjectSet<Name> _Names;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerAddress> CustomerAddresses
        {
            get
            {
                if ((_CustomerAddresses == null))
                {
                    _CustomerAddresses = base.CreateObjectSet<CustomerAddress>("CustomerAddresses");
                }
                return _CustomerAddresses;
            }
        }
        private ObjectSet<CustomerAddress> _CustomerAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerContact> CustomerContacts
        {
            get
            {
                if ((_CustomerContacts == null))
                {
                    _CustomerContacts = base.CreateObjectSet<CustomerContact>("CustomerContacts");
                }
                return _CustomerContacts;
            }
        }
        private ObjectSet<CustomerContact> _CustomerContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerName> CustomerNames
        {
            get
            {
                if ((_CustomerNames == null))
                {
                    _CustomerNames = base.CreateObjectSet<CustomerName>("CustomerNames");
                }
                return _CustomerNames;
            }
        }
        private ObjectSet<CustomerName> _CustomerNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Price> Prices
        {
            get
            {
                if ((_Prices == null))
                {
                    _Prices = base.CreateObjectSet<Price>("Prices");
                }
                return _Prices;
            }
        }
        private ObjectSet<Price> _Prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCrossPriceMulti> ProductCrossPriceMultis
        {
            get
            {
                if ((_ProductCrossPriceMultis == null))
                {
                    _ProductCrossPriceMultis = base.CreateObjectSet<ProductCrossPriceMulti>("ProductCrossPriceMultis");
                }
                return _ProductCrossPriceMultis;
            }
        }
        private ObjectSet<ProductCrossPriceMulti> _ProductCrossPriceMultis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesChannelChannelGroup> SalesChannelChannelGroups
        {
            get
            {
                if ((_SalesChannelChannelGroups == null))
                {
                    _SalesChannelChannelGroups = base.CreateObjectSet<SalesChannelChannelGroup>("SalesChannelChannelGroups");
                }
                return _SalesChannelChannelGroups;
            }
        }
        private ObjectSet<SalesChannelChannelGroup> _SalesChannelChannelGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCostRuleSet> ProductCostRuleSets
        {
            get
            {
                if ((_ProductCostRuleSets == null))
                {
                    _ProductCostRuleSets = base.CreateObjectSet<ProductCostRuleSet>("ProductCostRuleSets");
                }
                return _ProductCostRuleSets;
            }
        }
        private ObjectSet<ProductCostRuleSet> _ProductCostRuleSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UtilityPaymentTerm> UtilityPaymentTerms
        {
            get
            {
                if ((_UtilityPaymentTerms == null))
                {
                    _UtilityPaymentTerms = base.CreateObjectSet<UtilityPaymentTerm>("UtilityPaymentTerms");
                }
                return _UtilityPaymentTerms;
            }
        }
        private ObjectSet<UtilityPaymentTerm> _UtilityPaymentTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeniePriceMapping> GeniePriceMappings
        {
            get
            {
                if ((_GeniePriceMappings == null))
                {
                    _GeniePriceMappings = base.CreateObjectSet<GeniePriceMapping>("GeniePriceMappings");
                }
                return _GeniePriceMappings;
            }
        }
        private ObjectSet<GeniePriceMapping> _GeniePriceMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCrossPriceSet> ProductCrossPriceSet
        {
            get
            {
                if ((_ProductCrossPriceSet == null))
                {
                    _ProductCrossPriceSet = base.CreateObjectSet<ProductCrossPriceSet>("ProductCrossPriceSet");
                }
                return _ProductCrossPriceSet;
            }
        }
        private ObjectSet<ProductCrossPriceSet> _ProductCrossPriceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UtilityBillingType> UtilityBillingTypes
        {
            get
            {
                if ((_UtilityBillingTypes == null))
                {
                    _UtilityBillingTypes = base.CreateObjectSet<UtilityBillingType>("UtilityBillingTypes");
                }
                return _UtilityBillingTypes;
            }
        }
        private ObjectSet<UtilityBillingType> _UtilityBillingTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DailyPricingPriceTier> DailyPricingPriceTiers
        {
            get
            {
                if ((_DailyPricingPriceTiers == null))
                {
                    _DailyPricingPriceTiers = base.CreateObjectSet<DailyPricingPriceTier>("DailyPricingPriceTiers");
                }
                return _DailyPricingPriceTiers;
            }
        }
        private ObjectSet<DailyPricingPriceTier> _DailyPricingPriceTiers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalPricingOption> GlobalPricingOptions
        {
            get
            {
                if ((_GlobalPricingOptions == null))
                {
                    _GlobalPricingOptions = base.CreateObjectSet<GlobalPricingOption>("GlobalPricingOptions");
                }
                return _GlobalPricingOptions;
            }
        }
        private ObjectSet<GlobalPricingOption> _GlobalPricingOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductBrand> ProductBrands
        {
            get
            {
                if ((_ProductBrands == null))
                {
                    _ProductBrands = base.CreateObjectSet<ProductBrand>("ProductBrands");
                }
                return _ProductBrands;
            }
        }
        private ObjectSet<ProductBrand> _ProductBrands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesChannelPricingOption> SalesChannelPricingOptions
        {
            get
            {
                if ((_SalesChannelPricingOptions == null))
                {
                    _SalesChannelPricingOptions = base.CreateObjectSet<SalesChannelPricingOption>("SalesChannelPricingOptions");
                }
                return _SalesChannelPricingOptions;
            }
        }
        private ObjectSet<SalesChannelPricingOption> _SalesChannelPricingOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceClassMapping> ServiceClassMappings
        {
            get
            {
                if ((_ServiceClassMappings == null))
                {
                    _ServiceClassMappings = base.CreateObjectSet<ServiceClassMapping>("ServiceClassMappings");
                }
                return _ServiceClassMappings;
            }
        }
        private ObjectSet<ServiceClassMapping> _ServiceClassMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZoneMapping> ZoneMappings
        {
            get
            {
                if ((_ZoneMappings == null))
                {
                    _ZoneMappings = base.CreateObjectSet<ZoneMapping>("ZoneMappings");
                }
                return _ZoneMappings;
            }
        }
        private ObjectSet<ZoneMapping> _ZoneMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_service_rate_class> vw_service_rate_class
        {
            get
            {
                if ((_vw_service_rate_class == null))
                {
                    _vw_service_rate_class = base.CreateObjectSet<vw_service_rate_class>("vw_service_rate_class");
                }
                return _vw_service_rate_class;
            }
        }
        private ObjectSet<vw_service_rate_class> _vw_service_rate_class;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_zone> vw_zone
        {
            get
            {
                if ((_vw_zone == null))
                {
                    _vw_zone = base.CreateObjectSet<vw_zone>("vw_zone");
                }
                return _vw_zone;
            }
        }
        private ObjectSet<vw_zone> _vw_zone;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailDistributionList> EmailDistributionLists
        {
            get
            {
                if ((_EmailDistributionLists == null))
                {
                    _EmailDistributionLists = base.CreateObjectSet<EmailDistributionList>("EmailDistributionLists");
                }
                return _EmailDistributionLists;
            }
        }
        private ObjectSet<EmailDistributionList> _EmailDistributionLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailGroup> EmailGroups
        {
            get
            {
                if ((_EmailGroups == null))
                {
                    _EmailGroups = base.CreateObjectSet<EmailGroup>("EmailGroups");
                }
                return _EmailGroups;
            }
        }
        private ObjectSet<EmailGroup> _EmailGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailModel> EmailModels
        {
            get
            {
                if ((_EmailModels == null))
                {
                    _EmailModels = base.CreateObjectSet<EmailModel>("EmailModels");
                }
                return _EmailModels;
            }
        }
        private ObjectSet<EmailModel> _EmailModels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailType> EmailTypes
        {
            get
            {
                if ((_EmailTypes == null))
                {
                    _EmailTypes = base.CreateObjectSet<EmailType>("EmailTypes");
                }
                return _EmailTypes;
            }
        }
        private ObjectSet<EmailType> _EmailTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceClassGrouping> ServiceClassGroupings
        {
            get
            {
                if ((_ServiceClassGroupings == null))
                {
                    _ServiceClassGroupings = base.CreateObjectSet<ServiceClassGrouping>("ServiceClassGroupings");
                }
                return _ServiceClassGroupings;
            }
        }
        private ObjectSet<ServiceClassGrouping> _ServiceClassGroupings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientApplicationType> ClientApplicationTypes
        {
            get
            {
                if ((_ClientApplicationTypes == null))
                {
                    _ClientApplicationTypes = base.CreateObjectSet<ClientApplicationType>("ClientApplicationTypes");
                }
                return _ClientApplicationTypes;
            }
        }
        private ObjectSet<ClientApplicationType> _ClientApplicationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientSubmitApplicationKey> ClientSubmitApplicationKeys
        {
            get
            {
                if ((_ClientSubmitApplicationKeys == null))
                {
                    _ClientSubmitApplicationKeys = base.CreateObjectSet<ClientSubmitApplicationKey>("ClientSubmitApplicationKeys");
                }
                return _ClientSubmitApplicationKeys;
            }
        }
        private ObjectSet<ClientSubmitApplicationKey> _ClientSubmitApplicationKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelMarketSegment> ChannelMarketSegments
        {
            get
            {
                if ((_ChannelMarketSegments == null))
                {
                    _ChannelMarketSegments = base.CreateObjectSet<ChannelMarketSegment>("ChannelMarketSegments");
                }
                return _ChannelMarketSegments;
            }
        }
        private ObjectSet<ChannelMarketSegment> _ChannelMarketSegments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarketProduct> MarketProducts
        {
            get
            {
                if ((_MarketProducts == null))
                {
                    _MarketProducts = base.CreateObjectSet<MarketProduct>("MarketProducts");
                }
                return _MarketProducts;
            }
        }
        private ObjectSet<MarketProduct> _MarketProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesChannelSelectedProduct> SalesChannelSelectedProducts
        {
            get
            {
                if ((_SalesChannelSelectedProducts == null))
                {
                    _SalesChannelSelectedProducts = base.CreateObjectSet<SalesChannelSelectedProduct>("SalesChannelSelectedProducts");
                }
                return _SalesChannelSelectedProducts;
            }
        }
        private ObjectSet<SalesChannelSelectedProduct> _SalesChannelSelectedProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zip> Zips
        {
            get
            {
                if ((_Zips == null))
                {
                    _Zips = base.CreateObjectSet<Zip>("Zips");
                }
                return _Zips;
            }
        }
        private ObjectSet<Zip> _Zips;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelMarketTerm> ChannelMarketTerms
        {
            get
            {
                if ((_ChannelMarketTerms == null))
                {
                    _ChannelMarketTerms = base.CreateObjectSet<ChannelMarketTerm>("ChannelMarketTerms");
                }
                return _ChannelMarketTerms;
            }
        }
        private ObjectSet<ChannelMarketTerm> _ChannelMarketTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PromotionCode> PromotionCodes
        {
            get
            {
                if ((_PromotionCodes == null))
                {
                    _PromotionCodes = base.CreateObjectSet<PromotionCode>("PromotionCodes");
                }
                return _PromotionCodes;
            }
        }
        private ObjectSet<PromotionCode> _PromotionCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TabletDocument> TabletDocuments
        {
            get
            {
                if ((_TabletDocuments == null))
                {
                    _TabletDocuments = base.CreateObjectSet<TabletDocument>("TabletDocuments");
                }
                return _TabletDocuments;
            }
        }
        private ObjectSet<TabletDocument> _TabletDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DailyPricingGasPricesSetting> DailyPricingGasPricesSettings
        {
            get
            {
                if ((_DailyPricingGasPricesSettings == null))
                {
                    _DailyPricingGasPricesSettings = base.CreateObjectSet<DailyPricingGasPricesSetting>("DailyPricingGasPricesSettings");
                }
                return _DailyPricingGasPricesSettings;
            }
        }
        private ObjectSet<DailyPricingGasPricesSetting> _DailyPricingGasPricesSettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TabletDataCache> TabletDataCaches
        {
            get
            {
                if ((_TabletDataCaches == null))
                {
                    _TabletDataCaches = base.CreateObjectSet<TabletDataCache>("TabletDataCaches");
                }
                return _TabletDataCaches;
            }
        }
        private ObjectSet<TabletDataCache> _TabletDataCaches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TabletDataCacheItem> TabletDataCacheItems
        {
            get
            {
                if ((_TabletDataCacheItems == null))
                {
                    _TabletDataCacheItems = base.CreateObjectSet<TabletDataCacheItem>("TabletDataCacheItems");
                }
                return _TabletDataCacheItems;
            }
        }
        private ObjectSet<TabletDataCacheItem> _TabletDataCacheItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DoNotKnock> DoNotKnocks
        {
            get
            {
                if ((_DoNotKnocks == null))
                {
                    _DoNotKnocks = base.CreateObjectSet<DoNotKnock>("DoNotKnocks");
                }
                return _DoNotKnocks;
            }
        }
        private ObjectSet<DoNotKnock> _DoNotKnocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DoNotKnockHistory> DoNotKnockHistories
        {
            get
            {
                if ((_DoNotKnockHistories == null))
                {
                    _DoNotKnockHistories = base.CreateObjectSet<DoNotKnockHistory>("DoNotKnockHistories");
                }
                return _DoNotKnockHistories;
            }
        }
        private ObjectSet<DoNotKnockHistory> _DoNotKnockHistories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountContracts(AccountContract accountContract)
        {
            base.AddObject("AccountContracts", accountContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountContractCommissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountContractCommissions(AccountContractCommission accountContractCommission)
        {
            base.AddObject("AccountContractCommissions", accountContractCommission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountContractRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountContractRates(AccountContractRate accountContractRate)
        {
            base.AddObject("AccountContractRates", accountContractRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountDetails(AccountDetail accountDetail)
        {
            base.AddObject("AccountDetails", accountDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountStatuses(AccountStatus accountStatus)
        {
            base.AddObject("AccountStatuses", accountStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTypes(AccountType accountType)
        {
            base.AddObject("AccountTypes", accountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountUsages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountUsages(AccountUsage accountUsage)
        {
            base.AddObject("AccountUsages", accountUsage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContracts(Contract contract)
        {
            base.AddObject("Contracts", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractDealTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractDealTypes(ContractDealType contractDealType)
        {
            base.AddObject("ContractDealTypes", contractDealType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractStatuses(ContractStatus contractStatus)
        {
            base.AddObject("ContractStatuses", contractStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractTemplateTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractTemplateTypes(ContractTemplateType contractTemplateType)
        {
            base.AddObject("ContractTemplateTypes", contractTemplateType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractTypes(ContractType contractType)
        {
            base.AddObject("ContractTypes", contractType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditAgencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditAgencies(CreditAgency creditAgency)
        {
            base.AddObject("CreditAgencies", creditAgency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaxStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxStatuses(TaxStatus taxStatus)
        {
            base.AddObject("TaxStatuses", taxStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsageReqStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsageReqStatuses(UsageReqStatus usageReqStatus)
        {
            base.AddObject("UsageReqStatuses", usageReqStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillingTypes(BillingType billingType)
        {
            base.AddObject("BillingTypes", billingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessActivities(BusinessActivity businessActivity)
        {
            base.AddObject("BusinessActivities", businessActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessTypes(BusinessType businessType)
        {
            base.AddObject("BusinessTypes", businessType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeterTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeterTypes(MeterType meterType)
        {
            base.AddObject("MeterTypes", meterType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesChannels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesChannels(SalesChannel salesChannel)
        {
            base.AddObject("SalesChannels", salesChannel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesChannelSupports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesChannelSupports(SalesChannelSupport salesChannelSupport)
        {
            base.AddObject("SalesChannelSupports", salesChannelSupport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesChannelUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesChannelUsers(SalesChannelUser salesChannelUser)
        {
            base.AddObject("SalesChannelUsers", salesChannelUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountServices(AccountService accountService)
        {
            base.AddObject("AccountServices", accountService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelGroups(ChannelGroup channelGroup)
        {
            base.AddObject("ChannelGroups", channelGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelTypes(ChannelType channelType)
        {
            base.AddObject("ChannelTypes", channelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Markets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarkets(Market market)
        {
            base.AddObject("Markets", market);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PricingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPricingTypes(PricingType pricingType)
        {
            base.AddObject("PricingTypes", pricingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Utilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilities(Utility utility)
        {
            base.AddObject("Utilities", utility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Websites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebsites(Website website)
        {
            base.AddObject("Websites", website);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebsiteMenus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebsiteMenus(WebsiteMenu websiteMenu)
        {
            base.AddObject("WebsiteMenus", websiteMenu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebsiteTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebsiteTypes(WebsiteType websiteType)
        {
            base.AddObject("WebsiteTypes", websiteType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZipCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZipCodes(ZipCode zipCode)
        {
            base.AddObject("ZipCodes", zipCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerPreferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerPreferences(CustomerPreference customerPreference)
        {
            base.AddObject("CustomerPreferences", customerPreference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Names EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNames(Name name)
        {
            base.AddObject("Names", name);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerAddresses(CustomerAddress customerAddress)
        {
            base.AddObject("CustomerAddresses", customerAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerContacts(CustomerContact customerContact)
        {
            base.AddObject("CustomerContacts", customerContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerNames(CustomerName customerName)
        {
            base.AddObject("CustomerNames", customerName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrices(Price price)
        {
            base.AddObject("Prices", price);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCrossPriceMultis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCrossPriceMultis(ProductCrossPriceMulti productCrossPriceMulti)
        {
            base.AddObject("ProductCrossPriceMultis", productCrossPriceMulti);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesChannelChannelGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesChannelChannelGroups(SalesChannelChannelGroup salesChannelChannelGroup)
        {
            base.AddObject("SalesChannelChannelGroups", salesChannelChannelGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCostRuleSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCostRuleSets(ProductCostRuleSet productCostRuleSet)
        {
            base.AddObject("ProductCostRuleSets", productCostRuleSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UtilityPaymentTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilityPaymentTerms(UtilityPaymentTerm utilityPaymentTerm)
        {
            base.AddObject("UtilityPaymentTerms", utilityPaymentTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeniePriceMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeniePriceMappings(GeniePriceMapping geniePriceMapping)
        {
            base.AddObject("GeniePriceMappings", geniePriceMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCrossPriceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCrossPriceSet(ProductCrossPriceSet productCrossPriceSet)
        {
            base.AddObject("ProductCrossPriceSet", productCrossPriceSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UtilityBillingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilityBillingTypes(UtilityBillingType utilityBillingType)
        {
            base.AddObject("UtilityBillingTypes", utilityBillingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DailyPricingPriceTiers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDailyPricingPriceTiers(DailyPricingPriceTier dailyPricingPriceTier)
        {
            base.AddObject("DailyPricingPriceTiers", dailyPricingPriceTier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalPricingOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalPricingOptions(GlobalPricingOption globalPricingOption)
        {
            base.AddObject("GlobalPricingOptions", globalPricingOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductBrands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductBrands(ProductBrand productBrand)
        {
            base.AddObject("ProductBrands", productBrand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesChannelPricingOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesChannelPricingOptions(SalesChannelPricingOption salesChannelPricingOption)
        {
            base.AddObject("SalesChannelPricingOptions", salesChannelPricingOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceClassMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceClassMappings(ServiceClassMapping serviceClassMapping)
        {
            base.AddObject("ServiceClassMappings", serviceClassMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZoneMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZoneMappings(ZoneMapping zoneMapping)
        {
            base.AddObject("ZoneMappings", zoneMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_service_rate_class EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_service_rate_class(vw_service_rate_class vw_service_rate_class)
        {
            base.AddObject("vw_service_rate_class", vw_service_rate_class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_zone EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_zone(vw_zone vw_zone)
        {
            base.AddObject("vw_zone", vw_zone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailDistributionLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailDistributionLists(EmailDistributionList emailDistributionList)
        {
            base.AddObject("EmailDistributionLists", emailDistributionList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailGroups(EmailGroup emailGroup)
        {
            base.AddObject("EmailGroups", emailGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailModels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailModels(EmailModel emailModel)
        {
            base.AddObject("EmailModels", emailModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTypes(EmailType emailType)
        {
            base.AddObject("EmailTypes", emailType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceClassGroupings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceClassGroupings(ServiceClassGrouping serviceClassGrouping)
        {
            base.AddObject("ServiceClassGroupings", serviceClassGrouping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientApplicationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientApplicationTypes(ClientApplicationType clientApplicationType)
        {
            base.AddObject("ClientApplicationTypes", clientApplicationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientSubmitApplicationKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientSubmitApplicationKeys(ClientSubmitApplicationKey clientSubmitApplicationKey)
        {
            base.AddObject("ClientSubmitApplicationKeys", clientSubmitApplicationKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelMarketSegments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelMarketSegments(ChannelMarketSegment channelMarketSegment)
        {
            base.AddObject("ChannelMarketSegments", channelMarketSegment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarketProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarketProducts(MarketProduct marketProduct)
        {
            base.AddObject("MarketProducts", marketProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesChannelSelectedProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesChannelSelectedProducts(SalesChannelSelectedProduct salesChannelSelectedProduct)
        {
            base.AddObject("SalesChannelSelectedProducts", salesChannelSelectedProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Zips EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZips(Zip zip)
        {
            base.AddObject("Zips", zip);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelMarketTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelMarketTerms(ChannelMarketTerm channelMarketTerm)
        {
            base.AddObject("ChannelMarketTerms", channelMarketTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PromotionCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromotionCodes(PromotionCode promotionCode)
        {
            base.AddObject("PromotionCodes", promotionCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TabletDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTabletDocuments(TabletDocument tabletDocument)
        {
            base.AddObject("TabletDocuments", tabletDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DailyPricingGasPricesSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDailyPricingGasPricesSettings(DailyPricingGasPricesSetting dailyPricingGasPricesSetting)
        {
            base.AddObject("DailyPricingGasPricesSettings", dailyPricingGasPricesSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TabletDataCaches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTabletDataCaches(TabletDataCache tabletDataCache)
        {
            base.AddObject("TabletDataCaches", tabletDataCache);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TabletDataCacheItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTabletDataCacheItems(TabletDataCacheItem tabletDataCacheItem)
        {
            base.AddObject("TabletDataCacheItems", tabletDataCacheItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DoNotKnocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoNotKnocks(DoNotKnock doNotKnock)
        {
            base.AddObject("DoNotKnocks", doNotKnock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DoNotKnockHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoNotKnockHistories(DoNotKnockHistory doNotKnockHistory)
        {
            base.AddObject("DoNotKnockHistories", doNotKnockHistory);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="versionCode">No Metadata Documentation available.</param>
        public ObjectResult<GetContractTemplateVersion_Result> GetContractTemplateVersion(global::System.String versionCode)
        {
            ObjectParameter versionCodeParameter;
            if (versionCode != null)
            {
                versionCodeParameter = new ObjectParameter("VersionCode", versionCode);
            }
            else
            {
                versionCodeParameter = new ObjectParameter("VersionCode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetContractTemplateVersion_Result>("GetContractTemplateVersion", versionCodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="utilityId">No Metadata Documentation available.</param>
        /// <param name="marketId">No Metadata Documentation available.</param>
        /// <param name="contractTypeId">No Metadata Documentation available.</param>
        /// <param name="contractDealTypeId">No Metadata Documentation available.</param>
        /// <param name="contractTemplateTypeId">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> usp_IsWorkflowQueueAvailable(Nullable<global::System.Int32> utilityId, Nullable<global::System.Int32> marketId, Nullable<global::System.Int32> contractTypeId, Nullable<global::System.Int32> contractDealTypeId, Nullable<global::System.Int32> contractTemplateTypeId)
        {
            ObjectParameter utilityIdParameter;
            if (utilityId.HasValue)
            {
                utilityIdParameter = new ObjectParameter("UtilityId", utilityId);
            }
            else
            {
                utilityIdParameter = new ObjectParameter("UtilityId", typeof(global::System.Int32));
            }
    
            ObjectParameter marketIdParameter;
            if (marketId.HasValue)
            {
                marketIdParameter = new ObjectParameter("MarketId", marketId);
            }
            else
            {
                marketIdParameter = new ObjectParameter("MarketId", typeof(global::System.Int32));
            }
    
            ObjectParameter contractTypeIdParameter;
            if (contractTypeId.HasValue)
            {
                contractTypeIdParameter = new ObjectParameter("ContractTypeId", contractTypeId);
            }
            else
            {
                contractTypeIdParameter = new ObjectParameter("ContractTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter contractDealTypeIdParameter;
            if (contractDealTypeId.HasValue)
            {
                contractDealTypeIdParameter = new ObjectParameter("ContractDealTypeId", contractDealTypeId);
            }
            else
            {
                contractDealTypeIdParameter = new ObjectParameter("ContractDealTypeId", typeof(global::System.Int32));
            }
    
            ObjectParameter contractTemplateTypeIdParameter;
            if (contractTemplateTypeId.HasValue)
            {
                contractTemplateTypeIdParameter = new ObjectParameter("ContractTemplateTypeId", contractTemplateTypeId);
            }
            else
            {
                contractTemplateTypeIdParameter = new ObjectParameter("ContractTemplateTypeId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("usp_IsWorkflowQueueAvailable", utilityIdParameter, marketIdParameter, contractTypeIdParameter, contractDealTypeIdParameter, contractTemplateTypeIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="migrationComplete">Initial value of the MigrationComplete property.</param>
        public static Account CreateAccount(global::System.Int32 accountID, global::System.DateTime modified, global::System.DateTime dateCreated, global::System.Boolean migrationComplete)
        {
            Account account = new Account();
            account.AccountID = accountID;
            account.Modified = modified;
            account.DateCreated = dateCreated;
            account.MigrationComplete = migrationComplete;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountIdLegacy
        {
            get
            {
                return _AccountIdLegacy;
            }
            set
            {
                OnAccountIdLegacyChanging(value);
                ReportPropertyChanging("AccountIdLegacy");
                _AccountIdLegacy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountIdLegacy");
                OnAccountIdLegacyChanged();
            }
        }
        private global::System.String _AccountIdLegacy;
        partial void OnAccountIdLegacyChanging(global::System.String value);
        partial void OnAccountIdLegacyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountTypeID
        {
            get
            {
                return _AccountTypeID;
            }
            set
            {
                OnAccountTypeIDChanging(value);
                ReportPropertyChanging("AccountTypeID");
                _AccountTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTypeID");
                OnAccountTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountTypeID;
        partial void OnAccountTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerIdLegacy
        {
            get
            {
                return _CustomerIdLegacy;
            }
            set
            {
                OnCustomerIdLegacyChanging(value);
                ReportPropertyChanging("CustomerIdLegacy");
                _CustomerIdLegacy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerIdLegacy");
                OnCustomerIdLegacyChanged();
            }
        }
        private global::System.String _CustomerIdLegacy;
        partial void OnCustomerIdLegacyChanging(global::System.String value);
        partial void OnCustomerIdLegacyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.String _EntityID;
        partial void OnEntityIDChanging(global::System.String value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RetailMktID
        {
            get
            {
                return _RetailMktID;
            }
            set
            {
                OnRetailMktIDChanging(value);
                ReportPropertyChanging("RetailMktID");
                _RetailMktID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetailMktID");
                OnRetailMktIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RetailMktID;
        partial void OnRetailMktIDChanging(Nullable<global::System.Int32> value);
        partial void OnRetailMktIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UtilityID
        {
            get
            {
                return _UtilityID;
            }
            set
            {
                OnUtilityIDChanging(value);
                ReportPropertyChanging("UtilityID");
                _UtilityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UtilityID");
                OnUtilityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UtilityID;
        partial void OnUtilityIDChanging(Nullable<global::System.Int32> value);
        partial void OnUtilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountNameID
        {
            get
            {
                return _AccountNameID;
            }
            set
            {
                OnAccountNameIDChanging(value);
                ReportPropertyChanging("AccountNameID");
                _AccountNameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountNameID");
                OnAccountNameIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountNameID;
        partial void OnAccountNameIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BillingAddressID
        {
            get
            {
                return _BillingAddressID;
            }
            set
            {
                OnBillingAddressIDChanging(value);
                ReportPropertyChanging("BillingAddressID");
                _BillingAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingAddressID");
                OnBillingAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BillingAddressID;
        partial void OnBillingAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnBillingAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BillingContactID
        {
            get
            {
                return _BillingContactID;
            }
            set
            {
                OnBillingContactIDChanging(value);
                ReportPropertyChanging("BillingContactID");
                _BillingContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingContactID");
                OnBillingContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BillingContactID;
        partial void OnBillingContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnBillingContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceAddressID
        {
            get
            {
                return _ServiceAddressID;
            }
            set
            {
                OnServiceAddressIDChanging(value);
                ReportPropertyChanging("ServiceAddressID");
                _ServiceAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceAddressID");
                OnServiceAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceAddressID;
        partial void OnServiceAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Origin
        {
            get
            {
                return _Origin;
            }
            set
            {
                OnOriginChanging(value);
                ReportPropertyChanging("Origin");
                _Origin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Origin");
                OnOriginChanged();
            }
        }
        private global::System.String _Origin;
        partial void OnOriginChanging(global::System.String value);
        partial void OnOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxStatusID
        {
            get
            {
                return _TaxStatusID;
            }
            set
            {
                OnTaxStatusIDChanging(value);
                ReportPropertyChanging("TaxStatusID");
                _TaxStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxStatusID");
                OnTaxStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxStatusID;
        partial void OnTaxStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaxStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PorOption
        {
            get
            {
                return _PorOption;
            }
            set
            {
                OnPorOptionChanging(value);
                ReportPropertyChanging("PorOption");
                _PorOption = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PorOption");
                OnPorOptionChanged();
            }
        }
        private Nullable<global::System.Boolean> _PorOption;
        partial void OnPorOptionChanging(Nullable<global::System.Boolean> value);
        partial void OnPorOptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BillingTypeID
        {
            get
            {
                return _BillingTypeID;
            }
            set
            {
                OnBillingTypeIDChanging(value);
                ReportPropertyChanging("BillingTypeID");
                _BillingTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingTypeID");
                OnBillingTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BillingTypeID;
        partial void OnBillingTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnBillingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zone
        {
            get
            {
                return _Zone;
            }
            set
            {
                OnZoneChanging(value);
                ReportPropertyChanging("Zone");
                _Zone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zone");
                OnZoneChanged();
            }
        }
        private global::System.String _Zone;
        partial void OnZoneChanging(global::System.String value);
        partial void OnZoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceRateClass
        {
            get
            {
                return _ServiceRateClass;
            }
            set
            {
                OnServiceRateClassChanging(value);
                ReportPropertyChanging("ServiceRateClass");
                _ServiceRateClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServiceRateClass");
                OnServiceRateClassChanged();
            }
        }
        private global::System.String _ServiceRateClass;
        partial void OnServiceRateClassChanging(global::System.String value);
        partial void OnServiceRateClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StratumVariable
        {
            get
            {
                return _StratumVariable;
            }
            set
            {
                OnStratumVariableChanging(value);
                ReportPropertyChanging("StratumVariable");
                _StratumVariable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StratumVariable");
                OnStratumVariableChanged();
            }
        }
        private global::System.String _StratumVariable;
        partial void OnStratumVariableChanging(global::System.String value);
        partial void OnStratumVariableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillingGroup
        {
            get
            {
                return _BillingGroup;
            }
            set
            {
                OnBillingGroupChanging(value);
                ReportPropertyChanging("BillingGroup");
                _BillingGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillingGroup");
                OnBillingGroupChanged();
            }
        }
        private global::System.String _BillingGroup;
        partial void OnBillingGroupChanging(global::System.String value);
        partial void OnBillingGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Icap
        {
            get
            {
                return _Icap;
            }
            set
            {
                OnIcapChanging(value);
                ReportPropertyChanging("Icap");
                _Icap = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Icap");
                OnIcapChanged();
            }
        }
        private global::System.String _Icap;
        partial void OnIcapChanging(global::System.String value);
        partial void OnIcapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tcap
        {
            get
            {
                return _Tcap;
            }
            set
            {
                OnTcapChanging(value);
                ReportPropertyChanging("Tcap");
                _Tcap = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tcap");
                OnTcapChanged();
            }
        }
        private global::System.String _Tcap;
        partial void OnTcapChanging(global::System.String value);
        partial void OnTcapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadProfile
        {
            get
            {
                return _LoadProfile;
            }
            set
            {
                OnLoadProfileChanging(value);
                ReportPropertyChanging("LoadProfile");
                _LoadProfile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoadProfile");
                OnLoadProfileChanged();
            }
        }
        private global::System.String _LoadProfile;
        partial void OnLoadProfileChanging(global::System.String value);
        partial void OnLoadProfileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossCode
        {
            get
            {
                return _LossCode;
            }
            set
            {
                OnLossCodeChanging(value);
                ReportPropertyChanging("LossCode");
                _LossCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LossCode");
                OnLossCodeChanged();
            }
        }
        private global::System.String _LossCode;
        partial void OnLossCodeChanging(global::System.String value);
        partial void OnLossCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MeterTypeID
        {
            get
            {
                return _MeterTypeID;
            }
            set
            {
                OnMeterTypeIDChanging(value);
                ReportPropertyChanging("MeterTypeID");
                _MeterTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeterTypeID");
                OnMeterTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MeterTypeID;
        partial void OnMeterTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMeterTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentContractID
        {
            get
            {
                return _CurrentContractID;
            }
            set
            {
                OnCurrentContractIDChanging(value);
                ReportPropertyChanging("CurrentContractID");
                _CurrentContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentContractID");
                OnCurrentContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentContractID;
        partial void OnCurrentContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentRenewalContractID
        {
            get
            {
                return _CurrentRenewalContractID;
            }
            set
            {
                OnCurrentRenewalContractIDChanging(value);
                ReportPropertyChanging("CurrentRenewalContractID");
                _CurrentRenewalContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentRenewalContractID");
                OnCurrentRenewalContractIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentRenewalContractID;
        partial void OnCurrentRenewalContractIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentRenewalContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MigrationComplete
        {
            get
            {
                return _MigrationComplete;
            }
            set
            {
                OnMigrationCompleteChanging(value);
                ReportPropertyChanging("MigrationComplete");
                _MigrationComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MigrationComplete");
                OnMigrationCompleteChanged();
            }
        }
        private global::System.Boolean _MigrationComplete;
        partial void OnMigrationCompleteChanging(global::System.Boolean value);
        partial void OnMigrationCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeliveryLocationRefID
        {
            get
            {
                return _DeliveryLocationRefID;
            }
            set
            {
                OnDeliveryLocationRefIDChanging(value);
                ReportPropertyChanging("DeliveryLocationRefID");
                _DeliveryLocationRefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryLocationRefID");
                OnDeliveryLocationRefIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DeliveryLocationRefID;
        partial void OnDeliveryLocationRefIDChanging(Nullable<global::System.Int32> value);
        partial void OnDeliveryLocationRefIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoadProfileRefID
        {
            get
            {
                return _LoadProfileRefID;
            }
            set
            {
                OnLoadProfileRefIDChanging(value);
                ReportPropertyChanging("LoadProfileRefID");
                _LoadProfileRefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadProfileRefID");
                OnLoadProfileRefIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LoadProfileRefID;
        partial void OnLoadProfileRefIDChanging(Nullable<global::System.Int32> value);
        partial void OnLoadProfileRefIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceClassRefID
        {
            get
            {
                return _ServiceClassRefID;
            }
            set
            {
                OnServiceClassRefIDChanging(value);
                ReportPropertyChanging("ServiceClassRefID");
                _ServiceClassRefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceClassRefID");
                OnServiceClassRefIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceClassRefID;
        partial void OnServiceClassRefIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceClassRefIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_AccountType", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("LibertyPowerModel.FK_Account_AccountType", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("LibertyPowerModel.FK_Account_AccountType", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("LibertyPowerModel.FK_Account_AccountType", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("LibertyPowerModel.FK_Account_AccountType", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_Account_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_Account_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_Account_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("LibertyPowerModel.FK_Account_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_TaxStatus", "TaxStatus")]
        public TaxStatus TaxStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxStatus>("LibertyPowerModel.FK_Account_TaxStatus", "TaxStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxStatus>("LibertyPowerModel.FK_Account_TaxStatus", "TaxStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxStatus> TaxStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxStatus>("LibertyPowerModel.FK_Account_TaxStatus", "TaxStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxStatus>("LibertyPowerModel.FK_Account_TaxStatus", "TaxStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_Account", "AccountContract")]
        public EntityCollection<AccountContract> AccountContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_Account", "AccountContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_Account", "AccountContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountDetail_Account", "AccountDetail")]
        public EntityCollection<AccountDetail> AccountDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountDetail>("LibertyPowerModel.FK_AccountDetail_Account", "AccountDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountDetail>("LibertyPowerModel.FK_AccountDetail_Account", "AccountDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_Account", "AccountUsage")]
        public EntityCollection<AccountUsage> AccountUsages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_Account", "AccountUsage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_Account", "AccountUsage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Contract", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LibertyPowerModel.FK_Account_Contract", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LibertyPowerModel.FK_Account_Contract", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LibertyPowerModel.FK_Account_Contract", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("LibertyPowerModel.FK_Account_Contract", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_BillingType", "BillingType")]
        public BillingType BillingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillingType>("LibertyPowerModel.FK_Account_BillingType", "BillingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillingType>("LibertyPowerModel.FK_Account_BillingType", "BillingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BillingType> BillingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BillingType>("LibertyPowerModel.FK_Account_BillingType", "BillingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BillingType>("LibertyPowerModel.FK_Account_BillingType", "BillingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_MeterType", "MeterType")]
        public MeterType MeterType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeterType>("LibertyPowerModel.FK_Account_MeterType", "MeterType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeterType>("LibertyPowerModel.FK_Account_MeterType", "MeterType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeterType> MeterTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeterType>("LibertyPowerModel.FK_Account_MeterType", "MeterType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeterType>("LibertyPowerModel.FK_Account_MeterType", "MeterType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Market", "Market")]
        public Market Market
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_Account_Market", "Market").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_Account_Market", "Market").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Market> MarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_Account_Market", "Market");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Market>("LibertyPowerModel.FK_Account_Market", "Market", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Utility", "Utility")]
        public Utility Utility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utility>("LibertyPowerModel.FK_Account_Utility", "Utility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utility>("LibertyPowerModel.FK_Account_Utility", "Utility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utility> UtilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utility>("LibertyPowerModel.FK_Account_Utility", "Utility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utility>("LibertyPowerModel.FK_Account_Utility", "Utility", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_Account_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_Account_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_Account_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("LibertyPowerModel.FK_Account_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Name", "Name")]
        public Name Name
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Account_Name", "Name").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Account_Name", "Name").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Name> NameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Account_Name", "Name");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Name>("LibertyPowerModel.FK_Account_Name", "Name", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountBilling_Address", "Address")]
        public Address BillingAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_AccountBilling_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_AccountBilling_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> BillingAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_AccountBilling_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("LibertyPowerModel.FK_AccountBilling_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountService_Address", "Address")]
        public Address ServiceAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_AccountService_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_AccountService_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> ServiceAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_AccountService_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("LibertyPowerModel.FK_AccountService_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_UserCreatedBy", "User")]
        public User CreatedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Account_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Account_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Account_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Account_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_UserModifiedBy", "User")]
        public User ModifiedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Account_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Account_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ModifiedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Account_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Account_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountContract object.
        /// </summary>
        /// <param name="accountContractID">Initial value of the AccountContractID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="migrationComplete">Initial value of the MigrationComplete property.</param>
        /// <param name="isRenewalMigration">Initial value of the IsRenewalMigration property.</param>
        public static AccountContract CreateAccountContract(global::System.Int32 accountContractID, global::System.Int32 accountID, global::System.Int32 contractID, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy, global::System.Boolean migrationComplete, global::System.Boolean isRenewalMigration)
        {
            AccountContract accountContract = new AccountContract();
            accountContract.AccountContractID = accountContractID;
            accountContract.AccountID = accountID;
            accountContract.ContractID = contractID;
            accountContract.Modified = modified;
            accountContract.ModifiedBy = modifiedBy;
            accountContract.DateCreated = dateCreated;
            accountContract.CreatedBy = createdBy;
            accountContract.MigrationComplete = migrationComplete;
            accountContract.IsRenewalMigration = isRenewalMigration;
            return accountContract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountContractID
        {
            get
            {
                return _AccountContractID;
            }
            set
            {
                if (_AccountContractID != value)
                {
                    OnAccountContractIDChanging(value);
                    ReportPropertyChanging("AccountContractID");
                    _AccountContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountContractID");
                    OnAccountContractIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountContractID;
        partial void OnAccountContractIDChanging(global::System.Int32 value);
        partial void OnAccountContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                OnContractIDChanging(value);
                ReportPropertyChanging("ContractID");
                _ContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractID");
                OnContractIDChanged();
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestedStartDate
        {
            get
            {
                return _RequestedStartDate;
            }
            set
            {
                OnRequestedStartDateChanging(value);
                ReportPropertyChanging("RequestedStartDate");
                _RequestedStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedStartDate");
                OnRequestedStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestedStartDate;
        partial void OnRequestedStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestedStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SendEnrollmentDate
        {
            get
            {
                return _SendEnrollmentDate;
            }
            set
            {
                OnSendEnrollmentDateChanging(value);
                ReportPropertyChanging("SendEnrollmentDate");
                _SendEnrollmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendEnrollmentDate");
                OnSendEnrollmentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SendEnrollmentDate;
        partial void OnSendEnrollmentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSendEnrollmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MigrationComplete
        {
            get
            {
                return _MigrationComplete;
            }
            set
            {
                OnMigrationCompleteChanging(value);
                ReportPropertyChanging("MigrationComplete");
                _MigrationComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MigrationComplete");
                OnMigrationCompleteChanged();
            }
        }
        private global::System.Boolean _MigrationComplete;
        partial void OnMigrationCompleteChanging(global::System.Boolean value);
        partial void OnMigrationCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRenewalMigration
        {
            get
            {
                return _IsRenewalMigration;
            }
            set
            {
                OnIsRenewalMigrationChanging(value);
                ReportPropertyChanging("IsRenewalMigration");
                _IsRenewalMigration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRenewalMigration");
                OnIsRenewalMigrationChanged();
            }
        }
        private global::System.Boolean _IsRenewalMigration;
        partial void OnIsRenewalMigrationChanging(global::System.Boolean value);
        partial void OnIsRenewalMigrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountContractStatusID
        {
            get
            {
                return _AccountContractStatusID;
            }
            set
            {
                OnAccountContractStatusIDChanging(value);
                ReportPropertyChanging("AccountContractStatusID");
                _AccountContractStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountContractStatusID");
                OnAccountContractStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountContractStatusID;
        partial void OnAccountContractStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountContractStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountContractStatusReasonID
        {
            get
            {
                return _AccountContractStatusReasonID;
            }
            set
            {
                OnAccountContractStatusReasonIDChanging(value);
                ReportPropertyChanging("AccountContractStatusReasonID");
                _AccountContractStatusReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountContractStatusReasonID");
                OnAccountContractStatusReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountContractStatusReasonID;
        partial void OnAccountContractStatusReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountContractStatusReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SettlementLocationRefID
        {
            get
            {
                return _SettlementLocationRefID;
            }
            set
            {
                OnSettlementLocationRefIDChanging(value);
                ReportPropertyChanging("SettlementLocationRefID");
                _SettlementLocationRefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SettlementLocationRefID");
                OnSettlementLocationRefIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SettlementLocationRefID;
        partial void OnSettlementLocationRefIDChanging(Nullable<global::System.Int32> value);
        partial void OnSettlementLocationRefIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountContract_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountContract_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountContract_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("LibertyPowerModel.FK_AccountContract_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_Contract", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LibertyPowerModel.FK_AccountContract_Contract", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LibertyPowerModel.FK_AccountContract_Contract", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("LibertyPowerModel.FK_AccountContract_Contract", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("LibertyPowerModel.FK_AccountContract_Contract", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractCommission_AccountContract", "AccountContractCommission")]
        public EntityCollection<AccountContractCommission> AccountContractCommissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContractCommission>("LibertyPowerModel.FK_AccountContractCommission_AccountContract", "AccountContractCommission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContractCommission>("LibertyPowerModel.FK_AccountContractCommission_AccountContract", "AccountContractCommission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractRate_AccountContract", "AccountContractRate")]
        public EntityCollection<AccountContractRate> AccountContractRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContractRate>("LibertyPowerModel.FK_AccountContractRate_AccountContract", "AccountContractRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContractRate>("LibertyPowerModel.FK_AccountContractRate_AccountContract", "AccountContractRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountStatus_AccountContract", "AccountStatus")]
        public EntityCollection<AccountStatus> AccountStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountStatus>("LibertyPowerModel.FK_AccountStatus_AccountContract", "AccountStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountStatus>("LibertyPowerModel.FK_AccountStatus_AccountContract", "AccountStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_UserCreatedBy", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_UserModifiedBy", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountContract_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountContractCommission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountContractCommission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountContractCommission object.
        /// </summary>
        /// <param name="accountContractCommissionID">Initial value of the AccountContractCommissionID property.</param>
        /// <param name="accountContractID">Initial value of the AccountContractID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static AccountContractCommission CreateAccountContractCommission(global::System.Int32 accountContractCommissionID, global::System.Int32 accountContractID, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            AccountContractCommission accountContractCommission = new AccountContractCommission();
            accountContractCommission.AccountContractCommissionID = accountContractCommissionID;
            accountContractCommission.AccountContractID = accountContractID;
            accountContractCommission.Modified = modified;
            accountContractCommission.ModifiedBy = modifiedBy;
            accountContractCommission.DateCreated = dateCreated;
            accountContractCommission.CreatedBy = createdBy;
            return accountContractCommission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountContractCommissionID
        {
            get
            {
                return _AccountContractCommissionID;
            }
            set
            {
                if (_AccountContractCommissionID != value)
                {
                    OnAccountContractCommissionIDChanging(value);
                    ReportPropertyChanging("AccountContractCommissionID");
                    _AccountContractCommissionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountContractCommissionID");
                    OnAccountContractCommissionIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountContractCommissionID;
        partial void OnAccountContractCommissionIDChanging(global::System.Int32 value);
        partial void OnAccountContractCommissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountContractID
        {
            get
            {
                return _AccountContractID;
            }
            set
            {
                OnAccountContractIDChanging(value);
                ReportPropertyChanging("AccountContractID");
                _AccountContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountContractID");
                OnAccountContractIDChanged();
            }
        }
        private global::System.Int32 _AccountContractID;
        partial void OnAccountContractIDChanging(global::System.Int32 value);
        partial void OnAccountContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EvergreenOptionID
        {
            get
            {
                return _EvergreenOptionID;
            }
            set
            {
                OnEvergreenOptionIDChanging(value);
                ReportPropertyChanging("EvergreenOptionID");
                _EvergreenOptionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvergreenOptionID");
                OnEvergreenOptionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EvergreenOptionID;
        partial void OnEvergreenOptionIDChanging(Nullable<global::System.Int32> value);
        partial void OnEvergreenOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EvergreenCommissionEnd
        {
            get
            {
                return _EvergreenCommissionEnd;
            }
            set
            {
                OnEvergreenCommissionEndChanging(value);
                ReportPropertyChanging("EvergreenCommissionEnd");
                _EvergreenCommissionEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvergreenCommissionEnd");
                OnEvergreenCommissionEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _EvergreenCommissionEnd;
        partial void OnEvergreenCommissionEndChanging(Nullable<global::System.DateTime> value);
        partial void OnEvergreenCommissionEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EvergreenCommissionRate
        {
            get
            {
                return _EvergreenCommissionRate;
            }
            set
            {
                OnEvergreenCommissionRateChanging(value);
                ReportPropertyChanging("EvergreenCommissionRate");
                _EvergreenCommissionRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EvergreenCommissionRate");
                OnEvergreenCommissionRateChanged();
            }
        }
        private Nullable<global::System.Double> _EvergreenCommissionRate;
        partial void OnEvergreenCommissionRateChanging(Nullable<global::System.Double> value);
        partial void OnEvergreenCommissionRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidualOptionID
        {
            get
            {
                return _ResidualOptionID;
            }
            set
            {
                OnResidualOptionIDChanging(value);
                ReportPropertyChanging("ResidualOptionID");
                _ResidualOptionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidualOptionID");
                OnResidualOptionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidualOptionID;
        partial void OnResidualOptionIDChanging(Nullable<global::System.Int32> value);
        partial void OnResidualOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResidualCommissionEnd
        {
            get
            {
                return _ResidualCommissionEnd;
            }
            set
            {
                OnResidualCommissionEndChanging(value);
                ReportPropertyChanging("ResidualCommissionEnd");
                _ResidualCommissionEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidualCommissionEnd");
                OnResidualCommissionEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResidualCommissionEnd;
        partial void OnResidualCommissionEndChanging(Nullable<global::System.DateTime> value);
        partial void OnResidualCommissionEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InitialPymtOptionID
        {
            get
            {
                return _InitialPymtOptionID;
            }
            set
            {
                OnInitialPymtOptionIDChanging(value);
                ReportPropertyChanging("InitialPymtOptionID");
                _InitialPymtOptionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InitialPymtOptionID");
                OnInitialPymtOptionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InitialPymtOptionID;
        partial void OnInitialPymtOptionIDChanging(Nullable<global::System.Int32> value);
        partial void OnInitialPymtOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractCommission_AccountContract", "AccountContract")]
        public AccountContract AccountContract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractCommission_AccountContract", "AccountContract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractCommission_AccountContract", "AccountContract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountContract> AccountContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractCommission_AccountContract", "AccountContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractCommission_AccountContract", "AccountContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractCommission_UserCreatedBy", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractCommission_UserModifiedBy", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountContractCommission_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountContractRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountContractRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountContractRate object.
        /// </summary>
        /// <param name="accountContractRateID">Initial value of the AccountContractRateID property.</param>
        /// <param name="accountContractID">Initial value of the AccountContractID property.</param>
        /// <param name="rateCode">Initial value of the RateCode property.</param>
        /// <param name="rateStart">Initial value of the RateStart property.</param>
        /// <param name="rateEnd">Initial value of the RateEnd property.</param>
        /// <param name="isContractedRate">Initial value of the IsContractedRate property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static AccountContractRate CreateAccountContractRate(global::System.Int32 accountContractRateID, global::System.Int32 accountContractID, global::System.String rateCode, global::System.DateTime rateStart, global::System.DateTime rateEnd, global::System.Boolean isContractedRate, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            AccountContractRate accountContractRate = new AccountContractRate();
            accountContractRate.AccountContractRateID = accountContractRateID;
            accountContractRate.AccountContractID = accountContractID;
            accountContractRate.RateCode = rateCode;
            accountContractRate.RateStart = rateStart;
            accountContractRate.RateEnd = rateEnd;
            accountContractRate.IsContractedRate = isContractedRate;
            accountContractRate.Modified = modified;
            accountContractRate.ModifiedBy = modifiedBy;
            accountContractRate.DateCreated = dateCreated;
            accountContractRate.CreatedBy = createdBy;
            return accountContractRate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountContractRateID
        {
            get
            {
                return _AccountContractRateID;
            }
            set
            {
                if (_AccountContractRateID != value)
                {
                    OnAccountContractRateIDChanging(value);
                    ReportPropertyChanging("AccountContractRateID");
                    _AccountContractRateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountContractRateID");
                    OnAccountContractRateIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountContractRateID;
        partial void OnAccountContractRateIDChanging(global::System.Int32 value);
        partial void OnAccountContractRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountContractID
        {
            get
            {
                return _AccountContractID;
            }
            set
            {
                OnAccountContractIDChanging(value);
                ReportPropertyChanging("AccountContractID");
                _AccountContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountContractID");
                OnAccountContractIDChanged();
            }
        }
        private global::System.Int32 _AccountContractID;
        partial void OnAccountContractIDChanging(global::System.Int32 value);
        partial void OnAccountContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegacyProductID
        {
            get
            {
                return _LegacyProductID;
            }
            set
            {
                OnLegacyProductIDChanging(value);
                ReportPropertyChanging("LegacyProductID");
                _LegacyProductID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LegacyProductID");
                OnLegacyProductIDChanged();
            }
        }
        private global::System.String _LegacyProductID;
        partial void OnLegacyProductIDChanging(global::System.String value);
        partial void OnLegacyProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Term
        {
            get
            {
                return _Term;
            }
            set
            {
                OnTermChanging(value);
                ReportPropertyChanging("Term");
                _Term = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Term");
                OnTermChanged();
            }
        }
        private Nullable<global::System.Int32> _Term;
        partial void OnTermChanging(Nullable<global::System.Int32> value);
        partial void OnTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RateID
        {
            get
            {
                return _RateID;
            }
            set
            {
                OnRateIDChanging(value);
                ReportPropertyChanging("RateID");
                _RateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateID");
                OnRateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RateID;
        partial void OnRateIDChanging(Nullable<global::System.Int32> value);
        partial void OnRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Double> _Rate;
        partial void OnRateChanging(Nullable<global::System.Double> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RateCode
        {
            get
            {
                return _RateCode;
            }
            set
            {
                OnRateCodeChanging(value);
                ReportPropertyChanging("RateCode");
                _RateCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RateCode");
                OnRateCodeChanged();
            }
        }
        private global::System.String _RateCode;
        partial void OnRateCodeChanging(global::System.String value);
        partial void OnRateCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RateStart
        {
            get
            {
                return _RateStart;
            }
            set
            {
                OnRateStartChanging(value);
                ReportPropertyChanging("RateStart");
                _RateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateStart");
                OnRateStartChanged();
            }
        }
        private global::System.DateTime _RateStart;
        partial void OnRateStartChanging(global::System.DateTime value);
        partial void OnRateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RateEnd
        {
            get
            {
                return _RateEnd;
            }
            set
            {
                OnRateEndChanging(value);
                ReportPropertyChanging("RateEnd");
                _RateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateEnd");
                OnRateEndChanged();
            }
        }
        private global::System.DateTime _RateEnd;
        partial void OnRateEndChanging(global::System.DateTime value);
        partial void OnRateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsContractedRate
        {
            get
            {
                return _IsContractedRate;
            }
            set
            {
                OnIsContractedRateChanging(value);
                ReportPropertyChanging("IsContractedRate");
                _IsContractedRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsContractedRate");
                OnIsContractedRateChanged();
            }
        }
        private global::System.Boolean _IsContractedRate;
        partial void OnIsContractedRateChanging(global::System.Boolean value);
        partial void OnIsContractedRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HeatIndexSourceID
        {
            get
            {
                return _HeatIndexSourceID;
            }
            set
            {
                OnHeatIndexSourceIDChanging(value);
                ReportPropertyChanging("HeatIndexSourceID");
                _HeatIndexSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeatIndexSourceID");
                OnHeatIndexSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HeatIndexSourceID;
        partial void OnHeatIndexSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnHeatIndexSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HeatRate
        {
            get
            {
                return _HeatRate;
            }
            set
            {
                OnHeatRateChanging(value);
                ReportPropertyChanging("HeatRate");
                _HeatRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeatRate");
                OnHeatRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _HeatRate;
        partial void OnHeatRateChanging(Nullable<global::System.Decimal> value);
        partial void OnHeatRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TransferRate
        {
            get
            {
                return _TransferRate;
            }
            set
            {
                OnTransferRateChanging(value);
                ReportPropertyChanging("TransferRate");
                _TransferRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferRate");
                OnTransferRateChanged();
            }
        }
        private Nullable<global::System.Double> _TransferRate;
        partial void OnTransferRateChanging(Nullable<global::System.Double> value);
        partial void OnTransferRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> GrossMargin
        {
            get
            {
                return _GrossMargin;
            }
            set
            {
                OnGrossMarginChanging(value);
                ReportPropertyChanging("GrossMargin");
                _GrossMargin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossMargin");
                OnGrossMarginChanged();
            }
        }
        private Nullable<global::System.Double> _GrossMargin;
        partial void OnGrossMarginChanging(Nullable<global::System.Double> value);
        partial void OnGrossMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CommissionRate
        {
            get
            {
                return _CommissionRate;
            }
            set
            {
                OnCommissionRateChanging(value);
                ReportPropertyChanging("CommissionRate");
                _CommissionRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionRate");
                OnCommissionRateChanged();
            }
        }
        private Nullable<global::System.Double> _CommissionRate;
        partial void OnCommissionRateChanging(Nullable<global::System.Double> value);
        partial void OnCommissionRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AdditionalGrossMargin
        {
            get
            {
                return _AdditionalGrossMargin;
            }
            set
            {
                OnAdditionalGrossMarginChanging(value);
                ReportPropertyChanging("AdditionalGrossMargin");
                _AdditionalGrossMargin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionalGrossMargin");
                OnAdditionalGrossMarginChanged();
            }
        }
        private Nullable<global::System.Double> _AdditionalGrossMargin;
        partial void OnAdditionalGrossMarginChanging(Nullable<global::System.Double> value);
        partial void OnAdditionalGrossMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PriceID
        {
            get
            {
                return _PriceID;
            }
            set
            {
                OnPriceIDChanging(value);
                ReportPropertyChanging("PriceID");
                _PriceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceID");
                OnPriceIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PriceID;
        partial void OnPriceIDChanging(Nullable<global::System.Int64> value);
        partial void OnPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProductCrossPriceMultiID
        {
            get
            {
                return _ProductCrossPriceMultiID;
            }
            set
            {
                OnProductCrossPriceMultiIDChanging(value);
                ReportPropertyChanging("ProductCrossPriceMultiID");
                _ProductCrossPriceMultiID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCrossPriceMultiID");
                OnProductCrossPriceMultiIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ProductCrossPriceMultiID;
        partial void OnProductCrossPriceMultiIDChanging(Nullable<global::System.Int64> value);
        partial void OnProductCrossPriceMultiIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountContractRateStatus
        {
            get
            {
                return _AccountContractRateStatus;
            }
            set
            {
                OnAccountContractRateStatusChanging(value);
                ReportPropertyChanging("AccountContractRateStatus");
                _AccountContractRateStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountContractRateStatus");
                OnAccountContractRateStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountContractRateStatus;
        partial void OnAccountContractRateStatusChanging(Nullable<global::System.Int32> value);
        partial void OnAccountContractRateStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCustomEnd
        {
            get
            {
                return _IsCustomEnd;
            }
            set
            {
                OnIsCustomEndChanging(value);
                ReportPropertyChanging("IsCustomEnd");
                _IsCustomEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCustomEnd");
                OnIsCustomEndChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCustomEnd;
        partial void OnIsCustomEndChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCustomEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractRate_AccountContract", "AccountContract")]
        public AccountContract AccountContract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractRate_AccountContract", "AccountContract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractRate_AccountContract", "AccountContract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountContract> AccountContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractRate_AccountContract", "AccountContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountContractRate_AccountContract", "AccountContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractRate_UserCreatedBy", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractRate_UserModifiedBy", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountContractRate_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountDetail object.
        /// </summary>
        /// <param name="accountDetailID">Initial value of the AccountDetailID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static AccountDetail CreateAccountDetail(global::System.Int32 accountDetailID, global::System.Int32 accountID, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            AccountDetail accountDetail = new AccountDetail();
            accountDetail.AccountDetailID = accountDetailID;
            accountDetail.AccountID = accountID;
            accountDetail.Modified = modified;
            accountDetail.ModifiedBy = modifiedBy;
            accountDetail.DateCreated = dateCreated;
            accountDetail.CreatedBy = createdBy;
            return accountDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountDetailID
        {
            get
            {
                return _AccountDetailID;
            }
            set
            {
                if (_AccountDetailID != value)
                {
                    OnAccountDetailIDChanging(value);
                    ReportPropertyChanging("AccountDetailID");
                    _AccountDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountDetailID");
                    OnAccountDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountDetailID;
        partial void OnAccountDetailIDChanging(global::System.Int32 value);
        partial void OnAccountDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EnrollmentTypeID
        {
            get
            {
                return _EnrollmentTypeID;
            }
            set
            {
                OnEnrollmentTypeIDChanging(value);
                ReportPropertyChanging("EnrollmentTypeID");
                _EnrollmentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrollmentTypeID");
                OnEnrollmentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EnrollmentTypeID;
        partial void OnEnrollmentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEnrollmentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OriginalTaxDesignation
        {
            get
            {
                return _OriginalTaxDesignation;
            }
            set
            {
                OnOriginalTaxDesignationChanging(value);
                ReportPropertyChanging("OriginalTaxDesignation");
                _OriginalTaxDesignation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalTaxDesignation");
                OnOriginalTaxDesignationChanged();
            }
        }
        private Nullable<global::System.Int32> _OriginalTaxDesignation;
        partial void OnOriginalTaxDesignationChanging(Nullable<global::System.Int32> value);
        partial void OnOriginalTaxDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountDetail_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountDetail_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountDetail_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountDetail_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("LibertyPowerModel.FK_AccountDetail_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountDetail_UserCreatedBy", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountDetail_UserModifiedBy", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountDetail_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountService object.
        /// </summary>
        /// <param name="accountServiceID">Initial value of the AccountServiceID property.</param>
        /// <param name="account_id">Initial value of the account_id property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static AccountService CreateAccountService(global::System.Int32 accountServiceID, global::System.String account_id, global::System.DateTime dateCreated)
        {
            AccountService accountService = new AccountService();
            accountService.AccountServiceID = accountServiceID;
            accountService.account_id = account_id;
            accountService.DateCreated = dateCreated;
            return accountService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountServiceID
        {
            get
            {
                return _AccountServiceID;
            }
            set
            {
                if (_AccountServiceID != value)
                {
                    OnAccountServiceIDChanging(value);
                    ReportPropertyChanging("AccountServiceID");
                    _AccountServiceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountServiceID");
                    OnAccountServiceIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountServiceID;
        partial void OnAccountServiceIDChanging(global::System.Int32 value);
        partial void OnAccountServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String account_id
        {
            get
            {
                return _account_id;
            }
            set
            {
                Onaccount_idChanging(value);
                ReportPropertyChanging("account_id");
                _account_id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("account_id");
                Onaccount_idChanged();
            }
        }
        private global::System.String _account_id;
        partial void Onaccount_idChanging(global::System.String value);
        partial void Onaccount_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Modifiedby
        {
            get
            {
                return _Modifiedby;
            }
            set
            {
                OnModifiedbyChanging(value);
                ReportPropertyChanging("Modifiedby");
                _Modifiedby = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modifiedby");
                OnModifiedbyChanged();
            }
        }
        private Nullable<global::System.Int32> _Modifiedby;
        partial void OnModifiedbyChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedbyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountStatus object.
        /// </summary>
        /// <param name="accountStatusID">Initial value of the AccountStatusID property.</param>
        /// <param name="accountContractID">Initial value of the AccountContractID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="subStatus">Initial value of the SubStatus property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static AccountStatus CreateAccountStatus(global::System.Int32 accountStatusID, global::System.Int32 accountContractID, global::System.String status, global::System.String subStatus, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            AccountStatus accountStatus = new AccountStatus();
            accountStatus.AccountStatusID = accountStatusID;
            accountStatus.AccountContractID = accountContractID;
            accountStatus.Status = status;
            accountStatus.SubStatus = subStatus;
            accountStatus.Modified = modified;
            accountStatus.ModifiedBy = modifiedBy;
            accountStatus.DateCreated = dateCreated;
            accountStatus.CreatedBy = createdBy;
            return accountStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountStatusID
        {
            get
            {
                return _AccountStatusID;
            }
            set
            {
                if (_AccountStatusID != value)
                {
                    OnAccountStatusIDChanging(value);
                    ReportPropertyChanging("AccountStatusID");
                    _AccountStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountStatusID");
                    OnAccountStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountStatusID;
        partial void OnAccountStatusIDChanging(global::System.Int32 value);
        partial void OnAccountStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountContractID
        {
            get
            {
                return _AccountContractID;
            }
            set
            {
                OnAccountContractIDChanging(value);
                ReportPropertyChanging("AccountContractID");
                _AccountContractID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountContractID");
                OnAccountContractIDChanged();
            }
        }
        private global::System.Int32 _AccountContractID;
        partial void OnAccountContractIDChanging(global::System.Int32 value);
        partial void OnAccountContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubStatus
        {
            get
            {
                return _SubStatus;
            }
            set
            {
                OnSubStatusChanging(value);
                ReportPropertyChanging("SubStatus");
                _SubStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubStatus");
                OnSubStatusChanged();
            }
        }
        private global::System.String _SubStatus;
        partial void OnSubStatusChanging(global::System.String value);
        partial void OnSubStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountStatus_AccountContract", "AccountContract")]
        public AccountContract AccountContract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountStatus_AccountContract", "AccountContract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountStatus_AccountContract", "AccountContract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountContract> AccountContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountStatus_AccountContract", "AccountContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountContract>("LibertyPowerModel.FK_AccountStatus_AccountContract", "AccountContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountStatus_UserCreatedBy", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountStatus_UserModifiedBy", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountStatus_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="accountType1">Initial value of the AccountType1 property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static AccountType CreateAccountType(global::System.Int32 id, global::System.String accountType1, global::System.String description, global::System.DateTime dateCreated)
        {
            AccountType accountType = new AccountType();
            accountType.ID = id;
            accountType.AccountType1 = accountType1;
            accountType.Description = description;
            accountType.DateCreated = dateCreated;
            return accountType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountType1
        {
            get
            {
                return _AccountType1;
            }
            set
            {
                OnAccountType1Changing(value);
                ReportPropertyChanging("AccountType1");
                _AccountType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountType1");
                OnAccountType1Changed();
            }
        }
        private global::System.String _AccountType1;
        partial void OnAccountType1Changing(global::System.String value);
        partial void OnAccountType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountGroup
        {
            get
            {
                return _AccountGroup;
            }
            set
            {
                OnAccountGroupChanging(value);
                ReportPropertyChanging("AccountGroup");
                _AccountGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountGroup");
                OnAccountGroupChanged();
            }
        }
        private global::System.String _AccountGroup;
        partial void OnAccountGroupChanging(global::System.String value);
        partial void OnAccountGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductAccountTypeID
        {
            get
            {
                return _ProductAccountTypeID;
            }
            set
            {
                OnProductAccountTypeIDChanging(value);
                ReportPropertyChanging("ProductAccountTypeID");
                _ProductAccountTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductAccountTypeID");
                OnProductAccountTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductAccountTypeID;
        partial void OnProductAccountTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductAccountTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_AccountType", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_AccountType", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_AccountType", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_AccountType", "ChannelMarketSegment")]
        public EntityCollection<ChannelMarketSegment> ChannelMarketSegments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelMarketSegment>("LibertyPowerModel.FK_ChannelMarketSegments_AccountType", "ChannelMarketSegment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelMarketSegment>("LibertyPowerModel.FK_ChannelMarketSegments_AccountType", "ChannelMarketSegment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="AccountUsage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountUsage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountUsage object.
        /// </summary>
        /// <param name="accountUsageID">Initial value of the AccountUsageID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="usageReqStatusID">Initial value of the UsageReqStatusID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static AccountUsage CreateAccountUsage(global::System.Int32 accountUsageID, global::System.Int32 accountID, global::System.Int32 usageReqStatusID, global::System.DateTime effectiveDate, global::System.DateTime modified, global::System.DateTime dateCreated)
        {
            AccountUsage accountUsage = new AccountUsage();
            accountUsage.AccountUsageID = accountUsageID;
            accountUsage.AccountID = accountID;
            accountUsage.UsageReqStatusID = usageReqStatusID;
            accountUsage.EffectiveDate = effectiveDate;
            accountUsage.Modified = modified;
            accountUsage.DateCreated = dateCreated;
            return accountUsage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountUsageID
        {
            get
            {
                return _AccountUsageID;
            }
            set
            {
                if (_AccountUsageID != value)
                {
                    OnAccountUsageIDChanging(value);
                    ReportPropertyChanging("AccountUsageID");
                    _AccountUsageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountUsageID");
                    OnAccountUsageIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountUsageID;
        partial void OnAccountUsageIDChanging(global::System.Int32 value);
        partial void OnAccountUsageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnnualUsage
        {
            get
            {
                return _AnnualUsage;
            }
            set
            {
                OnAnnualUsageChanging(value);
                ReportPropertyChanging("AnnualUsage");
                _AnnualUsage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnnualUsage");
                OnAnnualUsageChanged();
            }
        }
        private Nullable<global::System.Int32> _AnnualUsage;
        partial void OnAnnualUsageChanging(Nullable<global::System.Int32> value);
        partial void OnAnnualUsageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsageReqStatusID
        {
            get
            {
                return _UsageReqStatusID;
            }
            set
            {
                OnUsageReqStatusIDChanging(value);
                ReportPropertyChanging("UsageReqStatusID");
                _UsageReqStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsageReqStatusID");
                OnUsageReqStatusIDChanged();
            }
        }
        private global::System.Int32 _UsageReqStatusID;
        partial void OnUsageReqStatusIDChanging(global::System.Int32 value);
        partial void OnUsageReqStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountUsage_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountUsage_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("LibertyPowerModel.FK_AccountUsage_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("LibertyPowerModel.FK_AccountUsage_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_UsageReqStatus", "UsageReqStatus")]
        public UsageReqStatus UsageReqStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsageReqStatus>("LibertyPowerModel.FK_AccountUsage_UsageReqStatus", "UsageReqStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsageReqStatus>("LibertyPowerModel.FK_AccountUsage_UsageReqStatus", "UsageReqStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UsageReqStatus> UsageReqStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UsageReqStatus>("LibertyPowerModel.FK_AccountUsage_UsageReqStatus", "UsageReqStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UsageReqStatus>("LibertyPowerModel.FK_AccountUsage_UsageReqStatus", "UsageReqStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_UserCreatedBy", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_UserModifiedBy", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_AccountUsage_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Address CreateAddress(global::System.Int32 addressID, global::System.String address1, global::System.String city, global::System.String state, global::System.String zip, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            Address address = new Address();
            address.AddressID = addressID;
            address.Address1 = address1;
            address.City = city;
            address.State = state;
            address.Zip = zip;
            address.Modified = modified;
            address.ModifiedBy = modifiedBy;
            address.DateCreated = dateCreated;
            address.CreatedBy = createdBy;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateFips
        {
            get
            {
                return _StateFips;
            }
            set
            {
                OnStateFipsChanging(value);
                ReportPropertyChanging("StateFips");
                _StateFips = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateFips");
                OnStateFipsChanged();
            }
        }
        private global::System.String _StateFips;
        partial void OnStateFipsChanging(global::System.String value);
        partial void OnStateFipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountyFips
        {
            get
            {
                return _CountyFips;
            }
            set
            {
                OnCountyFipsChanging(value);
                ReportPropertyChanging("CountyFips");
                _CountyFips = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountyFips");
                OnCountyFipsChanged();
            }
        }
        private global::System.String _CountyFips;
        partial void OnCountyFipsChanging(global::System.String value);
        partial void OnCountyFipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountBilling_Address", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_AccountBilling_Address", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_AccountBilling_Address", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountService_Address", "Account")]
        public EntityCollection<Account> Accounts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_AccountService_Address", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_AccountService_Address", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_Address", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_Address", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_Address", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Address_UserCreated", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Address_UserCreated", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Address_UserCreated", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Address_UserCreated", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Address_UserCreated", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Address_UserModified", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Address_UserModified", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Address_UserModified", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Address_UserModified", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Address_UserModified", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerAddress_Address", "CustomerAddress")]
        public EntityCollection<CustomerAddress> CustomerAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerAddress>("LibertyPowerModel.FK_CustomerAddress_Address", "CustomerAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerAddress>("LibertyPowerModel.FK_CustomerAddress_Address", "CustomerAddress", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="BillingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillingType object.
        /// </summary>
        /// <param name="billingTypeID">Initial value of the BillingTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static BillingType CreateBillingType(global::System.Int32 billingTypeID, global::System.String type, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            BillingType billingType = new BillingType();
            billingType.BillingTypeID = billingTypeID;
            billingType.Type = type;
            billingType.Sequence = sequence;
            billingType.Active = active;
            billingType.DateCreated = dateCreated;
            return billingType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillingTypeID
        {
            get
            {
                return _BillingTypeID;
            }
            set
            {
                if (_BillingTypeID != value)
                {
                    OnBillingTypeIDChanging(value);
                    ReportPropertyChanging("BillingTypeID");
                    _BillingTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillingTypeID");
                    OnBillingTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _BillingTypeID;
        partial void OnBillingTypeIDChanging(global::System.Int32 value);
        partial void OnBillingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_BillingType", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_BillingType", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_BillingType", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="BusinessActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessActivity object.
        /// </summary>
        /// <param name="businessActivityID">Initial value of the BusinessActivityID property.</param>
        /// <param name="activity">Initial value of the Activity property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static BusinessActivity CreateBusinessActivity(global::System.Int32 businessActivityID, global::System.String activity, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            BusinessActivity businessActivity = new BusinessActivity();
            businessActivity.BusinessActivityID = businessActivityID;
            businessActivity.Activity = activity;
            businessActivity.Sequence = sequence;
            businessActivity.Active = active;
            businessActivity.DateCreated = dateCreated;
            return businessActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessActivityID
        {
            get
            {
                return _BusinessActivityID;
            }
            set
            {
                if (_BusinessActivityID != value)
                {
                    OnBusinessActivityIDChanging(value);
                    ReportPropertyChanging("BusinessActivityID");
                    _BusinessActivityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessActivityID");
                    OnBusinessActivityIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessActivityID;
        partial void OnBusinessActivityIDChanging(global::System.Int32 value);
        partial void OnBusinessActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Activity
        {
            get
            {
                return _Activity;
            }
            set
            {
                OnActivityChanging(value);
                ReportPropertyChanging("Activity");
                _Activity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Activity");
                OnActivityChanged();
            }
        }
        private global::System.String _Activity;
        partial void OnActivityChanging(global::System.String value);
        partial void OnActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_BusinessActivity", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_BusinessActivity", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_BusinessActivity", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="BusinessType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessType object.
        /// </summary>
        /// <param name="businessTypeID">Initial value of the BusinessTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static BusinessType CreateBusinessType(global::System.Int32 businessTypeID, global::System.String type, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            BusinessType businessType = new BusinessType();
            businessType.BusinessTypeID = businessTypeID;
            businessType.Type = type;
            businessType.Sequence = sequence;
            businessType.Active = active;
            businessType.DateCreated = dateCreated;
            return businessType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessTypeID
        {
            get
            {
                return _BusinessTypeID;
            }
            set
            {
                if (_BusinessTypeID != value)
                {
                    OnBusinessTypeIDChanging(value);
                    ReportPropertyChanging("BusinessTypeID");
                    _BusinessTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessTypeID");
                    OnBusinessTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessTypeID;
        partial void OnBusinessTypeIDChanging(global::System.Int32 value);
        partial void OnBusinessTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_BusinessType", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_BusinessType", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_BusinessType", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ChannelGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelGroup object.
        /// </summary>
        /// <param name="channelGroupID">Initial value of the ChannelGroupID property.</param>
        /// <param name="commissionRate">Initial value of the CommissionRate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static ChannelGroup CreateChannelGroup(global::System.Int32 channelGroupID, global::System.Decimal commissionRate, global::System.Boolean active)
        {
            ChannelGroup channelGroup = new ChannelGroup();
            channelGroup.ChannelGroupID = channelGroupID;
            channelGroup.CommissionRate = commissionRate;
            channelGroup.Active = active;
            return channelGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelGroupID
        {
            get
            {
                return _ChannelGroupID;
            }
            set
            {
                if (_ChannelGroupID != value)
                {
                    OnChannelGroupIDChanging(value);
                    ReportPropertyChanging("ChannelGroupID");
                    _ChannelGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelGroupID");
                    OnChannelGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ChannelGroupID;
        partial void OnChannelGroupIDChanging(global::System.Int32 value);
        partial void OnChannelGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelTypeID
        {
            get
            {
                return _ChannelTypeID;
            }
            set
            {
                OnChannelTypeIDChanging(value);
                ReportPropertyChanging("ChannelTypeID");
                _ChannelTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelTypeID");
                OnChannelTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelTypeID;
        partial void OnChannelTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnChannelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CommissionRate
        {
            get
            {
                return _CommissionRate;
            }
            set
            {
                OnCommissionRateChanging(value);
                ReportPropertyChanging("CommissionRate");
                _CommissionRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionRate");
                OnCommissionRateChanged();
            }
        }
        private global::System.Decimal _CommissionRate;
        partial void OnCommissionRateChanging(global::System.Decimal value);
        partial void OnCommissionRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ChannelMarketSegment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelMarketSegment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelMarketSegment object.
        /// </summary>
        /// <param name="channelMarketSegmentID">Initial value of the ChannelMarketSegmentID property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        /// <param name="segmentID">Initial value of the SegmentID property.</param>
        public static ChannelMarketSegment CreateChannelMarketSegment(global::System.Int32 channelMarketSegmentID, global::System.Int32 channelID, global::System.Int32 marketID, global::System.Int32 segmentID)
        {
            ChannelMarketSegment channelMarketSegment = new ChannelMarketSegment();
            channelMarketSegment.ChannelMarketSegmentID = channelMarketSegmentID;
            channelMarketSegment.ChannelID = channelID;
            channelMarketSegment.MarketID = marketID;
            channelMarketSegment.SegmentID = segmentID;
            return channelMarketSegment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelMarketSegmentID
        {
            get
            {
                return _ChannelMarketSegmentID;
            }
            set
            {
                if (_ChannelMarketSegmentID != value)
                {
                    OnChannelMarketSegmentIDChanging(value);
                    ReportPropertyChanging("ChannelMarketSegmentID");
                    _ChannelMarketSegmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelMarketSegmentID");
                    OnChannelMarketSegmentIDChanged();
                }
            }
        }
        private global::System.Int32 _ChannelMarketSegmentID;
        partial void OnChannelMarketSegmentIDChanging(global::System.Int32 value);
        partial void OnChannelMarketSegmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private global::System.Int32 _MarketID;
        partial void OnMarketIDChanging(global::System.Int32 value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SegmentID
        {
            get
            {
                return _SegmentID;
            }
            set
            {
                OnSegmentIDChanging(value);
                ReportPropertyChanging("SegmentID");
                _SegmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SegmentID");
                OnSegmentIDChanged();
            }
        }
        private global::System.Int32 _SegmentID;
        partial void OnSegmentIDChanging(global::System.Int32 value);
        partial void OnSegmentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_AccountType", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("LibertyPowerModel.FK_ChannelMarketSegments_AccountType", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("LibertyPowerModel.FK_ChannelMarketSegments_AccountType", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("LibertyPowerModel.FK_ChannelMarketSegments_AccountType", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("LibertyPowerModel.FK_ChannelMarketSegments_AccountType", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_Market", "Market")]
        public Market Market
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketSegments_Market", "Market").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketSegments_Market", "Market").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Market> MarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketSegments_Market", "Market");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketSegments_Market", "Market", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_SalesChannel", "SalesChannel")]
        public SalesChannel SalesChannel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketSegments_SalesChannel", "SalesChannel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketSegments_SalesChannel", "SalesChannel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesChannel> SalesChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketSegments_SalesChannel", "SalesChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketSegments_SalesChannel", "SalesChannel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ChannelMarketTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelMarketTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelMarketTerm object.
        /// </summary>
        /// <param name="channelMarketTermID">Initial value of the ChannelMarketTermID property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        public static ChannelMarketTerm CreateChannelMarketTerm(global::System.Int32 channelMarketTermID, global::System.Int32 channelID, global::System.Int32 marketID)
        {
            ChannelMarketTerm channelMarketTerm = new ChannelMarketTerm();
            channelMarketTerm.ChannelMarketTermID = channelMarketTermID;
            channelMarketTerm.ChannelID = channelID;
            channelMarketTerm.MarketID = marketID;
            return channelMarketTerm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelMarketTermID
        {
            get
            {
                return _ChannelMarketTermID;
            }
            set
            {
                if (_ChannelMarketTermID != value)
                {
                    OnChannelMarketTermIDChanging(value);
                    ReportPropertyChanging("ChannelMarketTermID");
                    _ChannelMarketTermID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelMarketTermID");
                    OnChannelMarketTermIDChanged();
                }
            }
        }
        private global::System.Int32 _ChannelMarketTermID;
        partial void OnChannelMarketTermIDChanging(global::System.Int32 value);
        partial void OnChannelMarketTermIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private global::System.Int32 _MarketID;
        partial void OnMarketIDChanging(global::System.Int32 value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinimumAllowedTerm
        {
            get
            {
                return _MinimumAllowedTerm;
            }
            set
            {
                OnMinimumAllowedTermChanging(value);
                ReportPropertyChanging("MinimumAllowedTerm");
                _MinimumAllowedTerm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumAllowedTerm");
                OnMinimumAllowedTermChanged();
            }
        }
        private Nullable<global::System.Int32> _MinimumAllowedTerm;
        partial void OnMinimumAllowedTermChanging(Nullable<global::System.Int32> value);
        partial void OnMinimumAllowedTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketTerm_Market", "Market")]
        public Market Market
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketTerm_Market", "Market").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketTerm_Market", "Market").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Market> MarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketTerm_Market", "Market");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Market>("LibertyPowerModel.FK_ChannelMarketTerm_Market", "Market", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketTerm_SalesChannel", "SalesChannel")]
        public SalesChannel SalesChannel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketTerm_SalesChannel", "SalesChannel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketTerm_SalesChannel", "SalesChannel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesChannel> SalesChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketTerm_SalesChannel", "SalesChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesChannel>("LibertyPowerModel.FK_ChannelMarketTerm_SalesChannel", "SalesChannel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ChannelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ChannelType CreateChannelType(global::System.Int32 id)
        {
            ChannelType channelType = new ChannelType();
            channelType.ID = id;
            return channelType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ClientApplicationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientApplicationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientApplicationType object.
        /// </summary>
        /// <param name="clientApplicationTypeId">Initial value of the ClientApplicationTypeId property.</param>
        /// <param name="clientApplicationType1">Initial value of the ClientApplicationType1 property.</param>
        public static ClientApplicationType CreateClientApplicationType(global::System.Int32 clientApplicationTypeId, global::System.String clientApplicationType1)
        {
            ClientApplicationType clientApplicationType = new ClientApplicationType();
            clientApplicationType.ClientApplicationTypeId = clientApplicationTypeId;
            clientApplicationType.ClientApplicationType1 = clientApplicationType1;
            return clientApplicationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientApplicationTypeId
        {
            get
            {
                return _ClientApplicationTypeId;
            }
            set
            {
                if (_ClientApplicationTypeId != value)
                {
                    OnClientApplicationTypeIdChanging(value);
                    ReportPropertyChanging("ClientApplicationTypeId");
                    _ClientApplicationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientApplicationTypeId");
                    OnClientApplicationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientApplicationTypeId;
        partial void OnClientApplicationTypeIdChanging(global::System.Int32 value);
        partial void OnClientApplicationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientApplicationType1
        {
            get
            {
                return _ClientApplicationType1;
            }
            set
            {
                OnClientApplicationType1Changing(value);
                ReportPropertyChanging("ClientApplicationType1");
                _ClientApplicationType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientApplicationType1");
                OnClientApplicationType1Changed();
            }
        }
        private global::System.String _ClientApplicationType1;
        partial void OnClientApplicationType1Changing(global::System.String value);
        partial void OnClientApplicationType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientSubmitApplicationKey")]
        public EntityCollection<ClientSubmitApplicationKey> ClientSubmitApplicationKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientSubmitApplicationKey>("LibertyPowerModel.FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientSubmitApplicationKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientSubmitApplicationKey>("LibertyPowerModel.FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientSubmitApplicationKey", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ClientSubmitApplicationKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientSubmitApplicationKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientSubmitApplicationKey object.
        /// </summary>
        /// <param name="clientSubApplicationKeyId">Initial value of the ClientSubApplicationKeyId property.</param>
        /// <param name="applicationKey">Initial value of the ApplicationKey property.</param>
        /// <param name="clientApplicationTypeId">Initial value of the ClientApplicationTypeId property.</param>
        public static ClientSubmitApplicationKey CreateClientSubmitApplicationKey(global::System.Int32 clientSubApplicationKeyId, global::System.Guid applicationKey, global::System.Int32 clientApplicationTypeId)
        {
            ClientSubmitApplicationKey clientSubmitApplicationKey = new ClientSubmitApplicationKey();
            clientSubmitApplicationKey.ClientSubApplicationKeyId = clientSubApplicationKeyId;
            clientSubmitApplicationKey.ApplicationKey = applicationKey;
            clientSubmitApplicationKey.ClientApplicationTypeId = clientApplicationTypeId;
            return clientSubmitApplicationKey;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientSubApplicationKeyId
        {
            get
            {
                return _ClientSubApplicationKeyId;
            }
            set
            {
                if (_ClientSubApplicationKeyId != value)
                {
                    OnClientSubApplicationKeyIdChanging(value);
                    ReportPropertyChanging("ClientSubApplicationKeyId");
                    _ClientSubApplicationKeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientSubApplicationKeyId");
                    OnClientSubApplicationKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientSubApplicationKeyId;
        partial void OnClientSubApplicationKeyIdChanging(global::System.Int32 value);
        partial void OnClientSubApplicationKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationKey
        {
            get
            {
                return _ApplicationKey;
            }
            set
            {
                OnApplicationKeyChanging(value);
                ReportPropertyChanging("ApplicationKey");
                _ApplicationKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationKey");
                OnApplicationKeyChanged();
            }
        }
        private global::System.Guid _ApplicationKey;
        partial void OnApplicationKeyChanging(global::System.Guid value);
        partial void OnApplicationKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientApplicationTypeId
        {
            get
            {
                return _ClientApplicationTypeId;
            }
            set
            {
                OnClientApplicationTypeIdChanging(value);
                ReportPropertyChanging("ClientApplicationTypeId");
                _ClientApplicationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientApplicationTypeId");
                OnClientApplicationTypeIdChanged();
            }
        }
        private global::System.Int32 _ClientApplicationTypeId;
        partial void OnClientApplicationTypeIdChanging(global::System.Int32 value);
        partial void OnClientApplicationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientApplicationType")]
        public ClientApplicationType ClientApplicationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientApplicationType>("LibertyPowerModel.FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientApplicationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientApplicationType>("LibertyPowerModel.FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientApplicationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientApplicationType> ClientApplicationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientApplicationType>("LibertyPowerModel.FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientApplicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientApplicationType>("LibertyPowerModel.FK_ClientSubmitApplicationKey_ClientApplicationType", "ClientApplicationType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Contact CreateContact(global::System.Int32 contactID, global::System.String firstName, global::System.String lastName, global::System.String title, global::System.String phone, global::System.String email, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            Contact contact = new Contact();
            contact.ContactID = contactID;
            contact.FirstName = firstName;
            contact.LastName = lastName;
            contact.Title = title;
            contact.Phone = phone;
            contact.Email = email;
            contact.Modified = modified;
            contact.ModifiedBy = modifiedBy;
            contact.DateCreated = dateCreated;
            contact.CreatedBy = createdBy;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthdate;
        partial void OnBirthdateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Contact", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_Contact", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_Contact", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_Contact", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_Contact", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_Contact", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contact_UserCreated", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contact_UserCreated", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contact_UserCreated", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contact_UserCreated", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Contact_UserCreated", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contact_UserModified", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contact_UserModified", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contact_UserModified", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contact_UserModified", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Contact_UserModified", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerContact_Contact", "CustomerContact")]
        public EntityCollection<CustomerContact> CustomerContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerContact>("LibertyPowerModel.FK_CustomerContact_Contact", "CustomerContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerContact>("LibertyPowerModel.FK_CustomerContact_Contact", "CustomerContact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="contractID">Initial value of the ContractID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="contractTypeID">Initial value of the ContractTypeID property.</param>
        /// <param name="contractDealTypeID">Initial value of the ContractDealTypeID property.</param>
        /// <param name="contractStatusID">Initial value of the ContractStatusID property.</param>
        /// <param name="contractTemplateID">Initial value of the ContractTemplateID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="signedDate">Initial value of the SignedDate property.</param>
        /// <param name="submitDate">Initial value of the SubmitDate property.</param>
        /// <param name="salesChannelID">Initial value of the SalesChannelID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="migrationComplete">Initial value of the MigrationComplete property.</param>
        /// <param name="isRenewalMigration">Initial value of the IsRenewalMigration property.</param>
        /// <param name="isFutureContract">Initial value of the IsFutureContract property.</param>
        public static Contract CreateContract(global::System.Int32 contractID, global::System.String number, global::System.Int32 contractTypeID, global::System.Int32 contractDealTypeID, global::System.Int32 contractStatusID, global::System.Int32 contractTemplateID, global::System.DateTime startDate, global::System.DateTime endDate, global::System.DateTime signedDate, global::System.DateTime submitDate, global::System.Int32 salesChannelID, global::System.DateTime dateCreated, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.Int32 createdBy, global::System.Boolean migrationComplete, global::System.Boolean isRenewalMigration, global::System.Int32 isFutureContract)
        {
            Contract contract = new Contract();
            contract.ContractID = contractID;
            contract.Number = number;
            contract.ContractTypeID = contractTypeID;
            contract.ContractDealTypeID = contractDealTypeID;
            contract.ContractStatusID = contractStatusID;
            contract.ContractTemplateID = contractTemplateID;
            contract.StartDate = startDate;
            contract.EndDate = endDate;
            contract.SignedDate = signedDate;
            contract.SubmitDate = submitDate;
            contract.SalesChannelID = salesChannelID;
            contract.DateCreated = dateCreated;
            contract.Modified = modified;
            contract.ModifiedBy = modifiedBy;
            contract.CreatedBy = createdBy;
            contract.MigrationComplete = migrationComplete;
            contract.IsRenewalMigration = isRenewalMigration;
            contract.IsFutureContract = isFutureContract;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractID
        {
            get
            {
                return _ContractID;
            }
            set
            {
                if (_ContractID != value)
                {
                    OnContractIDChanging(value);
                    ReportPropertyChanging("ContractID");
                    _ContractID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractID");
                    OnContractIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractID;
        partial void OnContractIDChanging(global::System.Int32 value);
        partial void OnContractIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractTypeID
        {
            get
            {
                return _ContractTypeID;
            }
            set
            {
                OnContractTypeIDChanging(value);
                ReportPropertyChanging("ContractTypeID");
                _ContractTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractTypeID");
                OnContractTypeIDChanged();
            }
        }
        private global::System.Int32 _ContractTypeID;
        partial void OnContractTypeIDChanging(global::System.Int32 value);
        partial void OnContractTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractDealTypeID
        {
            get
            {
                return _ContractDealTypeID;
            }
            set
            {
                OnContractDealTypeIDChanging(value);
                ReportPropertyChanging("ContractDealTypeID");
                _ContractDealTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractDealTypeID");
                OnContractDealTypeIDChanged();
            }
        }
        private global::System.Int32 _ContractDealTypeID;
        partial void OnContractDealTypeIDChanging(global::System.Int32 value);
        partial void OnContractDealTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractStatusID
        {
            get
            {
                return _ContractStatusID;
            }
            set
            {
                OnContractStatusIDChanging(value);
                ReportPropertyChanging("ContractStatusID");
                _ContractStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractStatusID");
                OnContractStatusIDChanged();
            }
        }
        private global::System.Int32 _ContractStatusID;
        partial void OnContractStatusIDChanging(global::System.Int32 value);
        partial void OnContractStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractTemplateID
        {
            get
            {
                return _ContractTemplateID;
            }
            set
            {
                OnContractTemplateIDChanging(value);
                ReportPropertyChanging("ContractTemplateID");
                _ContractTemplateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractTemplateID");
                OnContractTemplateIDChanged();
            }
        }
        private global::System.Int32 _ContractTemplateID;
        partial void OnContractTemplateIDChanging(global::System.Int32 value);
        partial void OnContractTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceiptDate
        {
            get
            {
                return _ReceiptDate;
            }
            set
            {
                OnReceiptDateChanging(value);
                ReportPropertyChanging("ReceiptDate");
                _ReceiptDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptDate");
                OnReceiptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceiptDate;
        partial void OnReceiptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceiptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SignedDate
        {
            get
            {
                return _SignedDate;
            }
            set
            {
                OnSignedDateChanging(value);
                ReportPropertyChanging("SignedDate");
                _SignedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SignedDate");
                OnSignedDateChanged();
            }
        }
        private global::System.DateTime _SignedDate;
        partial void OnSignedDateChanging(global::System.DateTime value);
        partial void OnSignedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SubmitDate
        {
            get
            {
                return _SubmitDate;
            }
            set
            {
                OnSubmitDateChanging(value);
                ReportPropertyChanging("SubmitDate");
                _SubmitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubmitDate");
                OnSubmitDateChanged();
            }
        }
        private global::System.DateTime _SubmitDate;
        partial void OnSubmitDateChanging(global::System.DateTime value);
        partial void OnSubmitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesChannelID
        {
            get
            {
                return _SalesChannelID;
            }
            set
            {
                OnSalesChannelIDChanging(value);
                ReportPropertyChanging("SalesChannelID");
                _SalesChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesChannelID");
                OnSalesChannelIDChanged();
            }
        }
        private global::System.Int32 _SalesChannelID;
        partial void OnSalesChannelIDChanging(global::System.Int32 value);
        partial void OnSalesChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesRep
        {
            get
            {
                return _SalesRep;
            }
            set
            {
                OnSalesRepChanging(value);
                ReportPropertyChanging("SalesRep");
                _SalesRep = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesRep");
                OnSalesRepChanged();
            }
        }
        private global::System.String _SalesRep;
        partial void OnSalesRepChanging(global::System.String value);
        partial void OnSalesRepChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SalesManagerID
        {
            get
            {
                return _SalesManagerID;
            }
            set
            {
                OnSalesManagerIDChanging(value);
                ReportPropertyChanging("SalesManagerID");
                _SalesManagerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesManagerID");
                OnSalesManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SalesManagerID;
        partial void OnSalesManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnSalesManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PricingTypeID
        {
            get
            {
                return _PricingTypeID;
            }
            set
            {
                OnPricingTypeIDChanging(value);
                ReportPropertyChanging("PricingTypeID");
                _PricingTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PricingTypeID");
                OnPricingTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PricingTypeID;
        partial void OnPricingTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPricingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MigrationComplete
        {
            get
            {
                return _MigrationComplete;
            }
            set
            {
                OnMigrationCompleteChanging(value);
                ReportPropertyChanging("MigrationComplete");
                _MigrationComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MigrationComplete");
                OnMigrationCompleteChanged();
            }
        }
        private global::System.Boolean _MigrationComplete;
        partial void OnMigrationCompleteChanging(global::System.Boolean value);
        partial void OnMigrationCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRenewalMigration
        {
            get
            {
                return _IsRenewalMigration;
            }
            set
            {
                OnIsRenewalMigrationChanging(value);
                ReportPropertyChanging("IsRenewalMigration");
                _IsRenewalMigration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRenewalMigration");
                OnIsRenewalMigrationChanged();
            }
        }
        private global::System.Boolean _IsRenewalMigration;
        partial void OnIsRenewalMigrationChanging(global::System.Boolean value);
        partial void OnIsRenewalMigrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalNumber
        {
            get
            {
                return _ExternalNumber;
            }
            set
            {
                OnExternalNumberChanging(value);
                ReportPropertyChanging("ExternalNumber");
                _ExternalNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalNumber");
                OnExternalNumberChanged();
            }
        }
        private global::System.String _ExternalNumber;
        partial void OnExternalNumberChanging(global::System.String value);
        partial void OnExternalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EstimatedAnnualUsage
        {
            get
            {
                return _EstimatedAnnualUsage;
            }
            set
            {
                OnEstimatedAnnualUsageChanging(value);
                ReportPropertyChanging("EstimatedAnnualUsage");
                _EstimatedAnnualUsage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedAnnualUsage");
                OnEstimatedAnnualUsageChanged();
            }
        }
        private Nullable<global::System.Int32> _EstimatedAnnualUsage;
        partial void OnEstimatedAnnualUsageChanging(Nullable<global::System.Int32> value);
        partial void OnEstimatedAnnualUsageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsFutureContract
        {
            get
            {
                return _IsFutureContract;
            }
            set
            {
                OnIsFutureContractChanging(value);
                ReportPropertyChanging("IsFutureContract");
                _IsFutureContract = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFutureContract");
                OnIsFutureContractChanged();
            }
        }
        private global::System.Int32 _IsFutureContract;
        partial void OnIsFutureContractChanging(global::System.Int32 value);
        partial void OnIsFutureContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DigitalSignature
        {
            get
            {
                return _DigitalSignature;
            }
            set
            {
                OnDigitalSignatureChanging(value);
                ReportPropertyChanging("DigitalSignature");
                _DigitalSignature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DigitalSignature");
                OnDigitalSignatureChanged();
            }
        }
        private global::System.String _DigitalSignature;
        partial void OnDigitalSignatureChanging(global::System.String value);
        partial void OnDigitalSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AffinityCode
        {
            get
            {
                return _AffinityCode;
            }
            set
            {
                OnAffinityCodeChanging(value);
                ReportPropertyChanging("AffinityCode");
                _AffinityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AffinityCode");
                OnAffinityCodeChanged();
            }
        }
        private global::System.String _AffinityCode;
        partial void OnAffinityCodeChanging(global::System.String value);
        partial void OnAffinityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientSubmitApplicationKeyId
        {
            get
            {
                return _ClientSubmitApplicationKeyId;
            }
            set
            {
                OnClientSubmitApplicationKeyIdChanging(value);
                ReportPropertyChanging("ClientSubmitApplicationKeyId");
                _ClientSubmitApplicationKeyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientSubmitApplicationKeyId");
                OnClientSubmitApplicationKeyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientSubmitApplicationKeyId;
        partial void OnClientSubmitApplicationKeyIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientSubmitApplicationKeyIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_Contract", "AccountContract")]
        public EntityCollection<AccountContract> AccountContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_Contract", "AccountContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_Contract", "AccountContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractDealType", "ContractDealType")]
        public ContractDealType ContractDealType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractDealType>("LibertyPowerModel.FK_Contract_ContractDealType", "ContractDealType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractDealType>("LibertyPowerModel.FK_Contract_ContractDealType", "ContractDealType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractDealType> ContractDealTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractDealType>("LibertyPowerModel.FK_Contract_ContractDealType", "ContractDealType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractDealType>("LibertyPowerModel.FK_Contract_ContractDealType", "ContractDealType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractStatus", "ContractStatus")]
        public ContractStatus ContractStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractStatus>("LibertyPowerModel.FK_Contract_ContractStatus", "ContractStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractStatus>("LibertyPowerModel.FK_Contract_ContractStatus", "ContractStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractStatus> ContractStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractStatus>("LibertyPowerModel.FK_Contract_ContractStatus", "ContractStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractStatus>("LibertyPowerModel.FK_Contract_ContractStatus", "ContractStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractTemplateType", "ContractTemplateType")]
        public ContractTemplateType ContractTemplateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractTemplateType>("LibertyPowerModel.FK_Contract_ContractTemplateType", "ContractTemplateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractTemplateType>("LibertyPowerModel.FK_Contract_ContractTemplateType", "ContractTemplateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractTemplateType> ContractTemplateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractTemplateType>("LibertyPowerModel.FK_Contract_ContractTemplateType", "ContractTemplateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractTemplateType>("LibertyPowerModel.FK_Contract_ContractTemplateType", "ContractTemplateType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractType", "ContractType")]
        public ContractType ContractType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractType>("LibertyPowerModel.FK_Contract_ContractType", "ContractType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractType>("LibertyPowerModel.FK_Contract_ContractType", "ContractType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractType> ContractTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractType>("LibertyPowerModel.FK_Contract_ContractType", "ContractType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractType>("LibertyPowerModel.FK_Contract_ContractType", "ContractType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Contract", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_Contract", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_Contract", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_SalesChannel", "SalesChannel")]
        public SalesChannel SalesChannel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_Contract_SalesChannel", "SalesChannel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_Contract_SalesChannel", "SalesChannel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesChannel> SalesChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_Contract_SalesChannel", "SalesChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesChannel>("LibertyPowerModel.FK_Contract_SalesChannel", "SalesChannel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_PricingType", "PricingType")]
        public PricingType PricingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingType>("LibertyPowerModel.FK_Contract_PricingType", "PricingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingType>("LibertyPowerModel.FK_Contract_PricingType", "PricingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PricingType> PricingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PricingType>("LibertyPowerModel.FK_Contract_PricingType", "PricingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PricingType>("LibertyPowerModel.FK_Contract_PricingType", "PricingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_UserCreatedBy", "User")]
        public User CreatedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contract_UserCreatedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contract_UserCreatedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contract_UserCreatedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Contract_UserCreatedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_UserModifiedBy", "User")]
        public User ModifiedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contract_UserModifiedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contract_UserModifiedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ModifiedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Contract_UserModifiedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Contract_UserModifiedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ContractDealType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractDealType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractDealType object.
        /// </summary>
        /// <param name="contractDealTypeID">Initial value of the ContractDealTypeID property.</param>
        /// <param name="dealType">Initial value of the DealType property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static ContractDealType CreateContractDealType(global::System.Int32 contractDealTypeID, global::System.String dealType, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            ContractDealType contractDealType = new ContractDealType();
            contractDealType.ContractDealTypeID = contractDealTypeID;
            contractDealType.DealType = dealType;
            contractDealType.Sequence = sequence;
            contractDealType.Active = active;
            contractDealType.DateCreated = dateCreated;
            return contractDealType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractDealTypeID
        {
            get
            {
                return _ContractDealTypeID;
            }
            set
            {
                if (_ContractDealTypeID != value)
                {
                    OnContractDealTypeIDChanging(value);
                    ReportPropertyChanging("ContractDealTypeID");
                    _ContractDealTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractDealTypeID");
                    OnContractDealTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractDealTypeID;
        partial void OnContractDealTypeIDChanging(global::System.Int32 value);
        partial void OnContractDealTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DealType
        {
            get
            {
                return _DealType;
            }
            set
            {
                OnDealTypeChanging(value);
                ReportPropertyChanging("DealType");
                _DealType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DealType");
                OnDealTypeChanged();
            }
        }
        private global::System.String _DealType;
        partial void OnDealTypeChanging(global::System.String value);
        partial void OnDealTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractDealType", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractDealType", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractDealType", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ContractStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractStatus object.
        /// </summary>
        /// <param name="contractStatusID">Initial value of the ContractStatusID property.</param>
        /// <param name="descp">Initial value of the Descp property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static ContractStatus CreateContractStatus(global::System.Int32 contractStatusID, global::System.String descp, global::System.DateTime dateCreated)
        {
            ContractStatus contractStatus = new ContractStatus();
            contractStatus.ContractStatusID = contractStatusID;
            contractStatus.Descp = descp;
            contractStatus.DateCreated = dateCreated;
            return contractStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractStatusID
        {
            get
            {
                return _ContractStatusID;
            }
            set
            {
                if (_ContractStatusID != value)
                {
                    OnContractStatusIDChanging(value);
                    ReportPropertyChanging("ContractStatusID");
                    _ContractStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractStatusID");
                    OnContractStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractStatusID;
        partial void OnContractStatusIDChanging(global::System.Int32 value);
        partial void OnContractStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descp
        {
            get
            {
                return _Descp;
            }
            set
            {
                OnDescpChanging(value);
                ReportPropertyChanging("Descp");
                _Descp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descp");
                OnDescpChanged();
            }
        }
        private global::System.String _Descp;
        partial void OnDescpChanging(global::System.String value);
        partial void OnDescpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractStatus", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractStatus", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractStatus", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ContractTemplateType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractTemplateType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractTemplateType object.
        /// </summary>
        /// <param name="contractTemplateTypeID">Initial value of the ContractTemplateTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static ContractTemplateType CreateContractTemplateType(global::System.Int32 contractTemplateTypeID, global::System.String type, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            ContractTemplateType contractTemplateType = new ContractTemplateType();
            contractTemplateType.ContractTemplateTypeID = contractTemplateTypeID;
            contractTemplateType.Type = type;
            contractTemplateType.Sequence = sequence;
            contractTemplateType.Active = active;
            contractTemplateType.DateCreated = dateCreated;
            return contractTemplateType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractTemplateTypeID
        {
            get
            {
                return _ContractTemplateTypeID;
            }
            set
            {
                if (_ContractTemplateTypeID != value)
                {
                    OnContractTemplateTypeIDChanging(value);
                    ReportPropertyChanging("ContractTemplateTypeID");
                    _ContractTemplateTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractTemplateTypeID");
                    OnContractTemplateTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractTemplateTypeID;
        partial void OnContractTemplateTypeIDChanging(global::System.Int32 value);
        partial void OnContractTemplateTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractTemplateType", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractTemplateType", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractTemplateType", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ContractType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractType object.
        /// </summary>
        /// <param name="contractTypeID">Initial value of the ContractTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static ContractType CreateContractType(global::System.Int32 contractTypeID, global::System.String type, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            ContractType contractType = new ContractType();
            contractType.ContractTypeID = contractTypeID;
            contractType.Type = type;
            contractType.Sequence = sequence;
            contractType.Active = active;
            contractType.DateCreated = dateCreated;
            return contractType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractTypeID
        {
            get
            {
                return _ContractTypeID;
            }
            set
            {
                if (_ContractTypeID != value)
                {
                    OnContractTypeIDChanging(value);
                    ReportPropertyChanging("ContractTypeID");
                    _ContractTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractTypeID");
                    OnContractTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractTypeID;
        partial void OnContractTypeIDChanging(global::System.Int32 value);
        partial void OnContractTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_ContractType", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractType", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_ContractType", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="CreditAgency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditAgency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditAgency object.
        /// </summary>
        /// <param name="creditAgencyID">Initial value of the CreditAgencyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="typeOfCreditAgency">Initial value of the TypeOfCreditAgency property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static CreditAgency CreateCreditAgency(global::System.Int32 creditAgencyID, global::System.String name, global::System.String typeOfCreditAgency, global::System.DateTime dateCreated)
        {
            CreditAgency creditAgency = new CreditAgency();
            creditAgency.CreditAgencyID = creditAgencyID;
            creditAgency.Name = name;
            creditAgency.TypeOfCreditAgency = typeOfCreditAgency;
            creditAgency.DateCreated = dateCreated;
            return creditAgency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditAgencyID
        {
            get
            {
                return _CreditAgencyID;
            }
            set
            {
                if (_CreditAgencyID != value)
                {
                    OnCreditAgencyIDChanging(value);
                    ReportPropertyChanging("CreditAgencyID");
                    _CreditAgencyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreditAgencyID");
                    OnCreditAgencyIDChanged();
                }
            }
        }
        private global::System.Int32 _CreditAgencyID;
        partial void OnCreditAgencyIDChanging(global::System.Int32 value);
        partial void OnCreditAgencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeOfCreditAgency
        {
            get
            {
                return _TypeOfCreditAgency;
            }
            set
            {
                OnTypeOfCreditAgencyChanging(value);
                ReportPropertyChanging("TypeOfCreditAgency");
                _TypeOfCreditAgency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeOfCreditAgency");
                OnTypeOfCreditAgencyChanged();
            }
        }
        private global::System.String _TypeOfCreditAgency;
        partial void OnTypeOfCreditAgencyChanging(global::System.String value);
        partial void OnTypeOfCreditAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_CreditAgency", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_CreditAgency", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_CreditAgency", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="nameID">Initial value of the NameID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Customer CreateCustomer(global::System.Int32 customerID, global::System.Int32 nameID, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.NameID = nameID;
            customer.Modified = modified;
            customer.ModifiedBy = modifiedBy;
            customer.DateCreated = dateCreated;
            customer.CreatedBy = createdBy;
            return customer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NameID
        {
            get
            {
                return _NameID;
            }
            set
            {
                OnNameIDChanging(value);
                ReportPropertyChanging("NameID");
                _NameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NameID");
                OnNameIDChanged();
            }
        }
        private global::System.Int32 _NameID;
        partial void OnNameIDChanging(global::System.Int32 value);
        partial void OnNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerNameID
        {
            get
            {
                return _OwnerNameID;
            }
            set
            {
                OnOwnerNameIDChanging(value);
                ReportPropertyChanging("OwnerNameID");
                _OwnerNameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerNameID");
                OnOwnerNameIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerNameID;
        partial void OnOwnerNameIDChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressID;
        partial void OnAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DBA
        {
            get
            {
                return _DBA;
            }
            set
            {
                OnDBAChanging(value);
                ReportPropertyChanging("DBA");
                _DBA = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DBA");
                OnDBAChanged();
            }
        }
        private global::System.String _DBA;
        partial void OnDBAChanging(global::System.String value);
        partial void OnDBAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Duns
        {
            get
            {
                return _Duns;
            }
            set
            {
                OnDunsChanging(value);
                ReportPropertyChanging("Duns");
                _Duns = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Duns");
                OnDunsChanged();
            }
        }
        private global::System.String _Duns;
        partial void OnDunsChanging(global::System.String value);
        partial void OnDunsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SsnClear
        {
            get
            {
                return _SsnClear;
            }
            set
            {
                OnSsnClearChanging(value);
                ReportPropertyChanging("SsnClear");
                _SsnClear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SsnClear");
                OnSsnClearChanged();
            }
        }
        private global::System.String _SsnClear;
        partial void OnSsnClearChanging(global::System.String value);
        partial void OnSsnClearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SsnEncrypted
        {
            get
            {
                return _SsnEncrypted;
            }
            set
            {
                OnSsnEncryptedChanging(value);
                ReportPropertyChanging("SsnEncrypted");
                _SsnEncrypted = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SsnEncrypted");
                OnSsnEncryptedChanged();
            }
        }
        private global::System.String _SsnEncrypted;
        partial void OnSsnEncryptedChanging(global::System.String value);
        partial void OnSsnEncryptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private global::System.String _TaxId;
        partial void OnTaxIdChanging(global::System.String value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployerId
        {
            get
            {
                return _EmployerId;
            }
            set
            {
                OnEmployerIdChanging(value);
                ReportPropertyChanging("EmployerId");
                _EmployerId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployerId");
                OnEmployerIdChanged();
            }
        }
        private global::System.String _EmployerId;
        partial void OnEmployerIdChanging(global::System.String value);
        partial void OnEmployerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreditAgencyID
        {
            get
            {
                return _CreditAgencyID;
            }
            set
            {
                OnCreditAgencyIDChanging(value);
                ReportPropertyChanging("CreditAgencyID");
                _CreditAgencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditAgencyID");
                OnCreditAgencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CreditAgencyID;
        partial void OnCreditAgencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCreditAgencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditScoreEncrypted
        {
            get
            {
                return _CreditScoreEncrypted;
            }
            set
            {
                OnCreditScoreEncryptedChanging(value);
                ReportPropertyChanging("CreditScoreEncrypted");
                _CreditScoreEncrypted = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreditScoreEncrypted");
                OnCreditScoreEncryptedChanged();
            }
        }
        private global::System.String _CreditScoreEncrypted;
        partial void OnCreditScoreEncryptedChanging(global::System.String value);
        partial void OnCreditScoreEncryptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessTypeID
        {
            get
            {
                return _BusinessTypeID;
            }
            set
            {
                OnBusinessTypeIDChanging(value);
                ReportPropertyChanging("BusinessTypeID");
                _BusinessTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessTypeID");
                OnBusinessTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessTypeID;
        partial void OnBusinessTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessActivityID
        {
            get
            {
                return _BusinessActivityID;
            }
            set
            {
                OnBusinessActivityIDChanging(value);
                ReportPropertyChanging("BusinessActivityID");
                _BusinessActivityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessActivityID");
                OnBusinessActivityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessActivityID;
        partial void OnBusinessActivityIDChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalNumber
        {
            get
            {
                return _ExternalNumber;
            }
            set
            {
                OnExternalNumberChanging(value);
                ReportPropertyChanging("ExternalNumber");
                _ExternalNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalNumber");
                OnExternalNumberChanged();
            }
        }
        private global::System.String _ExternalNumber;
        partial void OnExternalNumberChanging(global::System.String value);
        partial void OnExternalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerPreferenceID
        {
            get
            {
                return _CustomerPreferenceID;
            }
            set
            {
                OnCustomerPreferenceIDChanging(value);
                ReportPropertyChanging("CustomerPreferenceID");
                _CustomerPreferenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerPreferenceID");
                OnCustomerPreferenceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerPreferenceID;
        partial void OnCustomerPreferenceIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerPreferenceIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Customer", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_Customer", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_Customer", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_CreditAgency", "CreditAgency")]
        public CreditAgency CreditAgency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditAgency>("LibertyPowerModel.FK_Customer_CreditAgency", "CreditAgency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditAgency>("LibertyPowerModel.FK_Customer_CreditAgency", "CreditAgency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CreditAgency> CreditAgencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditAgency>("LibertyPowerModel.FK_Customer_CreditAgency", "CreditAgency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CreditAgency>("LibertyPowerModel.FK_Customer_CreditAgency", "CreditAgency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_BusinessActivity", "BusinessActivity")]
        public BusinessActivity BusinessActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessActivity>("LibertyPowerModel.FK_Customer_BusinessActivity", "BusinessActivity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessActivity>("LibertyPowerModel.FK_Customer_BusinessActivity", "BusinessActivity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessActivity> BusinessActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessActivity>("LibertyPowerModel.FK_Customer_BusinessActivity", "BusinessActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessActivity>("LibertyPowerModel.FK_Customer_BusinessActivity", "BusinessActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_BusinessType", "BusinessType")]
        public BusinessType BusinessType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("LibertyPowerModel.FK_Customer_BusinessType", "BusinessType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("LibertyPowerModel.FK_Customer_BusinessType", "BusinessType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessType> BusinessTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("LibertyPowerModel.FK_Customer_BusinessType", "BusinessType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessType>("LibertyPowerModel.FK_Customer_BusinessType", "BusinessType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_CustomerPreference", "CustomerPreference")]
        public CustomerPreference CustomerPreference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerPreference>("LibertyPowerModel.FK_Customer_CustomerPreference", "CustomerPreference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerPreference>("LibertyPowerModel.FK_Customer_CustomerPreference", "CustomerPreference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerPreference> CustomerPreferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerPreference>("LibertyPowerModel.FK_Customer_CustomerPreference", "CustomerPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerPreference>("LibertyPowerModel.FK_Customer_CustomerPreference", "CustomerPreference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_Customer_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_Customer_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_Customer_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("LibertyPowerModel.FK_Customer_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_Customer_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_Customer_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_Customer_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("LibertyPowerModel.FK_Customer_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_Name", "Name")]
        public Name CustomerName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Customer_Name", "Name").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Customer_Name", "Name").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Name> CustomerNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Customer_Name", "Name");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Name>("LibertyPowerModel.FK_Customer_Name", "Name", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_OwnerName", "Name")]
        public Name OwnerName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Customer_OwnerName", "Name").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Customer_OwnerName", "Name").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Name> OwnerNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_Customer_OwnerName", "Name");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Name>("LibertyPowerModel.FK_Customer_OwnerName", "Name", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_UserCreated", "User")]
        public User CreatedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Customer_UserCreated", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Customer_UserCreated", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Customer_UserCreated", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Customer_UserCreated", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_UserModified", "User")]
        public User ModifiedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Customer_UserModified", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Customer_UserModified", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ModifiedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Customer_UserModified", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Customer_UserModified", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerAddress_Customer", "CustomerAddress")]
        public EntityCollection<CustomerAddress> CustomerAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerAddress>("LibertyPowerModel.FK_CustomerAddress_Customer", "CustomerAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerAddress>("LibertyPowerModel.FK_CustomerAddress_Customer", "CustomerAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerContact_Customer", "CustomerContact")]
        public EntityCollection<CustomerContact> CustomerContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerContact>("LibertyPowerModel.FK_CustomerContact_Customer", "CustomerContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerContact>("LibertyPowerModel.FK_CustomerContact_Customer", "CustomerContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerName_Customer", "CustomerName")]
        public EntityCollection<CustomerName> CustomerNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerName>("LibertyPowerModel.FK_CustomerName_Customer", "CustomerName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerName>("LibertyPowerModel.FK_CustomerName_Customer", "CustomerName", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="CustomerAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerAddress object.
        /// </summary>
        /// <param name="customerAddressID">Initial value of the CustomerAddressID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CustomerAddress CreateCustomerAddress(global::System.Int32 customerAddressID, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            CustomerAddress customerAddress = new CustomerAddress();
            customerAddress.CustomerAddressID = customerAddressID;
            customerAddress.Modified = modified;
            customerAddress.ModifiedBy = modifiedBy;
            customerAddress.DateCreated = dateCreated;
            customerAddress.CreatedBy = createdBy;
            return customerAddress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerAddressID
        {
            get
            {
                return _CustomerAddressID;
            }
            set
            {
                if (_CustomerAddressID != value)
                {
                    OnCustomerAddressIDChanging(value);
                    ReportPropertyChanging("CustomerAddressID");
                    _CustomerAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerAddressID");
                    OnCustomerAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerAddressID;
        partial void OnCustomerAddressIDChanging(global::System.Int32 value);
        partial void OnCustomerAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressID;
        partial void OnAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerAddress_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_CustomerAddress_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_CustomerAddress_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibertyPowerModel.FK_CustomerAddress_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("LibertyPowerModel.FK_CustomerAddress_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerAddress_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerAddress_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerAddress_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerAddress_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("LibertyPowerModel.FK_CustomerAddress_Customer", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="CustomerContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerContact object.
        /// </summary>
        /// <param name="customerContactID">Initial value of the CustomerContactID property.</param>
        public static CustomerContact CreateCustomerContact(global::System.Int32 customerContactID)
        {
            CustomerContact customerContact = new CustomerContact();
            customerContact.CustomerContactID = customerContactID;
            return customerContact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerContactID
        {
            get
            {
                return _CustomerContactID;
            }
            set
            {
                if (_CustomerContactID != value)
                {
                    OnCustomerContactIDChanging(value);
                    ReportPropertyChanging("CustomerContactID");
                    _CustomerContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerContactID");
                    OnCustomerContactIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerContactID;
        partial void OnCustomerContactIDChanging(global::System.Int32 value);
        partial void OnCustomerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Modified;
        partial void OnModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerContact_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_CustomerContact_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_CustomerContact_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibertyPowerModel.FK_CustomerContact_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("LibertyPowerModel.FK_CustomerContact_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerContact_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerContact_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerContact_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerContact_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("LibertyPowerModel.FK_CustomerContact_Customer", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="CustomerName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerName object.
        /// </summary>
        /// <param name="customerNameID">Initial value of the CustomerNameID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CustomerName CreateCustomerName(global::System.Int32 customerNameID, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            CustomerName customerName = new CustomerName();
            customerName.CustomerNameID = customerNameID;
            customerName.Modified = modified;
            customerName.ModifiedBy = modifiedBy;
            customerName.DateCreated = dateCreated;
            customerName.CreatedBy = createdBy;
            return customerName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerNameID
        {
            get
            {
                return _CustomerNameID;
            }
            set
            {
                if (_CustomerNameID != value)
                {
                    OnCustomerNameIDChanging(value);
                    ReportPropertyChanging("CustomerNameID");
                    _CustomerNameID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerNameID");
                    OnCustomerNameIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerNameID;
        partial void OnCustomerNameIDChanging(global::System.Int32 value);
        partial void OnCustomerNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NameID
        {
            get
            {
                return _NameID;
            }
            set
            {
                OnNameIDChanging(value);
                ReportPropertyChanging("NameID");
                _NameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NameID");
                OnNameIDChanged();
            }
        }
        private Nullable<global::System.Int32> _NameID;
        partial void OnNameIDChanging(Nullable<global::System.Int32> value);
        partial void OnNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerName_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerName_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerName_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("LibertyPowerModel.FK_CustomerName_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("LibertyPowerModel.FK_CustomerName_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerName_Name", "Name")]
        public Name Name
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_CustomerName_Name", "Name").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_CustomerName_Name", "Name").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Name> NameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Name>("LibertyPowerModel.FK_CustomerName_Name", "Name");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Name>("LibertyPowerModel.FK_CustomerName_Name", "Name", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="CustomerPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerPreference object.
        /// </summary>
        /// <param name="customerPreferenceID">Initial value of the CustomerPreferenceID property.</param>
        /// <param name="isGoGreen">Initial value of the IsGoGreen property.</param>
        /// <param name="optOutSpecialOffers">Initial value of the OptOutSpecialOffers property.</param>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="pin">Initial value of the Pin property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CustomerPreference CreateCustomerPreference(global::System.Int32 customerPreferenceID, global::System.Boolean isGoGreen, global::System.Boolean optOutSpecialOffers, global::System.Int32 languageID, global::System.String pin, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            CustomerPreference customerPreference = new CustomerPreference();
            customerPreference.CustomerPreferenceID = customerPreferenceID;
            customerPreference.IsGoGreen = isGoGreen;
            customerPreference.OptOutSpecialOffers = optOutSpecialOffers;
            customerPreference.LanguageID = languageID;
            customerPreference.Pin = pin;
            customerPreference.Modified = modified;
            customerPreference.ModifiedBy = modifiedBy;
            customerPreference.DateCreated = dateCreated;
            customerPreference.CreatedBy = createdBy;
            return customerPreference;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerPreferenceID
        {
            get
            {
                return _CustomerPreferenceID;
            }
            set
            {
                if (_CustomerPreferenceID != value)
                {
                    OnCustomerPreferenceIDChanging(value);
                    ReportPropertyChanging("CustomerPreferenceID");
                    _CustomerPreferenceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerPreferenceID");
                    OnCustomerPreferenceIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerPreferenceID;
        partial void OnCustomerPreferenceIDChanging(global::System.Int32 value);
        partial void OnCustomerPreferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGoGreen
        {
            get
            {
                return _IsGoGreen;
            }
            set
            {
                OnIsGoGreenChanging(value);
                ReportPropertyChanging("IsGoGreen");
                _IsGoGreen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGoGreen");
                OnIsGoGreenChanged();
            }
        }
        private global::System.Boolean _IsGoGreen;
        partial void OnIsGoGreenChanging(global::System.Boolean value);
        partial void OnIsGoGreenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OptOutSpecialOffers
        {
            get
            {
                return _OptOutSpecialOffers;
            }
            set
            {
                OnOptOutSpecialOffersChanging(value);
                ReportPropertyChanging("OptOutSpecialOffers");
                _OptOutSpecialOffers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptOutSpecialOffers");
                OnOptOutSpecialOffersChanged();
            }
        }
        private global::System.Boolean _OptOutSpecialOffers;
        partial void OnOptOutSpecialOffersChanging(global::System.Boolean value);
        partial void OnOptOutSpecialOffersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pin
        {
            get
            {
                return _Pin;
            }
            set
            {
                OnPinChanging(value);
                ReportPropertyChanging("Pin");
                _Pin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pin");
                OnPinChanged();
            }
        }
        private global::System.String _Pin;
        partial void OnPinChanging(global::System.String value);
        partial void OnPinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerContactPreferenceId
        {
            get
            {
                return _CustomerContactPreferenceId;
            }
            set
            {
                OnCustomerContactPreferenceIdChanging(value);
                ReportPropertyChanging("CustomerContactPreferenceId");
                _CustomerContactPreferenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerContactPreferenceId");
                OnCustomerContactPreferenceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerContactPreferenceId;
        partial void OnCustomerContactPreferenceIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerContactPreferenceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_CustomerPreference", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_CustomerPreference", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_CustomerPreference", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerPreference_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerPreference_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_CustomerPreference_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="DailyPricingGasPricesSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyPricingGasPricesSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DailyPricingGasPricesSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        public static DailyPricingGasPricesSetting CreateDailyPricingGasPricesSetting(global::System.Int32 id, global::System.String name, global::System.String content)
        {
            DailyPricingGasPricesSetting dailyPricingGasPricesSetting = new DailyPricingGasPricesSetting();
            dailyPricingGasPricesSetting.ID = id;
            dailyPricingGasPricesSetting.Name = name;
            dailyPricingGasPricesSetting.Content = content;
            return dailyPricingGasPricesSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="DailyPricingPriceTier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyPricingPriceTier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DailyPricingPriceTier object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static DailyPricingPriceTier CreateDailyPricingPriceTier(global::System.Int32 id)
        {
            DailyPricingPriceTier dailyPricingPriceTier = new DailyPricingPriceTier();
            dailyPricingPriceTier.ID = id;
            return dailyPricingPriceTier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinMwh
        {
            get
            {
                return _MinMwh;
            }
            set
            {
                OnMinMwhChanging(value);
                ReportPropertyChanging("MinMwh");
                _MinMwh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinMwh");
                OnMinMwhChanged();
            }
        }
        private Nullable<global::System.Int32> _MinMwh;
        partial void OnMinMwhChanging(Nullable<global::System.Int32> value);
        partial void OnMinMwhChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxMwh
        {
            get
            {
                return _MaxMwh;
            }
            set
            {
                OnMaxMwhChanging(value);
                ReportPropertyChanging("MaxMwh");
                _MaxMwh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxMwh");
                OnMaxMwhChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxMwh;
        partial void OnMaxMwhChanging(Nullable<global::System.Int32> value);
        partial void OnMaxMwhChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Byte> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Byte> value);
        partial void OnIsActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="DoNotKnock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DoNotKnock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DoNotKnock object.
        /// </summary>
        /// <param name="doNotKnockID">Initial value of the DoNotKnockID property.</param>
        public static DoNotKnock CreateDoNotKnock(global::System.Int32 doNotKnockID)
        {
            DoNotKnock doNotKnock = new DoNotKnock();
            doNotKnock.DoNotKnockID = doNotKnockID;
            return doNotKnock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoNotKnockID
        {
            get
            {
                return _DoNotKnockID;
            }
            set
            {
                if (_DoNotKnockID != value)
                {
                    OnDoNotKnockIDChanging(value);
                    ReportPropertyChanging("DoNotKnockID");
                    _DoNotKnockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoNotKnockID");
                    OnDoNotKnockIDChanged();
                }
            }
        }
        private global::System.Int32 _DoNotKnockID;
        partial void OnDoNotKnockIDChanging(global::System.Int32 value);
        partial void OnDoNotKnockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetAddress
        {
            get
            {
                return _StreetAddress;
            }
            set
            {
                OnStreetAddressChanging(value);
                ReportPropertyChanging("StreetAddress");
                _StreetAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetAddress");
                OnStreetAddressChanged();
            }
        }
        private global::System.String _StreetAddress;
        partial void OnStreetAddressChanging(global::System.String value);
        partial void OnStreetAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AptOrUnitNumber
        {
            get
            {
                return _AptOrUnitNumber;
            }
            set
            {
                OnAptOrUnitNumberChanging(value);
                ReportPropertyChanging("AptOrUnitNumber");
                _AptOrUnitNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AptOrUnitNumber");
                OnAptOrUnitNumberChanged();
            }
        }
        private global::System.String _AptOrUnitNumber;
        partial void OnAptOrUnitNumberChanging(global::System.String value);
        partial void OnAptOrUnitNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameofAptComplex
        {
            get
            {
                return _NameofAptComplex;
            }
            set
            {
                OnNameofAptComplexChanging(value);
                ReportPropertyChanging("NameofAptComplex");
                _NameofAptComplex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameofAptComplex");
                OnNameofAptComplexChanged();
            }
        }
        private global::System.String _NameofAptComplex;
        partial void OnNameofAptComplexChanging(global::System.String value);
        partial void OnNameofAptComplexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> RegulatoryComplaint
        {
            get
            {
                return _RegulatoryComplaint;
            }
            set
            {
                OnRegulatoryComplaintChanging(value);
                ReportPropertyChanging("RegulatoryComplaint");
                _RegulatoryComplaint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegulatoryComplaint");
                OnRegulatoryComplaintChanged();
            }
        }
        private Nullable<global::System.Boolean> _RegulatoryComplaint;
        partial void OnRegulatoryComplaintChanging(Nullable<global::System.Boolean> value);
        partial void OnRegulatoryComplaintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ActiveOrInactive
        {
            get
            {
                return _ActiveOrInactive;
            }
            set
            {
                OnActiveOrInactiveChanging(value);
                ReportPropertyChanging("ActiveOrInactive");
                _ActiveOrInactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveOrInactive");
                OnActiveOrInactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _ActiveOrInactive;
        partial void OnActiveOrInactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveOrInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EditedBy
        {
            get
            {
                return _EditedBy;
            }
            set
            {
                OnEditedByChanging(value);
                ReportPropertyChanging("EditedBy");
                _EditedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedBy");
                OnEditedByChanged();
            }
        }
        private Nullable<global::System.Int32> _EditedBy;
        partial void OnEditedByChanging(Nullable<global::System.Int32> value);
        partial void OnEditedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EditedDate
        {
            get
            {
                return _EditedDate;
            }
            set
            {
                OnEditedDateChanging(value);
                ReportPropertyChanging("EditedDate");
                _EditedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedDate");
                OnEditedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EditedDate;
        partial void OnEditedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEditedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_DoNotKnock_DoNotKnockHistory", "DoNotKnockHistory")]
        public EntityCollection<DoNotKnockHistory> DoNotKnockHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DoNotKnockHistory>("LibertyPowerModel.FK_DoNotKnock_DoNotKnockHistory", "DoNotKnockHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DoNotKnockHistory>("LibertyPowerModel.FK_DoNotKnock_DoNotKnockHistory", "DoNotKnockHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_DoNotKnock_User_EditedBy", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_DoNotKnock_User_EditedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_DoNotKnock_User_EditedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_DoNotKnock_User_EditedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_DoNotKnock_User_EditedBy", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="DoNotKnockHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DoNotKnockHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DoNotKnockHistory object.
        /// </summary>
        /// <param name="doNotKnockHistoryID">Initial value of the DoNotKnockHistoryID property.</param>
        public static DoNotKnockHistory CreateDoNotKnockHistory(global::System.Int32 doNotKnockHistoryID)
        {
            DoNotKnockHistory doNotKnockHistory = new DoNotKnockHistory();
            doNotKnockHistory.DoNotKnockHistoryID = doNotKnockHistoryID;
            return doNotKnockHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoNotKnockHistoryID
        {
            get
            {
                return _DoNotKnockHistoryID;
            }
            set
            {
                if (_DoNotKnockHistoryID != value)
                {
                    OnDoNotKnockHistoryIDChanging(value);
                    ReportPropertyChanging("DoNotKnockHistoryID");
                    _DoNotKnockHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoNotKnockHistoryID");
                    OnDoNotKnockHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _DoNotKnockHistoryID;
        partial void OnDoNotKnockHistoryIDChanging(global::System.Int32 value);
        partial void OnDoNotKnockHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoNotKnockID
        {
            get
            {
                return _DoNotKnockID;
            }
            set
            {
                OnDoNotKnockIDChanging(value);
                ReportPropertyChanging("DoNotKnockID");
                _DoNotKnockID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotKnockID");
                OnDoNotKnockIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DoNotKnockID;
        partial void OnDoNotKnockIDChanging(Nullable<global::System.Int32> value);
        partial void OnDoNotKnockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_DoNotKnock_DoNotKnockHistory", "DoNotKnock")]
        public DoNotKnock DoNotKnock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoNotKnock>("LibertyPowerModel.FK_DoNotKnock_DoNotKnockHistory", "DoNotKnock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoNotKnock>("LibertyPowerModel.FK_DoNotKnock_DoNotKnockHistory", "DoNotKnock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DoNotKnock> DoNotKnockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoNotKnock>("LibertyPowerModel.FK_DoNotKnock_DoNotKnockHistory", "DoNotKnock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DoNotKnock>("LibertyPowerModel.FK_DoNotKnock_DoNotKnockHistory", "DoNotKnock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_User_DoNotKnockHistory", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_User_DoNotKnockHistory", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_User_DoNotKnockHistory", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_User_DoNotKnockHistory", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_User_DoNotKnockHistory", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="EmailDistributionList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailDistributionList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailDistributionList object.
        /// </summary>
        /// <param name="emailDistributionListID">Initial value of the EmailDistributionListID property.</param>
        /// <param name="emailGroupID">Initial value of the EmailGroupID property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        public static EmailDistributionList CreateEmailDistributionList(global::System.Int32 emailDistributionListID, global::System.Int32 emailGroupID, global::System.String emailAddress)
        {
            EmailDistributionList emailDistributionList = new EmailDistributionList();
            emailDistributionList.EmailDistributionListID = emailDistributionListID;
            emailDistributionList.EmailGroupID = emailGroupID;
            emailDistributionList.EmailAddress = emailAddress;
            return emailDistributionList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailDistributionListID
        {
            get
            {
                return _EmailDistributionListID;
            }
            set
            {
                if (_EmailDistributionListID != value)
                {
                    OnEmailDistributionListIDChanging(value);
                    ReportPropertyChanging("EmailDistributionListID");
                    _EmailDistributionListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailDistributionListID");
                    OnEmailDistributionListIDChanged();
                }
            }
        }
        private global::System.Int32 _EmailDistributionListID;
        partial void OnEmailDistributionListIDChanging(global::System.Int32 value);
        partial void OnEmailDistributionListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailGroupID
        {
            get
            {
                return _EmailGroupID;
            }
            set
            {
                OnEmailGroupIDChanging(value);
                ReportPropertyChanging("EmailGroupID");
                _EmailGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailGroupID");
                OnEmailGroupIDChanged();
            }
        }
        private global::System.Int32 _EmailGroupID;
        partial void OnEmailGroupIDChanging(global::System.Int32 value);
        partial void OnEmailGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_EmailDistributionList_EmailGroup", "EmailGroup")]
        public EmailGroup EmailGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailGroup>("LibertyPowerModel.FK_EmailDistributionList_EmailGroup", "EmailGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailGroup>("LibertyPowerModel.FK_EmailDistributionList_EmailGroup", "EmailGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailGroup> EmailGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailGroup>("LibertyPowerModel.FK_EmailDistributionList_EmailGroup", "EmailGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmailGroup>("LibertyPowerModel.FK_EmailDistributionList_EmailGroup", "EmailGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="EmailGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailGroup object.
        /// </summary>
        /// <param name="emailGroupID">Initial value of the EmailGroupID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EmailGroup CreateEmailGroup(global::System.Int32 emailGroupID, global::System.String description)
        {
            EmailGroup emailGroup = new EmailGroup();
            emailGroup.EmailGroupID = emailGroupID;
            emailGroup.Description = description;
            return emailGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailGroupID
        {
            get
            {
                return _EmailGroupID;
            }
            set
            {
                if (_EmailGroupID != value)
                {
                    OnEmailGroupIDChanging(value);
                    ReportPropertyChanging("EmailGroupID");
                    _EmailGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailGroupID");
                    OnEmailGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _EmailGroupID;
        partial void OnEmailGroupIDChanging(global::System.Int32 value);
        partial void OnEmailGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_EmailDistributionList_EmailGroup", "EmailDistributionList")]
        public EntityCollection<EmailDistributionList> EmailDistributionLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailDistributionList>("LibertyPowerModel.FK_EmailDistributionList_EmailGroup", "EmailDistributionList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailDistributionList>("LibertyPowerModel.FK_EmailDistributionList_EmailGroup", "EmailDistributionList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "EmailTypeEmailGroup", "EmailType")]
        public EntityCollection<EmailType> EmailTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailType>("LibertyPowerModel.EmailTypeEmailGroup", "EmailType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailType>("LibertyPowerModel.EmailTypeEmailGroup", "EmailType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="EmailModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailModel object.
        /// </summary>
        /// <param name="emailModelID">Initial value of the EmailModelID property.</param>
        /// <param name="emailTypeID">Initial value of the EmailTypeID property.</param>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static EmailModel CreateEmailModel(global::System.Int32 emailModelID, global::System.Int32 emailTypeID, global::System.Int32 languageID, global::System.String subject, global::System.String message, global::System.Boolean isActive)
        {
            EmailModel emailModel = new EmailModel();
            emailModel.EmailModelID = emailModelID;
            emailModel.EmailTypeID = emailTypeID;
            emailModel.LanguageID = languageID;
            emailModel.Subject = subject;
            emailModel.Message = message;
            emailModel.IsActive = isActive;
            return emailModel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailModelID
        {
            get
            {
                return _EmailModelID;
            }
            set
            {
                if (_EmailModelID != value)
                {
                    OnEmailModelIDChanging(value);
                    ReportPropertyChanging("EmailModelID");
                    _EmailModelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailModelID");
                    OnEmailModelIDChanged();
                }
            }
        }
        private global::System.Int32 _EmailModelID;
        partial void OnEmailModelIDChanging(global::System.Int32 value);
        partial void OnEmailModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTypeID
        {
            get
            {
                return _EmailTypeID;
            }
            set
            {
                OnEmailTypeIDChanging(value);
                ReportPropertyChanging("EmailTypeID");
                _EmailTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailTypeID");
                OnEmailTypeIDChanged();
            }
        }
        private global::System.Int32 _EmailTypeID;
        partial void OnEmailTypeIDChanging(global::System.Int32 value);
        partial void OnEmailTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_EmailModel_EmailType", "EmailType")]
        public EmailType EmailType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailType>("LibertyPowerModel.FK_EmailModel_EmailType", "EmailType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailType>("LibertyPowerModel.FK_EmailModel_EmailType", "EmailType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailType> EmailTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailType>("LibertyPowerModel.FK_EmailModel_EmailType", "EmailType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmailType>("LibertyPowerModel.FK_EmailModel_EmailType", "EmailType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_EmailModel_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LibertyPowerModel.FK_EmailModel_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LibertyPowerModel.FK_EmailModel_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LibertyPowerModel.FK_EmailModel_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("LibertyPowerModel.FK_EmailModel_Language", "Language", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="EmailType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailType object.
        /// </summary>
        /// <param name="emailTypeID">Initial value of the EmailTypeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EmailType CreateEmailType(global::System.Int32 emailTypeID, global::System.String description)
        {
            EmailType emailType = new EmailType();
            emailType.EmailTypeID = emailTypeID;
            emailType.Description = description;
            return emailType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTypeID
        {
            get
            {
                return _EmailTypeID;
            }
            set
            {
                if (_EmailTypeID != value)
                {
                    OnEmailTypeIDChanging(value);
                    ReportPropertyChanging("EmailTypeID");
                    _EmailTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailTypeID");
                    OnEmailTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmailTypeID;
        partial void OnEmailTypeIDChanging(global::System.Int32 value);
        partial void OnEmailTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_EmailModel_EmailType", "EmailModel")]
        public EntityCollection<EmailModel> EmailModels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailModel>("LibertyPowerModel.FK_EmailModel_EmailType", "EmailModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailModel>("LibertyPowerModel.FK_EmailModel_EmailType", "EmailModel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "EmailTypeEmailGroup", "EmailGroup")]
        public EntityCollection<EmailGroup> EmailGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailGroup>("LibertyPowerModel.EmailTypeEmailGroup", "EmailGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailGroup>("LibertyPowerModel.EmailTypeEmailGroup", "EmailGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="GeniePriceMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeniePriceMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeniePriceMapping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="priceID">Initial value of the PriceID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="rateID">Initial value of the RateID property.</param>
        /// <param name="rateDescription">Initial value of the RateDescription property.</param>
        /// <param name="priceTierID">Initial value of the PriceTierID property.</param>
        public static GeniePriceMapping CreateGeniePriceMapping(global::System.Int64 id, global::System.Int64 priceID, global::System.String productID, global::System.Int32 rateID, global::System.String rateDescription, global::System.Int32 priceTierID)
        {
            GeniePriceMapping geniePriceMapping = new GeniePriceMapping();
            geniePriceMapping.ID = id;
            geniePriceMapping.PriceID = priceID;
            geniePriceMapping.ProductID = productID;
            geniePriceMapping.RateID = rateID;
            geniePriceMapping.RateDescription = rateDescription;
            geniePriceMapping.PriceTierID = priceTierID;
            return geniePriceMapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PriceID
        {
            get
            {
                return _PriceID;
            }
            set
            {
                if (_PriceID != value)
                {
                    OnPriceIDChanging(value);
                    ReportPropertyChanging("PriceID");
                    _PriceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriceID");
                    OnPriceIDChanged();
                }
            }
        }
        private global::System.Int64 _PriceID;
        partial void OnPriceIDChanging(global::System.Int64 value);
        partial void OnPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RateID
        {
            get
            {
                return _RateID;
            }
            set
            {
                if (_RateID != value)
                {
                    OnRateIDChanging(value);
                    ReportPropertyChanging("RateID");
                    _RateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RateID");
                    OnRateIDChanged();
                }
            }
        }
        private global::System.Int32 _RateID;
        partial void OnRateIDChanging(global::System.Int32 value);
        partial void OnRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RateDescription
        {
            get
            {
                return _RateDescription;
            }
            set
            {
                if (_RateDescription != value)
                {
                    OnRateDescriptionChanging(value);
                    ReportPropertyChanging("RateDescription");
                    _RateDescription = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RateDescription");
                    OnRateDescriptionChanged();
                }
            }
        }
        private global::System.String _RateDescription;
        partial void OnRateDescriptionChanging(global::System.String value);
        partial void OnRateDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceTierID
        {
            get
            {
                return _PriceTierID;
            }
            set
            {
                if (_PriceTierID != value)
                {
                    OnPriceTierIDChanging(value);
                    ReportPropertyChanging("PriceTierID");
                    _PriceTierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriceTierID");
                    OnPriceTierIDChanged();
                }
            }
        }
        private global::System.Int32 _PriceTierID;
        partial void OnPriceTierIDChanging(global::System.Int32 value);
        partial void OnPriceTierIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="GlobalPricingOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalPricingOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalPricingOption object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static GlobalPricingOption CreateGlobalPricingOption(global::System.Int32 id)
        {
            GlobalPricingOption globalPricingOption = new GlobalPricingOption();
            globalPricingOption.ID = id;
            return globalPricingOption;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UsageTolerance
        {
            get
            {
                return _UsageTolerance;
            }
            set
            {
                OnUsageToleranceChanging(value);
                ReportPropertyChanging("UsageTolerance");
                _UsageTolerance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsageTolerance");
                OnUsageToleranceChanged();
            }
        }
        private Nullable<global::System.Decimal> _UsageTolerance;
        partial void OnUsageToleranceChanging(Nullable<global::System.Decimal> value);
        partial void OnUsageToleranceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Language CreateLanguage(global::System.Int32 languageID, global::System.String description, global::System.DateTime dateCreated)
        {
            Language language = new Language();
            language.LanguageID = languageID;
            language.Description = description;
            language.DateCreated = dateCreated;
            return language;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_EmailModel_Language", "EmailModel")]
        public EntityCollection<EmailModel> EmailModels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmailModel>("LibertyPowerModel.FK_EmailModel_Language", "EmailModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmailModel>("LibertyPowerModel.FK_EmailModel_Language", "EmailModel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Market")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Market : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Market object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="marketCode">Initial value of the MarketCode property.</param>
        /// <param name="enableTieredPricing">Initial value of the EnableTieredPricing property.</param>
        public static Market CreateMarket(global::System.Int32 id, global::System.String marketCode, global::System.Byte enableTieredPricing)
        {
            Market market = new Market();
            market.ID = id;
            market.MarketCode = marketCode;
            market.EnableTieredPricing = enableTieredPricing;
            return market;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MarketCode
        {
            get
            {
                return _MarketCode;
            }
            set
            {
                OnMarketCodeChanging(value);
                ReportPropertyChanging("MarketCode");
                _MarketCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MarketCode");
                OnMarketCodeChanged();
            }
        }
        private global::System.String _MarketCode;
        partial void OnMarketCodeChanging(global::System.String value);
        partial void OnMarketCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RetailMktDescp
        {
            get
            {
                return _RetailMktDescp;
            }
            set
            {
                OnRetailMktDescpChanging(value);
                ReportPropertyChanging("RetailMktDescp");
                _RetailMktDescp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RetailMktDescp");
                OnRetailMktDescpChanged();
            }
        }
        private global::System.String _RetailMktDescp;
        partial void OnRetailMktDescpChanging(global::System.String value);
        partial void OnRetailMktDescpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WholesaleMktId
        {
            get
            {
                return _WholesaleMktId;
            }
            set
            {
                OnWholesaleMktIdChanging(value);
                ReportPropertyChanging("WholesaleMktId");
                _WholesaleMktId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WholesaleMktId");
                OnWholesaleMktIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WholesaleMktId;
        partial void OnWholesaleMktIdChanging(Nullable<global::System.Int32> value);
        partial void OnWholesaleMktIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PucCertification_number
        {
            get
            {
                return _PucCertification_number;
            }
            set
            {
                OnPucCertification_numberChanging(value);
                ReportPropertyChanging("PucCertification_number");
                _PucCertification_number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PucCertification_number");
                OnPucCertification_numberChanged();
            }
        }
        private global::System.String _PucCertification_number;
        partial void OnPucCertification_numberChanging(global::System.String value);
        partial void OnPucCertification_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InactiveInd
        {
            get
            {
                return _InactiveInd;
            }
            set
            {
                OnInactiveIndChanging(value);
                ReportPropertyChanging("InactiveInd");
                _InactiveInd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InactiveInd");
                OnInactiveIndChanged();
            }
        }
        private global::System.String _InactiveInd;
        partial void OnInactiveIndChanging(global::System.String value);
        partial void OnInactiveIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActiveDate
        {
            get
            {
                return _ActiveDate;
            }
            set
            {
                OnActiveDateChanging(value);
                ReportPropertyChanging("ActiveDate");
                _ActiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveDate");
                OnActiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActiveDate;
        partial void OnActiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Chgstamp
        {
            get
            {
                return _Chgstamp;
            }
            set
            {
                OnChgstampChanging(value);
                ReportPropertyChanging("Chgstamp");
                _Chgstamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Chgstamp");
                OnChgstampChanged();
            }
        }
        private Nullable<global::System.Int16> _Chgstamp;
        partial void OnChgstampChanging(Nullable<global::System.Int16> value);
        partial void OnChgstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TransferOwnershipEnabled
        {
            get
            {
                return _TransferOwnershipEnabled;
            }
            set
            {
                OnTransferOwnershipEnabledChanging(value);
                ReportPropertyChanging("TransferOwnershipEnabled");
                _TransferOwnershipEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferOwnershipEnabled");
                OnTransferOwnershipEnabledChanged();
            }
        }
        private Nullable<global::System.Int16> _TransferOwnershipEnabled;
        partial void OnTransferOwnershipEnabledChanging(Nullable<global::System.Int16> value);
        partial void OnTransferOwnershipEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte EnableTieredPricing
        {
            get
            {
                return _EnableTieredPricing;
            }
            set
            {
                OnEnableTieredPricingChanging(value);
                ReportPropertyChanging("EnableTieredPricing");
                _EnableTieredPricing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnableTieredPricing");
                OnEnableTieredPricingChanged();
            }
        }
        private global::System.Byte _EnableTieredPricing;
        partial void OnEnableTieredPricingChanging(global::System.Byte value);
        partial void OnEnableTieredPricingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Market", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_Market", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_Market", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_Market", "ChannelMarketSegment")]
        public EntityCollection<ChannelMarketSegment> ChannelMarketSegments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelMarketSegment>("LibertyPowerModel.FK_ChannelMarketSegments_Market", "ChannelMarketSegment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelMarketSegment>("LibertyPowerModel.FK_ChannelMarketSegments_Market", "ChannelMarketSegment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_MarketProducts_Market", "MarketProduct")]
        public EntityCollection<MarketProduct> MarketProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarketProduct>("LibertyPowerModel.FK_MarketProducts_Market", "MarketProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarketProduct>("LibertyPowerModel.FK_MarketProducts_Market", "MarketProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketTerm_Market", "ChannelMarketTerm")]
        public EntityCollection<ChannelMarketTerm> ChannelMarketTerms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelMarketTerm>("LibertyPowerModel.FK_ChannelMarketTerm_Market", "ChannelMarketTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelMarketTerm>("LibertyPowerModel.FK_ChannelMarketTerm_Market", "ChannelMarketTerm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="MarketProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarketProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarketProduct object.
        /// </summary>
        /// <param name="marketProductID">Initial value of the MarketProductID property.</param>
        public static MarketProduct CreateMarketProduct(global::System.Int32 marketProductID)
        {
            MarketProduct marketProduct = new MarketProduct();
            marketProduct.MarketProductID = marketProductID;
            return marketProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketProductID
        {
            get
            {
                return _MarketProductID;
            }
            set
            {
                if (_MarketProductID != value)
                {
                    OnMarketProductIDChanging(value);
                    ReportPropertyChanging("MarketProductID");
                    _MarketProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MarketProductID");
                    OnMarketProductIDChanged();
                }
            }
        }
        private global::System.Int32 _MarketProductID;
        partial void OnMarketProductIDChanging(global::System.Int32 value);
        partial void OnMarketProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MarketID;
        partial void OnMarketIDChanging(Nullable<global::System.Int32> value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductBrandID
        {
            get
            {
                return _ProductBrandID;
            }
            set
            {
                OnProductBrandIDChanging(value);
                ReportPropertyChanging("ProductBrandID");
                _ProductBrandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductBrandID");
                OnProductBrandIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductBrandID;
        partial void OnProductBrandIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductBrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_MarketProducts_Market", "Market")]
        public Market Market
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_MarketProducts_Market", "Market").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_MarketProducts_Market", "Market").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Market> MarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("LibertyPowerModel.FK_MarketProducts_Market", "Market");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Market>("LibertyPowerModel.FK_MarketProducts_Market", "Market", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_MarketProducts_ProductBrand", "ProductBrand")]
        public ProductBrand ProductBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBrand>("LibertyPowerModel.FK_MarketProducts_ProductBrand", "ProductBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBrand>("LibertyPowerModel.FK_MarketProducts_ProductBrand", "ProductBrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBrand> ProductBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBrand>("LibertyPowerModel.FK_MarketProducts_ProductBrand", "ProductBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBrand>("LibertyPowerModel.FK_MarketProducts_ProductBrand", "ProductBrand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_MarketProducts_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_MarketProducts_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_MarketProducts_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_MarketProducts_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_MarketProducts_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="MeterType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeterType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeterType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="meterTypeCode">Initial value of the MeterTypeCode property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static MeterType CreateMeterType(global::System.Int32 id, global::System.String meterTypeCode, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            MeterType meterType = new MeterType();
            meterType.ID = id;
            meterType.MeterTypeCode = meterTypeCode;
            meterType.Sequence = sequence;
            meterType.Active = active;
            meterType.DateCreated = dateCreated;
            return meterType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MeterTypeCode
        {
            get
            {
                return _MeterTypeCode;
            }
            set
            {
                OnMeterTypeCodeChanging(value);
                ReportPropertyChanging("MeterTypeCode");
                _MeterTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MeterTypeCode");
                OnMeterTypeCodeChanged();
            }
        }
        private global::System.String _MeterTypeCode;
        partial void OnMeterTypeCodeChanging(global::System.String value);
        partial void OnMeterTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_MeterType", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_MeterType", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_MeterType", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Name")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Name : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Name object.
        /// </summary>
        /// <param name="nameID">Initial value of the NameID property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Name CreateName(global::System.Int32 nameID, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            Name name = new Name();
            name.NameID = nameID;
            name.Modified = modified;
            name.ModifiedBy = modifiedBy;
            name.DateCreated = dateCreated;
            name.CreatedBy = createdBy;
            return name;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NameID
        {
            get
            {
                return _NameID;
            }
            set
            {
                if (_NameID != value)
                {
                    OnNameIDChanging(value);
                    ReportPropertyChanging("NameID");
                    _NameID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NameID");
                    OnNameIDChanged();
                }
            }
        }
        private global::System.Int32 _NameID;
        partial void OnNameIDChanging(global::System.Int32 value);
        partial void OnNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Name", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_Name", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_Name", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_Name", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_Name", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_Name", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_OwnerName", "Customer")]
        public EntityCollection<Customer> Customers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_OwnerName", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_OwnerName", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Name_UserCreated", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Name_UserCreated", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Name_UserCreated", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Name_UserCreated", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Name_UserCreated", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Name_UserModified", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Name_UserModified", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Name_UserModified", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_Name_UserModified", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_Name_UserModified", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerName_Name", "CustomerName")]
        public EntityCollection<CustomerName> CustomerNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerName>("LibertyPowerModel.FK_CustomerName_Name", "CustomerName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerName>("LibertyPowerModel.FK_CustomerName_Name", "CustomerName", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Price")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Price : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Price object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="channelGroupID">Initial value of the ChannelGroupID property.</param>
        /// <param name="channelTypeID">Initial value of the ChannelTypeID property.</param>
        /// <param name="productCrossPriceSetID">Initial value of the ProductCrossPriceSetID property.</param>
        /// <param name="productTypeID">Initial value of the ProductTypeID property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        /// <param name="utilityID">Initial value of the UtilityID property.</param>
        /// <param name="segmentID">Initial value of the SegmentID property.</param>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        /// <param name="serviceClassID">Initial value of the ServiceClassID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="term">Initial value of the Term property.</param>
        /// <param name="price1">Initial value of the Price1 property.</param>
        /// <param name="costRateEffectiveDate">Initial value of the CostRateEffectiveDate property.</param>
        /// <param name="costRateExpirationDate">Initial value of the CostRateExpirationDate property.</param>
        /// <param name="isTermRange">Initial value of the IsTermRange property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Price CreatePrice(global::System.Int64 id, global::System.Int32 channelID, global::System.Int32 channelGroupID, global::System.Int32 channelTypeID, global::System.Int32 productCrossPriceSetID, global::System.Int32 productTypeID, global::System.Int32 marketID, global::System.Int32 utilityID, global::System.Int32 segmentID, global::System.Int32 zoneID, global::System.Int32 serviceClassID, global::System.DateTime startDate, global::System.Int32 term, global::System.Decimal price1, global::System.DateTime costRateEffectiveDate, global::System.DateTime costRateExpirationDate, global::System.Byte isTermRange, global::System.DateTime dateCreated)
        {
            Price price = new Price();
            price.ID = id;
            price.ChannelID = channelID;
            price.ChannelGroupID = channelGroupID;
            price.ChannelTypeID = channelTypeID;
            price.ProductCrossPriceSetID = productCrossPriceSetID;
            price.ProductTypeID = productTypeID;
            price.MarketID = marketID;
            price.UtilityID = utilityID;
            price.SegmentID = segmentID;
            price.ZoneID = zoneID;
            price.ServiceClassID = serviceClassID;
            price.StartDate = startDate;
            price.Term = term;
            price.Price1 = price1;
            price.CostRateEffectiveDate = costRateEffectiveDate;
            price.CostRateExpirationDate = costRateExpirationDate;
            price.IsTermRange = isTermRange;
            price.DateCreated = dateCreated;
            return price;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelGroupID
        {
            get
            {
                return _ChannelGroupID;
            }
            set
            {
                OnChannelGroupIDChanging(value);
                ReportPropertyChanging("ChannelGroupID");
                _ChannelGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelGroupID");
                OnChannelGroupIDChanged();
            }
        }
        private global::System.Int32 _ChannelGroupID;
        partial void OnChannelGroupIDChanging(global::System.Int32 value);
        partial void OnChannelGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelTypeID
        {
            get
            {
                return _ChannelTypeID;
            }
            set
            {
                OnChannelTypeIDChanging(value);
                ReportPropertyChanging("ChannelTypeID");
                _ChannelTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelTypeID");
                OnChannelTypeIDChanged();
            }
        }
        private global::System.Int32 _ChannelTypeID;
        partial void OnChannelTypeIDChanging(global::System.Int32 value);
        partial void OnChannelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCrossPriceSetID
        {
            get
            {
                return _ProductCrossPriceSetID;
            }
            set
            {
                OnProductCrossPriceSetIDChanging(value);
                ReportPropertyChanging("ProductCrossPriceSetID");
                _ProductCrossPriceSetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCrossPriceSetID");
                OnProductCrossPriceSetIDChanged();
            }
        }
        private global::System.Int32 _ProductCrossPriceSetID;
        partial void OnProductCrossPriceSetIDChanging(global::System.Int32 value);
        partial void OnProductCrossPriceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeID
        {
            get
            {
                return _ProductTypeID;
            }
            set
            {
                OnProductTypeIDChanging(value);
                ReportPropertyChanging("ProductTypeID");
                _ProductTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductTypeID");
                OnProductTypeIDChanged();
            }
        }
        private global::System.Int32 _ProductTypeID;
        partial void OnProductTypeIDChanging(global::System.Int32 value);
        partial void OnProductTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private global::System.Int32 _MarketID;
        partial void OnMarketIDChanging(global::System.Int32 value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityID
        {
            get
            {
                return _UtilityID;
            }
            set
            {
                OnUtilityIDChanging(value);
                ReportPropertyChanging("UtilityID");
                _UtilityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UtilityID");
                OnUtilityIDChanged();
            }
        }
        private global::System.Int32 _UtilityID;
        partial void OnUtilityIDChanging(global::System.Int32 value);
        partial void OnUtilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SegmentID
        {
            get
            {
                return _SegmentID;
            }
            set
            {
                OnSegmentIDChanging(value);
                ReportPropertyChanging("SegmentID");
                _SegmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SegmentID");
                OnSegmentIDChanged();
            }
        }
        private global::System.Int32 _SegmentID;
        partial void OnSegmentIDChanging(global::System.Int32 value);
        partial void OnSegmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceClassID
        {
            get
            {
                return _ServiceClassID;
            }
            set
            {
                OnServiceClassIDChanging(value);
                ReportPropertyChanging("ServiceClassID");
                _ServiceClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceClassID");
                OnServiceClassIDChanged();
            }
        }
        private global::System.Int32 _ServiceClassID;
        partial void OnServiceClassIDChanging(global::System.Int32 value);
        partial void OnServiceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Term
        {
            get
            {
                return _Term;
            }
            set
            {
                OnTermChanging(value);
                ReportPropertyChanging("Term");
                _Term = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Term");
                OnTermChanged();
            }
        }
        private global::System.Int32 _Term;
        partial void OnTermChanging(global::System.Int32 value);
        partial void OnTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price1
        {
            get
            {
                return _Price1;
            }
            set
            {
                OnPrice1Changing(value);
                ReportPropertyChanging("Price1");
                _Price1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price1");
                OnPrice1Changed();
            }
        }
        private global::System.Decimal _Price1;
        partial void OnPrice1Changing(global::System.Decimal value);
        partial void OnPrice1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CostRateEffectiveDate
        {
            get
            {
                return _CostRateEffectiveDate;
            }
            set
            {
                OnCostRateEffectiveDateChanging(value);
                ReportPropertyChanging("CostRateEffectiveDate");
                _CostRateEffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostRateEffectiveDate");
                OnCostRateEffectiveDateChanged();
            }
        }
        private global::System.DateTime _CostRateEffectiveDate;
        partial void OnCostRateEffectiveDateChanging(global::System.DateTime value);
        partial void OnCostRateEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CostRateExpirationDate
        {
            get
            {
                return _CostRateExpirationDate;
            }
            set
            {
                OnCostRateExpirationDateChanging(value);
                ReportPropertyChanging("CostRateExpirationDate");
                _CostRateExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostRateExpirationDate");
                OnCostRateExpirationDateChanged();
            }
        }
        private global::System.DateTime _CostRateExpirationDate;
        partial void OnCostRateExpirationDateChanging(global::System.DateTime value);
        partial void OnCostRateExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsTermRange
        {
            get
            {
                return _IsTermRange;
            }
            set
            {
                OnIsTermRangeChanging(value);
                ReportPropertyChanging("IsTermRange");
                _IsTermRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTermRange");
                OnIsTermRangeChanged();
            }
        }
        private global::System.Byte _IsTermRange;
        partial void OnIsTermRangeChanging(global::System.Byte value);
        partial void OnIsTermRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> PriceTier
        {
            get
            {
                return _PriceTier;
            }
            set
            {
                OnPriceTierChanging(value);
                ReportPropertyChanging("PriceTier");
                _PriceTier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceTier");
                OnPriceTierChanged();
            }
        }
        private Nullable<global::System.Byte> _PriceTier;
        partial void OnPriceTierChanging(Nullable<global::System.Byte> value);
        partial void OnPriceTierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductBrandID
        {
            get
            {
                return _ProductBrandID;
            }
            set
            {
                OnProductBrandIDChanging(value);
                ReportPropertyChanging("ProductBrandID");
                _ProductBrandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductBrandID");
                OnProductBrandIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductBrandID;
        partial void OnProductBrandIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductBrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossMargin
        {
            get
            {
                return _GrossMargin;
            }
            set
            {
                OnGrossMarginChanging(value);
                ReportPropertyChanging("GrossMargin");
                _GrossMargin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossMargin");
                OnGrossMarginChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossMargin;
        partial void OnGrossMarginChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductCrossPriceID
        {
            get
            {
                return _ProductCrossPriceID;
            }
            set
            {
                OnProductCrossPriceIDChanging(value);
                ReportPropertyChanging("ProductCrossPriceID");
                _ProductCrossPriceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCrossPriceID");
                OnProductCrossPriceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductCrossPriceID;
        partial void OnProductCrossPriceIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductCrossPriceIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="PricingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PricingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PricingType object.
        /// </summary>
        /// <param name="pricingTypeID">Initial value of the PricingTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static PricingType CreatePricingType(global::System.Int32 pricingTypeID, global::System.String type, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            PricingType pricingType = new PricingType();
            pricingType.PricingTypeID = pricingTypeID;
            pricingType.Type = type;
            pricingType.Active = active;
            pricingType.DateCreated = dateCreated;
            return pricingType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PricingTypeID
        {
            get
            {
                return _PricingTypeID;
            }
            set
            {
                if (_PricingTypeID != value)
                {
                    OnPricingTypeIDChanging(value);
                    ReportPropertyChanging("PricingTypeID");
                    _PricingTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PricingTypeID");
                    OnPricingTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PricingTypeID;
        partial void OnPricingTypeIDChanging(global::System.Int32 value);
        partial void OnPricingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_PricingType", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_PricingType", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_PricingType", "Contract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ProductBrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductBrand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductBrand object.
        /// </summary>
        /// <param name="productBrandID">Initial value of the ProductBrandID property.</param>
        /// <param name="productTypeID">Initial value of the ProductTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isCustom">Initial value of the IsCustom property.</param>
        /// <param name="isDefaultRollover">Initial value of the IsDefaultRollover property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="isMultiTerm">Initial value of the IsMultiTerm property.</param>
        /// <param name="parent">Initial value of the Parent property.</param>
        public static ProductBrand CreateProductBrand(global::System.Int32 productBrandID, global::System.Int32 productTypeID, global::System.String name, global::System.Byte isCustom, global::System.Byte isDefaultRollover, global::System.Byte active, global::System.DateTime dateCreated, global::System.Boolean isMultiTerm, global::System.Int32 parent)
        {
            ProductBrand productBrand = new ProductBrand();
            productBrand.ProductBrandID = productBrandID;
            productBrand.ProductTypeID = productTypeID;
            productBrand.Name = name;
            productBrand.IsCustom = isCustom;
            productBrand.IsDefaultRollover = isDefaultRollover;
            productBrand.Active = active;
            productBrand.DateCreated = dateCreated;
            productBrand.IsMultiTerm = isMultiTerm;
            productBrand.Parent = parent;
            return productBrand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductBrandID
        {
            get
            {
                return _ProductBrandID;
            }
            set
            {
                if (_ProductBrandID != value)
                {
                    OnProductBrandIDChanging(value);
                    ReportPropertyChanging("ProductBrandID");
                    _ProductBrandID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductBrandID");
                    OnProductBrandIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductBrandID;
        partial void OnProductBrandIDChanging(global::System.Int32 value);
        partial void OnProductBrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductTypeID
        {
            get
            {
                return _ProductTypeID;
            }
            set
            {
                OnProductTypeIDChanging(value);
                ReportPropertyChanging("ProductTypeID");
                _ProductTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductTypeID");
                OnProductTypeIDChanged();
            }
        }
        private global::System.Int32 _ProductTypeID;
        partial void OnProductTypeIDChanging(global::System.Int32 value);
        partial void OnProductTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsCustom
        {
            get
            {
                return _IsCustom;
            }
            set
            {
                OnIsCustomChanging(value);
                ReportPropertyChanging("IsCustom");
                _IsCustom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCustom");
                OnIsCustomChanged();
            }
        }
        private global::System.Byte _IsCustom;
        partial void OnIsCustomChanging(global::System.Byte value);
        partial void OnIsCustomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IsDefaultRollover
        {
            get
            {
                return _IsDefaultRollover;
            }
            set
            {
                OnIsDefaultRolloverChanging(value);
                ReportPropertyChanging("IsDefaultRollover");
                _IsDefaultRollover = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefaultRollover");
                OnIsDefaultRolloverChanged();
            }
        }
        private global::System.Byte _IsDefaultRollover;
        partial void OnIsDefaultRolloverChanging(global::System.Byte value);
        partial void OnIsDefaultRolloverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RolloverBrandID
        {
            get
            {
                return _RolloverBrandID;
            }
            set
            {
                OnRolloverBrandIDChanging(value);
                ReportPropertyChanging("RolloverBrandID");
                _RolloverBrandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RolloverBrandID");
                OnRolloverBrandIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RolloverBrandID;
        partial void OnRolloverBrandIDChanging(Nullable<global::System.Int32> value);
        partial void OnRolloverBrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Byte _Active;
        partial void OnActiveChanging(global::System.Byte value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMultiTerm
        {
            get
            {
                return _IsMultiTerm;
            }
            set
            {
                OnIsMultiTermChanging(value);
                ReportPropertyChanging("IsMultiTerm");
                _IsMultiTerm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMultiTerm");
                OnIsMultiTermChanged();
            }
        }
        private global::System.Boolean _IsMultiTerm;
        partial void OnIsMultiTermChanging(global::System.Boolean value);
        partial void OnIsMultiTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private global::System.Int32 _Parent;
        partial void OnParentChanging(global::System.Int32 value);
        partial void OnParentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGas
        {
            get
            {
                return _IsGas;
            }
            set
            {
                OnIsGasChanging(value);
                ReportPropertyChanging("IsGas");
                _IsGas = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGas");
                OnIsGasChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGas;
        partial void OnIsGasChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGasChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_MarketProducts_ProductBrand", "MarketProduct")]
        public EntityCollection<MarketProduct> MarketProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarketProduct>("LibertyPowerModel.FK_MarketProducts_ProductBrand", "MarketProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarketProduct>("LibertyPowerModel.FK_MarketProducts_ProductBrand", "MarketProduct", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ProductCostRuleSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCostRuleSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCostRuleSet object.
        /// </summary>
        /// <param name="productCostRuleSetID">Initial value of the ProductCostRuleSetID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="expirationDate">Initial value of the ExpirationDate property.</param>
        /// <param name="fileGuid">Initial value of the FileGuid property.</param>
        /// <param name="uploadedBy">Initial value of the UploadedBy property.</param>
        /// <param name="uploadedDate">Initial value of the UploadedDate property.</param>
        public static ProductCostRuleSet CreateProductCostRuleSet(global::System.Int32 productCostRuleSetID, global::System.DateTime effectiveDate, global::System.DateTime expirationDate, global::System.Guid fileGuid, global::System.Int32 uploadedBy, global::System.DateTime uploadedDate)
        {
            ProductCostRuleSet productCostRuleSet = new ProductCostRuleSet();
            productCostRuleSet.ProductCostRuleSetID = productCostRuleSetID;
            productCostRuleSet.EffectiveDate = effectiveDate;
            productCostRuleSet.ExpirationDate = expirationDate;
            productCostRuleSet.FileGuid = fileGuid;
            productCostRuleSet.UploadedBy = uploadedBy;
            productCostRuleSet.UploadedDate = uploadedDate;
            return productCostRuleSet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCostRuleSetID
        {
            get
            {
                return _ProductCostRuleSetID;
            }
            set
            {
                if (_ProductCostRuleSetID != value)
                {
                    OnProductCostRuleSetIDChanging(value);
                    ReportPropertyChanging("ProductCostRuleSetID");
                    _ProductCostRuleSetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductCostRuleSetID");
                    OnProductCostRuleSetIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductCostRuleSetID;
        partial void OnProductCostRuleSetIDChanging(global::System.Int32 value);
        partial void OnProductCostRuleSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnExpirationDateChanging(global::System.DateTime value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FileGuid
        {
            get
            {
                return _FileGuid;
            }
            set
            {
                OnFileGuidChanging(value);
                ReportPropertyChanging("FileGuid");
                _FileGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileGuid");
                OnFileGuidChanged();
            }
        }
        private global::System.Guid _FileGuid;
        partial void OnFileGuidChanging(global::System.Guid value);
        partial void OnFileGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadedBy
        {
            get
            {
                return _UploadedBy;
            }
            set
            {
                OnUploadedByChanging(value);
                ReportPropertyChanging("UploadedBy");
                _UploadedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedBy");
                OnUploadedByChanged();
            }
        }
        private global::System.Int32 _UploadedBy;
        partial void OnUploadedByChanging(global::System.Int32 value);
        partial void OnUploadedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadedDate
        {
            get
            {
                return _UploadedDate;
            }
            set
            {
                OnUploadedDateChanging(value);
                ReportPropertyChanging("UploadedDate");
                _UploadedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedDate");
                OnUploadedDateChanged();
            }
        }
        private global::System.DateTime _UploadedDate;
        partial void OnUploadedDateChanging(global::System.DateTime value);
        partial void OnUploadedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UploadStatus
        {
            get
            {
                return _UploadStatus;
            }
            set
            {
                OnUploadStatusChanging(value);
                ReportPropertyChanging("UploadStatus");
                _UploadStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadStatus");
                OnUploadStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _UploadStatus;
        partial void OnUploadStatusChanging(Nullable<global::System.Int32> value);
        partial void OnUploadStatusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ProductCrossPriceMulti")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCrossPriceMulti : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCrossPriceMulti object.
        /// </summary>
        /// <param name="productCrossPriceMultiID">Initial value of the ProductCrossPriceMultiID property.</param>
        /// <param name="productCrossPriceID">Initial value of the ProductCrossPriceID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="term">Initial value of the Term property.</param>
        /// <param name="markupRate">Initial value of the MarkupRate property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static ProductCrossPriceMulti CreateProductCrossPriceMulti(global::System.Int32 productCrossPriceMultiID, global::System.Int32 productCrossPriceID, global::System.DateTime startDate, global::System.Int32 term, global::System.Decimal markupRate, global::System.Decimal price)
        {
            ProductCrossPriceMulti productCrossPriceMulti = new ProductCrossPriceMulti();
            productCrossPriceMulti.ProductCrossPriceMultiID = productCrossPriceMultiID;
            productCrossPriceMulti.ProductCrossPriceID = productCrossPriceID;
            productCrossPriceMulti.StartDate = startDate;
            productCrossPriceMulti.Term = term;
            productCrossPriceMulti.MarkupRate = markupRate;
            productCrossPriceMulti.Price = price;
            return productCrossPriceMulti;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCrossPriceMultiID
        {
            get
            {
                return _ProductCrossPriceMultiID;
            }
            set
            {
                if (_ProductCrossPriceMultiID != value)
                {
                    OnProductCrossPriceMultiIDChanging(value);
                    ReportPropertyChanging("ProductCrossPriceMultiID");
                    _ProductCrossPriceMultiID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductCrossPriceMultiID");
                    OnProductCrossPriceMultiIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductCrossPriceMultiID;
        partial void OnProductCrossPriceMultiIDChanging(global::System.Int32 value);
        partial void OnProductCrossPriceMultiIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCrossPriceID
        {
            get
            {
                return _ProductCrossPriceID;
            }
            set
            {
                OnProductCrossPriceIDChanging(value);
                ReportPropertyChanging("ProductCrossPriceID");
                _ProductCrossPriceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductCrossPriceID");
                OnProductCrossPriceIDChanged();
            }
        }
        private global::System.Int32 _ProductCrossPriceID;
        partial void OnProductCrossPriceIDChanging(global::System.Int32 value);
        partial void OnProductCrossPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Term
        {
            get
            {
                return _Term;
            }
            set
            {
                OnTermChanging(value);
                ReportPropertyChanging("Term");
                _Term = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Term");
                OnTermChanged();
            }
        }
        private global::System.Int32 _Term;
        partial void OnTermChanging(global::System.Int32 value);
        partial void OnTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MarkupRate
        {
            get
            {
                return _MarkupRate;
            }
            set
            {
                OnMarkupRateChanging(value);
                ReportPropertyChanging("MarkupRate");
                _MarkupRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkupRate");
                OnMarkupRateChanged();
            }
        }
        private global::System.Decimal _MarkupRate;
        partial void OnMarkupRateChanging(global::System.Decimal value);
        partial void OnMarkupRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ProductCrossPriceSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCrossPriceSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCrossPriceSet object.
        /// </summary>
        /// <param name="productCrossPriceSetID">Initial value of the ProductCrossPriceSetID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="expirationDate">Initial value of the ExpirationDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static ProductCrossPriceSet CreateProductCrossPriceSet(global::System.Int32 productCrossPriceSetID, global::System.DateTime effectiveDate, global::System.DateTime expirationDate, global::System.Int32 createdBy, global::System.DateTime dateCreated)
        {
            ProductCrossPriceSet productCrossPriceSet = new ProductCrossPriceSet();
            productCrossPriceSet.ProductCrossPriceSetID = productCrossPriceSetID;
            productCrossPriceSet.EffectiveDate = effectiveDate;
            productCrossPriceSet.ExpirationDate = expirationDate;
            productCrossPriceSet.CreatedBy = createdBy;
            productCrossPriceSet.DateCreated = dateCreated;
            return productCrossPriceSet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCrossPriceSetID
        {
            get
            {
                return _ProductCrossPriceSetID;
            }
            set
            {
                if (_ProductCrossPriceSetID != value)
                {
                    OnProductCrossPriceSetIDChanging(value);
                    ReportPropertyChanging("ProductCrossPriceSetID");
                    _ProductCrossPriceSetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductCrossPriceSetID");
                    OnProductCrossPriceSetIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductCrossPriceSetID;
        partial void OnProductCrossPriceSetIDChanging(global::System.Int32 value);
        partial void OnProductCrossPriceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnExpirationDateChanging(global::System.DateTime value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="PromotionCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PromotionCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PromotionCode object.
        /// </summary>
        /// <param name="promotionCodeId">Initial value of the PromotionCodeId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PromotionCode CreatePromotionCode(global::System.Int32 promotionCodeId, global::System.String code, global::System.String description)
        {
            PromotionCode promotionCode = new PromotionCode();
            promotionCode.PromotionCodeId = promotionCodeId;
            promotionCode.Code = code;
            promotionCode.Description = description;
            return promotionCode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PromotionCodeId
        {
            get
            {
                return _PromotionCodeId;
            }
            set
            {
                if (_PromotionCodeId != value)
                {
                    OnPromotionCodeIdChanging(value);
                    ReportPropertyChanging("PromotionCodeId");
                    _PromotionCodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromotionCodeId");
                    OnPromotionCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _PromotionCodeId;
        partial void OnPromotionCodeIdChanging(global::System.Int32 value);
        partial void OnPromotionCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PromotionTypeId
        {
            get
            {
                return _PromotionTypeId;
            }
            set
            {
                OnPromotionTypeIdChanging(value);
                ReportPropertyChanging("PromotionTypeId");
                _PromotionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromotionTypeId");
                OnPromotionTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PromotionTypeId;
        partial void OnPromotionTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPromotionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarketingDescription
        {
            get
            {
                return _MarketingDescription;
            }
            set
            {
                OnMarketingDescriptionChanging(value);
                ReportPropertyChanging("MarketingDescription");
                _MarketingDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarketingDescription");
                OnMarketingDescriptionChanged();
            }
        }
        private global::System.String _MarketingDescription;
        partial void OnMarketingDescriptionChanging(global::System.String value);
        partial void OnMarketingDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalDescription
        {
            get
            {
                return _LegalDescription;
            }
            set
            {
                OnLegalDescriptionChanging(value);
                ReportPropertyChanging("LegalDescription");
                _LegalDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LegalDescription");
                OnLegalDescriptionChanged();
            }
        }
        private global::System.String _LegalDescription;
        partial void OnLegalDescriptionChanging(global::System.String value);
        partial void OnLegalDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InActive
        {
            get
            {
                return _InActive;
            }
            set
            {
                OnInActiveChanging(value);
                ReportPropertyChanging("InActive");
                _InActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InActive");
                OnInActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _InActive;
        partial void OnInActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnInActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static Role CreateRole(global::System.Int32 roleID)
        {
            Role role = new Role();
            role.RoleID = roleID;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserRole", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("LibertyPowerModel.FK__UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("LibertyPowerModel.FK__UserRole", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserRole__RoleID__2FBA0BF1", "UserRole")]
        public EntityCollection<UserRole> UserRoles1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("LibertyPowerModel.FK__UserRole__RoleID__2FBA0BF1", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("LibertyPowerModel.FK__UserRole__RoleID__2FBA0BF1", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="SalesChannel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesChannel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesChannel object.
        /// </summary>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="channelName">Initial value of the ChannelName property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="hasManagedUsers">Initial value of the HasManagedUsers property.</param>
        /// <param name="renewalGracePeriod">Initial value of the RenewalGracePeriod property.</param>
        /// <param name="allowRetentionSave">Initial value of the AllowRetentionSave property.</param>
        /// <param name="allowRenewalOnDefault">Initial value of the AllowRenewalOnDefault property.</param>
        /// <param name="alwaysTransfer">Initial value of the AlwaysTransfer property.</param>
        /// <param name="legalStatus">Initial value of the LegalStatus property.</param>
        /// <param name="salesStatus">Initial value of the SalesStatus property.</param>
        /// <param name="allowInfoOnWelcomeLetter">Initial value of the AllowInfoOnWelcomeLetter property.</param>
        /// <param name="allowInfoOnRenewalLetter">Initial value of the AllowInfoOnRenewalLetter property.</param>
        /// <param name="allowInfoOnRenewalNotice">Initial value of the AllowInfoOnRenewalNotice property.</param>
        /// <param name="doNotTransfer">Initial value of the DoNotTransfer property.</param>
        /// <param name="marginLimit">Initial value of the MarginLimit property.</param>
        /// <param name="enableTemplate">Initial value of the EnableTemplate property.</param>
        /// <param name="tablet">Initial value of the Tablet property.</param>
        public static SalesChannel CreateSalesChannel(global::System.Int32 channelID, global::System.String channelName, global::System.DateTime dateCreated, global::System.DateTime dateModified, global::System.Int32 createdBy, global::System.Int32 modifiedBy, global::System.Boolean hasManagedUsers, global::System.Int32 renewalGracePeriod, global::System.Boolean allowRetentionSave, global::System.Boolean allowRenewalOnDefault, global::System.Boolean alwaysTransfer, global::System.Int32 legalStatus, global::System.Int32 salesStatus, global::System.Boolean allowInfoOnWelcomeLetter, global::System.Boolean allowInfoOnRenewalLetter, global::System.Boolean allowInfoOnRenewalNotice, global::System.Boolean doNotTransfer, global::System.Decimal marginLimit, global::System.Boolean enableTemplate, global::System.Int32 tablet)
        {
            SalesChannel salesChannel = new SalesChannel();
            salesChannel.ChannelID = channelID;
            salesChannel.ChannelName = channelName;
            salesChannel.DateCreated = dateCreated;
            salesChannel.DateModified = dateModified;
            salesChannel.CreatedBy = createdBy;
            salesChannel.ModifiedBy = modifiedBy;
            salesChannel.HasManagedUsers = hasManagedUsers;
            salesChannel.RenewalGracePeriod = renewalGracePeriod;
            salesChannel.AllowRetentionSave = allowRetentionSave;
            salesChannel.AllowRenewalOnDefault = allowRenewalOnDefault;
            salesChannel.AlwaysTransfer = alwaysTransfer;
            salesChannel.LegalStatus = legalStatus;
            salesChannel.SalesStatus = salesStatus;
            salesChannel.AllowInfoOnWelcomeLetter = allowInfoOnWelcomeLetter;
            salesChannel.AllowInfoOnRenewalLetter = allowInfoOnRenewalLetter;
            salesChannel.AllowInfoOnRenewalNotice = allowInfoOnRenewalNotice;
            salesChannel.DoNotTransfer = doNotTransfer;
            salesChannel.MarginLimit = marginLimit;
            salesChannel.EnableTemplate = enableTemplate;
            salesChannel.Tablet = tablet;
            return salesChannel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                if (_ChannelID != value)
                {
                    OnChannelIDChanging(value);
                    ReportPropertyChanging("ChannelID");
                    _ChannelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelID");
                    OnChannelIDChanged();
                }
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChannelName
        {
            get
            {
                return _ChannelName;
            }
            set
            {
                OnChannelNameChanging(value);
                ReportPropertyChanging("ChannelName");
                _ChannelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChannelName");
                OnChannelNameChanged();
            }
        }
        private global::System.String _ChannelName;
        partial void OnChannelNameChanging(global::System.String value);
        partial void OnChannelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EntityID;
        partial void OnEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelDevelopmentManagerID
        {
            get
            {
                return _ChannelDevelopmentManagerID;
            }
            set
            {
                OnChannelDevelopmentManagerIDChanging(value);
                ReportPropertyChanging("ChannelDevelopmentManagerID");
                _ChannelDevelopmentManagerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelDevelopmentManagerID");
                OnChannelDevelopmentManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelDevelopmentManagerID;
        partial void OnChannelDevelopmentManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnChannelDevelopmentManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChannelDescription
        {
            get
            {
                return _ChannelDescription;
            }
            set
            {
                OnChannelDescriptionChanging(value);
                ReportPropertyChanging("ChannelDescription");
                _ChannelDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChannelDescription");
                OnChannelDescriptionChanged();
            }
        }
        private global::System.String _ChannelDescription;
        partial void OnChannelDescriptionChanging(global::System.String value);
        partial void OnChannelDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActiveDirectoryLoginID
        {
            get
            {
                return _ActiveDirectoryLoginID;
            }
            set
            {
                OnActiveDirectoryLoginIDChanging(value);
                ReportPropertyChanging("ActiveDirectoryLoginID");
                _ActiveDirectoryLoginID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActiveDirectoryLoginID");
                OnActiveDirectoryLoginIDChanged();
            }
        }
        private global::System.String _ActiveDirectoryLoginID;
        partial void OnActiveDirectoryLoginIDChanging(global::System.String value);
        partial void OnActiveDirectoryLoginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasManagedUsers
        {
            get
            {
                return _HasManagedUsers;
            }
            set
            {
                OnHasManagedUsersChanging(value);
                ReportPropertyChanging("HasManagedUsers");
                _HasManagedUsers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasManagedUsers");
                OnHasManagedUsersChanged();
            }
        }
        private global::System.Boolean _HasManagedUsers;
        partial void OnHasManagedUsersChanging(global::System.Boolean value);
        partial void OnHasManagedUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Inactive;
        partial void OnInactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactFirstName
        {
            get
            {
                return _ContactFirstName;
            }
            set
            {
                OnContactFirstNameChanging(value);
                ReportPropertyChanging("ContactFirstName");
                _ContactFirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactFirstName");
                OnContactFirstNameChanged();
            }
        }
        private global::System.String _ContactFirstName;
        partial void OnContactFirstNameChanging(global::System.String value);
        partial void OnContactFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactLastName
        {
            get
            {
                return _ContactLastName;
            }
            set
            {
                OnContactLastNameChanging(value);
                ReportPropertyChanging("ContactLastName");
                _ContactLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactLastName");
                OnContactLastNameChanged();
            }
        }
        private global::System.String _ContactLastName;
        partial void OnContactLastNameChanging(global::System.String value);
        partial void OnContactLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactAddress1
        {
            get
            {
                return _ContactAddress1;
            }
            set
            {
                OnContactAddress1Changing(value);
                ReportPropertyChanging("ContactAddress1");
                _ContactAddress1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactAddress1");
                OnContactAddress1Changed();
            }
        }
        private global::System.String _ContactAddress1;
        partial void OnContactAddress1Changing(global::System.String value);
        partial void OnContactAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactAddress2
        {
            get
            {
                return _ContactAddress2;
            }
            set
            {
                OnContactAddress2Changing(value);
                ReportPropertyChanging("ContactAddress2");
                _ContactAddress2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactAddress2");
                OnContactAddress2Changed();
            }
        }
        private global::System.String _ContactAddress2;
        partial void OnContactAddress2Changing(global::System.String value);
        partial void OnContactAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactCity
        {
            get
            {
                return _ContactCity;
            }
            set
            {
                OnContactCityChanging(value);
                ReportPropertyChanging("ContactCity");
                _ContactCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactCity");
                OnContactCityChanged();
            }
        }
        private global::System.String _ContactCity;
        partial void OnContactCityChanging(global::System.String value);
        partial void OnContactCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactState
        {
            get
            {
                return _ContactState;
            }
            set
            {
                OnContactStateChanging(value);
                ReportPropertyChanging("ContactState");
                _ContactState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactState");
                OnContactStateChanged();
            }
        }
        private global::System.String _ContactState;
        partial void OnContactStateChanging(global::System.String value);
        partial void OnContactStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactZip
        {
            get
            {
                return _ContactZip;
            }
            set
            {
                OnContactZipChanging(value);
                ReportPropertyChanging("ContactZip");
                _ContactZip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactZip");
                OnContactZipChanged();
            }
        }
        private global::System.String _ContactZip;
        partial void OnContactZipChanging(global::System.String value);
        partial void OnContactZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPhone
        {
            get
            {
                return _ContactPhone;
            }
            set
            {
                OnContactPhoneChanging(value);
                ReportPropertyChanging("ContactPhone");
                _ContactPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPhone");
                OnContactPhoneChanged();
            }
        }
        private global::System.String _ContactPhone;
        partial void OnContactPhoneChanging(global::System.String value);
        partial void OnContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactFax
        {
            get
            {
                return _ContactFax;
            }
            set
            {
                OnContactFaxChanging(value);
                ReportPropertyChanging("ContactFax");
                _ContactFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactFax");
                OnContactFaxChanged();
            }
        }
        private global::System.String _ContactFax;
        partial void OnContactFaxChanging(global::System.String value);
        partial void OnContactFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RenewalGracePeriod
        {
            get
            {
                return _RenewalGracePeriod;
            }
            set
            {
                OnRenewalGracePeriodChanging(value);
                ReportPropertyChanging("RenewalGracePeriod");
                _RenewalGracePeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RenewalGracePeriod");
                OnRenewalGracePeriodChanged();
            }
        }
        private global::System.Int32 _RenewalGracePeriod;
        partial void OnRenewalGracePeriodChanging(global::System.Int32 value);
        partial void OnRenewalGracePeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowRetentionSave
        {
            get
            {
                return _AllowRetentionSave;
            }
            set
            {
                OnAllowRetentionSaveChanging(value);
                ReportPropertyChanging("AllowRetentionSave");
                _AllowRetentionSave = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowRetentionSave");
                OnAllowRetentionSaveChanged();
            }
        }
        private global::System.Boolean _AllowRetentionSave;
        partial void OnAllowRetentionSaveChanging(global::System.Boolean value);
        partial void OnAllowRetentionSaveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowRenewalOnDefault
        {
            get
            {
                return _AllowRenewalOnDefault;
            }
            set
            {
                OnAllowRenewalOnDefaultChanging(value);
                ReportPropertyChanging("AllowRenewalOnDefault");
                _AllowRenewalOnDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowRenewalOnDefault");
                OnAllowRenewalOnDefaultChanged();
            }
        }
        private global::System.Boolean _AllowRenewalOnDefault;
        partial void OnAllowRenewalOnDefaultChanging(global::System.Boolean value);
        partial void OnAllowRenewalOnDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlwaysTransfer
        {
            get
            {
                return _AlwaysTransfer;
            }
            set
            {
                OnAlwaysTransferChanging(value);
                ReportPropertyChanging("AlwaysTransfer");
                _AlwaysTransfer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlwaysTransfer");
                OnAlwaysTransferChanged();
            }
        }
        private global::System.Boolean _AlwaysTransfer;
        partial void OnAlwaysTransferChanging(global::System.Boolean value);
        partial void OnAlwaysTransferChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalStatus
        {
            get
            {
                return _LegalStatus;
            }
            set
            {
                OnLegalStatusChanging(value);
                ReportPropertyChanging("LegalStatus");
                _LegalStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalStatus");
                OnLegalStatusChanged();
            }
        }
        private global::System.Int32 _LegalStatus;
        partial void OnLegalStatusChanging(global::System.Int32 value);
        partial void OnLegalStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesStatus
        {
            get
            {
                return _SalesStatus;
            }
            set
            {
                OnSalesStatusChanging(value);
                ReportPropertyChanging("SalesStatus");
                _SalesStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesStatus");
                OnSalesStatusChanged();
            }
        }
        private global::System.Int32 _SalesStatus;
        partial void OnSalesStatusChanging(global::System.Int32 value);
        partial void OnSalesStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowInfoOnWelcomeLetter
        {
            get
            {
                return _AllowInfoOnWelcomeLetter;
            }
            set
            {
                OnAllowInfoOnWelcomeLetterChanging(value);
                ReportPropertyChanging("AllowInfoOnWelcomeLetter");
                _AllowInfoOnWelcomeLetter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowInfoOnWelcomeLetter");
                OnAllowInfoOnWelcomeLetterChanged();
            }
        }
        private global::System.Boolean _AllowInfoOnWelcomeLetter;
        partial void OnAllowInfoOnWelcomeLetterChanging(global::System.Boolean value);
        partial void OnAllowInfoOnWelcomeLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowInfoOnRenewalLetter
        {
            get
            {
                return _AllowInfoOnRenewalLetter;
            }
            set
            {
                OnAllowInfoOnRenewalLetterChanging(value);
                ReportPropertyChanging("AllowInfoOnRenewalLetter");
                _AllowInfoOnRenewalLetter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowInfoOnRenewalLetter");
                OnAllowInfoOnRenewalLetterChanged();
            }
        }
        private global::System.Boolean _AllowInfoOnRenewalLetter;
        partial void OnAllowInfoOnRenewalLetterChanging(global::System.Boolean value);
        partial void OnAllowInfoOnRenewalLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowInfoOnRenewalNotice
        {
            get
            {
                return _AllowInfoOnRenewalNotice;
            }
            set
            {
                OnAllowInfoOnRenewalNoticeChanging(value);
                ReportPropertyChanging("AllowInfoOnRenewalNotice");
                _AllowInfoOnRenewalNotice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowInfoOnRenewalNotice");
                OnAllowInfoOnRenewalNoticeChanged();
            }
        }
        private global::System.Boolean _AllowInfoOnRenewalNotice;
        partial void OnAllowInfoOnRenewalNoticeChanging(global::System.Boolean value);
        partial void OnAllowInfoOnRenewalNoticeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DoNotTransfer
        {
            get
            {
                return _DoNotTransfer;
            }
            set
            {
                OnDoNotTransferChanging(value);
                ReportPropertyChanging("DoNotTransfer");
                _DoNotTransfer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotTransfer");
                OnDoNotTransferChanged();
            }
        }
        private global::System.Boolean _DoNotTransfer;
        partial void OnDoNotTransferChanging(global::System.Boolean value);
        partial void OnDoNotTransferChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DoNotTransferTime
        {
            get
            {
                return _DoNotTransferTime;
            }
            set
            {
                OnDoNotTransferTimeChanging(value);
                ReportPropertyChanging("DoNotTransferTime");
                _DoNotTransferTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoNotTransferTime");
                OnDoNotTransferTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DoNotTransferTime;
        partial void OnDoNotTransferTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDoNotTransferTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DoNotTransferComment
        {
            get
            {
                return _DoNotTransferComment;
            }
            set
            {
                OnDoNotTransferCommentChanging(value);
                ReportPropertyChanging("DoNotTransferComment");
                _DoNotTransferComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DoNotTransferComment");
                OnDoNotTransferCommentChanged();
            }
        }
        private global::System.String _DoNotTransferComment;
        partial void OnDoNotTransferCommentChanging(global::System.String value);
        partial void OnDoNotTransferCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Affinity
        {
            get
            {
                return _Affinity;
            }
            set
            {
                OnAffinityChanging(value);
                ReportPropertyChanging("Affinity");
                _Affinity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Affinity");
                OnAffinityChanged();
            }
        }
        private Nullable<global::System.Boolean> _Affinity;
        partial void OnAffinityChanging(Nullable<global::System.Boolean> value);
        partial void OnAffinityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AffinityProgram
        {
            get
            {
                return _AffinityProgram;
            }
            set
            {
                OnAffinityProgramChanging(value);
                ReportPropertyChanging("AffinityProgram");
                _AffinityProgram = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AffinityProgram");
                OnAffinityProgramChanged();
            }
        }
        private global::System.String _AffinityProgram;
        partial void OnAffinityProgramChanging(global::System.String value);
        partial void OnAffinityProgramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MarginLimit
        {
            get
            {
                return _MarginLimit;
            }
            set
            {
                OnMarginLimitChanging(value);
                ReportPropertyChanging("MarginLimit");
                _MarginLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginLimit");
                OnMarginLimitChanged();
            }
        }
        private global::System.Decimal _MarginLimit;
        partial void OnMarginLimitChanging(global::System.Decimal value);
        partial void OnMarginLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableTemplate
        {
            get
            {
                return _EnableTemplate;
            }
            set
            {
                OnEnableTemplateChanging(value);
                ReportPropertyChanging("EnableTemplate");
                _EnableTemplate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnableTemplate");
                OnEnableTemplateChanged();
            }
        }
        private global::System.Boolean _EnableTemplate;
        partial void OnEnableTemplateChanging(global::System.Boolean value);
        partial void OnEnableTemplateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tablet
        {
            get
            {
                return _Tablet;
            }
            set
            {
                OnTabletChanging(value);
                ReportPropertyChanging("Tablet");
                _Tablet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tablet");
                OnTabletChanged();
            }
        }
        private global::System.Int32 _Tablet;
        partial void OnTabletChanging(global::System.Int32 value);
        partial void OnTabletChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_SalesChannel", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_SalesChannel", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_SalesChannel", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelSupport_SalesChannel", "SalesChannelSupport")]
        public EntityCollection<SalesChannelSupport> SalesChannelSupports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesChannelSupport>("LibertyPowerModel.FK_SalesChannelSupport_SalesChannel", "SalesChannelSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesChannelSupport>("LibertyPowerModel.FK_SalesChannelSupport_SalesChannel", "SalesChannelSupport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelUser_SalesChannel", "SalesChannelUser")]
        public EntityCollection<SalesChannelUser> SalesChannelUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesChannelUser>("LibertyPowerModel.FK_SalesChannelUser_SalesChannel", "SalesChannelUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesChannelUser>("LibertyPowerModel.FK_SalesChannelUser_SalesChannel", "SalesChannelUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketSegments_SalesChannel", "ChannelMarketSegment")]
        public EntityCollection<ChannelMarketSegment> ChannelMarketSegments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelMarketSegment>("LibertyPowerModel.FK_ChannelMarketSegments_SalesChannel", "ChannelMarketSegment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelMarketSegment>("LibertyPowerModel.FK_ChannelMarketSegments_SalesChannel", "ChannelMarketSegment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_ChannelMarketTerm_SalesChannel", "ChannelMarketTerm")]
        public EntityCollection<ChannelMarketTerm> ChannelMarketTerms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChannelMarketTerm>("LibertyPowerModel.FK_ChannelMarketTerm_SalesChannel", "ChannelMarketTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChannelMarketTerm>("LibertyPowerModel.FK_ChannelMarketTerm_SalesChannel", "ChannelMarketTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_TabletDocuments_SalesChannel_ChannelID", "TabletDocument")]
        public EntityCollection<TabletDocument> TabletDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TabletDocument>("LibertyPowerModel.FK_TabletDocuments_SalesChannel_ChannelID", "TabletDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TabletDocument>("LibertyPowerModel.FK_TabletDocuments_SalesChannel_ChannelID", "TabletDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="SalesChannelChannelGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesChannelChannelGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesChannelChannelGroup object.
        /// </summary>
        /// <param name="salesChannelChannelGroupID">Initial value of the SalesChannelChannelGroupID property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="channelGroupID">Initial value of the ChannelGroupID property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="userIdentity">Initial value of the UserIdentity property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static SalesChannelChannelGroup CreateSalesChannelChannelGroup(global::System.Int32 salesChannelChannelGroupID, global::System.Int32 channelID, global::System.Int32 channelGroupID, global::System.DateTime effectiveDate, global::System.Int32 userIdentity, global::System.DateTime dateCreated)
        {
            SalesChannelChannelGroup salesChannelChannelGroup = new SalesChannelChannelGroup();
            salesChannelChannelGroup.SalesChannelChannelGroupID = salesChannelChannelGroupID;
            salesChannelChannelGroup.ChannelID = channelID;
            salesChannelChannelGroup.ChannelGroupID = channelGroupID;
            salesChannelChannelGroup.EffectiveDate = effectiveDate;
            salesChannelChannelGroup.UserIdentity = userIdentity;
            salesChannelChannelGroup.DateCreated = dateCreated;
            return salesChannelChannelGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesChannelChannelGroupID
        {
            get
            {
                return _SalesChannelChannelGroupID;
            }
            set
            {
                if (_SalesChannelChannelGroupID != value)
                {
                    OnSalesChannelChannelGroupIDChanging(value);
                    ReportPropertyChanging("SalesChannelChannelGroupID");
                    _SalesChannelChannelGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesChannelChannelGroupID");
                    OnSalesChannelChannelGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _SalesChannelChannelGroupID;
        partial void OnSalesChannelChannelGroupIDChanging(global::System.Int32 value);
        partial void OnSalesChannelChannelGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelGroupID
        {
            get
            {
                return _ChannelGroupID;
            }
            set
            {
                OnChannelGroupIDChanging(value);
                ReportPropertyChanging("ChannelGroupID");
                _ChannelGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelGroupID");
                OnChannelGroupIDChanged();
            }
        }
        private global::System.Int32 _ChannelGroupID;
        partial void OnChannelGroupIDChanging(global::System.Int32 value);
        partial void OnChannelGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserIdentity
        {
            get
            {
                return _UserIdentity;
            }
            set
            {
                OnUserIdentityChanging(value);
                ReportPropertyChanging("UserIdentity");
                _UserIdentity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserIdentity");
                OnUserIdentityChanged();
            }
        }
        private global::System.Int32 _UserIdentity;
        partial void OnUserIdentityChanging(global::System.Int32 value);
        partial void OnUserIdentityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="SalesChannelPricingOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesChannelPricingOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesChannelPricingOption object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="enableTieredPricing">Initial value of the EnableTieredPricing property.</param>
        /// <param name="quoteTolerance">Initial value of the QuoteTolerance property.</param>
        public static SalesChannelPricingOption CreateSalesChannelPricingOption(global::System.Int32 id, global::System.Int32 channelID, global::System.Byte enableTieredPricing, global::System.Decimal quoteTolerance)
        {
            SalesChannelPricingOption salesChannelPricingOption = new SalesChannelPricingOption();
            salesChannelPricingOption.ID = id;
            salesChannelPricingOption.ChannelID = channelID;
            salesChannelPricingOption.EnableTieredPricing = enableTieredPricing;
            salesChannelPricingOption.QuoteTolerance = quoteTolerance;
            return salesChannelPricingOption;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte EnableTieredPricing
        {
            get
            {
                return _EnableTieredPricing;
            }
            set
            {
                OnEnableTieredPricingChanging(value);
                ReportPropertyChanging("EnableTieredPricing");
                _EnableTieredPricing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnableTieredPricing");
                OnEnableTieredPricingChanged();
            }
        }
        private global::System.Byte _EnableTieredPricing;
        partial void OnEnableTieredPricingChanging(global::System.Byte value);
        partial void OnEnableTieredPricingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal QuoteTolerance
        {
            get
            {
                return _QuoteTolerance;
            }
            set
            {
                OnQuoteToleranceChanging(value);
                ReportPropertyChanging("QuoteTolerance");
                _QuoteTolerance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteTolerance");
                OnQuoteToleranceChanged();
            }
        }
        private global::System.Decimal _QuoteTolerance;
        partial void OnQuoteToleranceChanging(global::System.Decimal value);
        partial void OnQuoteToleranceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="SalesChannelSelectedProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesChannelSelectedProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesChannelSelectedProduct object.
        /// </summary>
        /// <param name="salesChannelSelectedProductsID">Initial value of the SalesChannelSelectedProductsID property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        /// <param name="productBrandID">Initial value of the ProductBrandID property.</param>
        public static SalesChannelSelectedProduct CreateSalesChannelSelectedProduct(global::System.Int32 salesChannelSelectedProductsID, global::System.Int32 channelID, global::System.Int32 marketID, global::System.Int32 productBrandID)
        {
            SalesChannelSelectedProduct salesChannelSelectedProduct = new SalesChannelSelectedProduct();
            salesChannelSelectedProduct.SalesChannelSelectedProductsID = salesChannelSelectedProductsID;
            salesChannelSelectedProduct.ChannelID = channelID;
            salesChannelSelectedProduct.MarketID = marketID;
            salesChannelSelectedProduct.ProductBrandID = productBrandID;
            return salesChannelSelectedProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesChannelSelectedProductsID
        {
            get
            {
                return _SalesChannelSelectedProductsID;
            }
            set
            {
                if (_SalesChannelSelectedProductsID != value)
                {
                    OnSalesChannelSelectedProductsIDChanging(value);
                    ReportPropertyChanging("SalesChannelSelectedProductsID");
                    _SalesChannelSelectedProductsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesChannelSelectedProductsID");
                    OnSalesChannelSelectedProductsIDChanged();
                }
            }
        }
        private global::System.Int32 _SalesChannelSelectedProductsID;
        partial void OnSalesChannelSelectedProductsIDChanging(global::System.Int32 value);
        partial void OnSalesChannelSelectedProductsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private global::System.Int32 _MarketID;
        partial void OnMarketIDChanging(global::System.Int32 value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductBrandID
        {
            get
            {
                return _ProductBrandID;
            }
            set
            {
                OnProductBrandIDChanging(value);
                ReportPropertyChanging("ProductBrandID");
                _ProductBrandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductBrandID");
                OnProductBrandIDChanged();
            }
        }
        private global::System.Int32 _ProductBrandID;
        partial void OnProductBrandIDChanging(global::System.Int32 value);
        partial void OnProductBrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="SalesChannelSupport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesChannelSupport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesChannelSupport object.
        /// </summary>
        /// <param name="salesChannelSupportID">Initial value of the SalesChannelSupportID property.</param>
        /// <param name="supportUserID">Initial value of the SupportUserID property.</param>
        /// <param name="managerUserID">Initial value of the ManagerUserID property.</param>
        /// <param name="sendEmail">Initial value of the SendEmail property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static SalesChannelSupport CreateSalesChannelSupport(global::System.Int32 salesChannelSupportID, global::System.Int32 supportUserID, global::System.Int32 managerUserID, global::System.Boolean sendEmail, global::System.DateTime dateModified, global::System.DateTime dateCreated)
        {
            SalesChannelSupport salesChannelSupport = new SalesChannelSupport();
            salesChannelSupport.SalesChannelSupportID = salesChannelSupportID;
            salesChannelSupport.SupportUserID = supportUserID;
            salesChannelSupport.ManagerUserID = managerUserID;
            salesChannelSupport.SendEmail = sendEmail;
            salesChannelSupport.DateModified = dateModified;
            salesChannelSupport.DateCreated = dateCreated;
            return salesChannelSupport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesChannelSupportID
        {
            get
            {
                return _SalesChannelSupportID;
            }
            set
            {
                if (_SalesChannelSupportID != value)
                {
                    OnSalesChannelSupportIDChanging(value);
                    ReportPropertyChanging("SalesChannelSupportID");
                    _SalesChannelSupportID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesChannelSupportID");
                    OnSalesChannelSupportIDChanged();
                }
            }
        }
        private global::System.Int32 _SalesChannelSupportID;
        partial void OnSalesChannelSupportIDChanging(global::System.Int32 value);
        partial void OnSalesChannelSupportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupportUserID
        {
            get
            {
                return _SupportUserID;
            }
            set
            {
                OnSupportUserIDChanging(value);
                ReportPropertyChanging("SupportUserID");
                _SupportUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupportUserID");
                OnSupportUserIDChanged();
            }
        }
        private global::System.Int32 _SupportUserID;
        partial void OnSupportUserIDChanging(global::System.Int32 value);
        partial void OnSupportUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagerUserID
        {
            get
            {
                return _ManagerUserID;
            }
            set
            {
                OnManagerUserIDChanging(value);
                ReportPropertyChanging("ManagerUserID");
                _ManagerUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerUserID");
                OnManagerUserIDChanged();
            }
        }
        private global::System.Int32 _ManagerUserID;
        partial void OnManagerUserIDChanging(global::System.Int32 value);
        partial void OnManagerUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelID;
        partial void OnChannelIDChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SendEmail
        {
            get
            {
                return _SendEmail;
            }
            set
            {
                OnSendEmailChanging(value);
                ReportPropertyChanging("SendEmail");
                _SendEmail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendEmail");
                OnSendEmailChanged();
            }
        }
        private global::System.Boolean _SendEmail;
        partial void OnSendEmailChanging(global::System.Boolean value);
        partial void OnSendEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelSupport_SalesChannel", "SalesChannel")]
        public SalesChannel SalesChannel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelSupport_SalesChannel", "SalesChannel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelSupport_SalesChannel", "SalesChannel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesChannel> SalesChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelSupport_SalesChannel", "SalesChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelSupport_SalesChannel", "SalesChannel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelSupport_ManagerUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_ManagerUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_ManagerUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_ManagerUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_ManagerUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelSupport_SupportUser", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_SupportUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_SupportUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_SupportUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_SalesChannelSupport_SupportUser", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="SalesChannelUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesChannelUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesChannelUser object.
        /// </summary>
        /// <param name="channelUserID">Initial value of the ChannelUserID property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        public static SalesChannelUser CreateSalesChannelUser(global::System.Int32 channelUserID, global::System.Int32 channelID, global::System.Int32 userID, global::System.DateTime dateCreated, global::System.DateTime dateModified, global::System.Int32 createdBy, global::System.Int32 modifiedBy)
        {
            SalesChannelUser salesChannelUser = new SalesChannelUser();
            salesChannelUser.ChannelUserID = channelUserID;
            salesChannelUser.ChannelID = channelID;
            salesChannelUser.UserID = userID;
            salesChannelUser.DateCreated = dateCreated;
            salesChannelUser.DateModified = dateModified;
            salesChannelUser.CreatedBy = createdBy;
            salesChannelUser.ModifiedBy = modifiedBy;
            return salesChannelUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelUserID
        {
            get
            {
                return _ChannelUserID;
            }
            set
            {
                OnChannelUserIDChanging(value);
                ReportPropertyChanging("ChannelUserID");
                _ChannelUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelUserID");
                OnChannelUserIDChanged();
            }
        }
        private global::System.Int32 _ChannelUserID;
        partial void OnChannelUserIDChanging(global::System.Int32 value);
        partial void OnChannelUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                if (_ChannelID != value)
                {
                    OnChannelIDChanging(value);
                    ReportPropertyChanging("ChannelID");
                    _ChannelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelID");
                    OnChannelIDChanged();
                }
            }
        }
        private global::System.Int32 _ChannelID;
        partial void OnChannelIDChanging(global::System.Int32 value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EntityID;
        partial void OnEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReportsTo
        {
            get
            {
                return _ReportsTo;
            }
            set
            {
                OnReportsToChanging(value);
                ReportPropertyChanging("ReportsTo");
                _ReportsTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportsTo");
                OnReportsToChanged();
            }
        }
        private Nullable<global::System.Int32> _ReportsTo;
        partial void OnReportsToChanging(Nullable<global::System.Int32> value);
        partial void OnReportsToChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelUser_SalesChannel", "SalesChannel")]
        public SalesChannel SalesChannel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelUser_SalesChannel", "SalesChannel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelUser_SalesChannel", "SalesChannel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesChannel> SalesChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelUser_SalesChannel", "SalesChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesChannel>("LibertyPowerModel.FK_SalesChannelUser_SalesChannel", "SalesChannel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelUser_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelUser_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelUser_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK_SalesChannelUser_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK_SalesChannelUser_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ServiceClassGrouping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceClassGrouping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceClassGrouping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="market">Initial value of the Market property.</param>
        /// <param name="utility">Initial value of the Utility property.</param>
        /// <param name="utility_Service_Class">Initial value of the Utility_Service_Class property.</param>
        /// <param name="lP_Service_Class_LP_Price">Initial value of the LP_Service_Class_LP_Price property.</param>
        /// <param name="customerType">Initial value of the CustomerType property.</param>
        /// <param name="lP_Zone_Name">Initial value of the LP_Zone_Name property.</param>
        public static ServiceClassGrouping CreateServiceClassGrouping(global::System.Int32 id, global::System.String market, global::System.String utility, global::System.String utility_Service_Class, global::System.String lP_Service_Class_LP_Price, global::System.String customerType, global::System.String lP_Zone_Name)
        {
            ServiceClassGrouping serviceClassGrouping = new ServiceClassGrouping();
            serviceClassGrouping.ID = id;
            serviceClassGrouping.Market = market;
            serviceClassGrouping.Utility = utility;
            serviceClassGrouping.Utility_Service_Class = utility_Service_Class;
            serviceClassGrouping.LP_Service_Class_LP_Price = lP_Service_Class_LP_Price;
            serviceClassGrouping.CustomerType = customerType;
            serviceClassGrouping.LP_Zone_Name = lP_Zone_Name;
            return serviceClassGrouping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Market
        {
            get
            {
                return _Market;
            }
            set
            {
                OnMarketChanging(value);
                ReportPropertyChanging("Market");
                _Market = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Market");
                OnMarketChanged();
            }
        }
        private global::System.String _Market;
        partial void OnMarketChanging(global::System.String value);
        partial void OnMarketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Utility
        {
            get
            {
                return _Utility;
            }
            set
            {
                OnUtilityChanging(value);
                ReportPropertyChanging("Utility");
                _Utility = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Utility");
                OnUtilityChanged();
            }
        }
        private global::System.String _Utility;
        partial void OnUtilityChanging(global::System.String value);
        partial void OnUtilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Utility_Service_Class
        {
            get
            {
                return _Utility_Service_Class;
            }
            set
            {
                OnUtility_Service_ClassChanging(value);
                ReportPropertyChanging("Utility_Service_Class");
                _Utility_Service_Class = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Utility_Service_Class");
                OnUtility_Service_ClassChanged();
            }
        }
        private global::System.String _Utility_Service_Class;
        partial void OnUtility_Service_ClassChanging(global::System.String value);
        partial void OnUtility_Service_ClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LP_Service_Class_LP_Price
        {
            get
            {
                return _LP_Service_Class_LP_Price;
            }
            set
            {
                OnLP_Service_Class_LP_PriceChanging(value);
                ReportPropertyChanging("LP_Service_Class_LP_Price");
                _LP_Service_Class_LP_Price = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LP_Service_Class_LP_Price");
                OnLP_Service_Class_LP_PriceChanged();
            }
        }
        private global::System.String _LP_Service_Class_LP_Price;
        partial void OnLP_Service_Class_LP_PriceChanging(global::System.String value);
        partial void OnLP_Service_Class_LP_PriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerType
        {
            get
            {
                return _CustomerType;
            }
            set
            {
                OnCustomerTypeChanging(value);
                ReportPropertyChanging("CustomerType");
                _CustomerType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustomerType");
                OnCustomerTypeChanged();
            }
        }
        private global::System.String _CustomerType;
        partial void OnCustomerTypeChanging(global::System.String value);
        partial void OnCustomerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LP_Zone_Name
        {
            get
            {
                return _LP_Zone_Name;
            }
            set
            {
                OnLP_Zone_NameChanging(value);
                ReportPropertyChanging("LP_Zone_Name");
                _LP_Zone_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LP_Zone_Name");
                OnLP_Zone_NameChanged();
            }
        }
        private global::System.String _LP_Zone_Name;
        partial void OnLP_Zone_NameChanging(global::System.String value);
        partial void OnLP_Zone_NameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ServiceClassMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceClassMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceClassMapping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="utilityID">Initial value of the UtilityID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static ServiceClassMapping CreateServiceClassMapping(global::System.Int32 id, global::System.Int32 utilityID, global::System.String text, global::System.DateTime dateCreated)
        {
            ServiceClassMapping serviceClassMapping = new ServiceClassMapping();
            serviceClassMapping.ID = id;
            serviceClassMapping.UtilityID = utilityID;
            serviceClassMapping.Text = text;
            serviceClassMapping.DateCreated = dateCreated;
            return serviceClassMapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceClassID
        {
            get
            {
                return _ServiceClassID;
            }
            set
            {
                OnServiceClassIDChanging(value);
                ReportPropertyChanging("ServiceClassID");
                _ServiceClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceClassID");
                OnServiceClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceClassID;
        partial void OnServiceClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityID
        {
            get
            {
                return _UtilityID;
            }
            set
            {
                if (_UtilityID != value)
                {
                    OnUtilityIDChanging(value);
                    ReportPropertyChanging("UtilityID");
                    _UtilityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UtilityID");
                    OnUtilityIDChanged();
                }
            }
        }
        private global::System.Int32 _UtilityID;
        partial void OnUtilityIDChanging(global::System.Int32 value);
        partial void OnUtilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                if (_Text != value)
                {
                    OnTextChanging(value);
                    ReportPropertyChanging("Text");
                    _Text = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Text");
                    OnTextChanged();
                }
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                if (_DateCreated != value)
                {
                    OnDateCreatedChanging(value);
                    ReportPropertyChanging("DateCreated");
                    _DateCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateCreated");
                    OnDateCreatedChanged();
                }
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="TabletDataCache")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TabletDataCache : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TabletDataCache object.
        /// </summary>
        /// <param name="tabletDataCacheID">Initial value of the TabletDataCacheID property.</param>
        /// <param name="tabletDataCacheItemID">Initial value of the TabletDataCacheItemID property.</param>
        /// <param name="hashValue">Initial value of the HashValue property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static TabletDataCache CreateTabletDataCache(global::System.Int32 tabletDataCacheID, global::System.Int32 tabletDataCacheItemID, global::System.Guid hashValue, global::System.DateTime dateModified, global::System.DateTime createdDate)
        {
            TabletDataCache tabletDataCache = new TabletDataCache();
            tabletDataCache.TabletDataCacheID = tabletDataCacheID;
            tabletDataCache.TabletDataCacheItemID = tabletDataCacheItemID;
            tabletDataCache.HashValue = hashValue;
            tabletDataCache.DateModified = dateModified;
            tabletDataCache.CreatedDate = createdDate;
            return tabletDataCache;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TabletDataCacheID
        {
            get
            {
                return _TabletDataCacheID;
            }
            set
            {
                if (_TabletDataCacheID != value)
                {
                    OnTabletDataCacheIDChanging(value);
                    ReportPropertyChanging("TabletDataCacheID");
                    _TabletDataCacheID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TabletDataCacheID");
                    OnTabletDataCacheIDChanged();
                }
            }
        }
        private global::System.Int32 _TabletDataCacheID;
        partial void OnTabletDataCacheIDChanging(global::System.Int32 value);
        partial void OnTabletDataCacheIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TabletDataCacheItemID
        {
            get
            {
                return _TabletDataCacheItemID;
            }
            set
            {
                OnTabletDataCacheItemIDChanging(value);
                ReportPropertyChanging("TabletDataCacheItemID");
                _TabletDataCacheItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TabletDataCacheItemID");
                OnTabletDataCacheItemIDChanged();
            }
        }
        private global::System.Int32 _TabletDataCacheItemID;
        partial void OnTabletDataCacheItemIDChanging(global::System.Int32 value);
        partial void OnTabletDataCacheItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelID;
        partial void OnChannelIDChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HashValue
        {
            get
            {
                return _HashValue;
            }
            set
            {
                OnHashValueChanging(value);
                ReportPropertyChanging("HashValue");
                _HashValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HashValue");
                OnHashValueChanged();
            }
        }
        private global::System.Guid _HashValue;
        partial void OnHashValueChanging(global::System.Guid value);
        partial void OnHashValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastChanged
        {
            get
            {
                return _LastChanged;
            }
            set
            {
                OnLastChangedChanging(value);
                ReportPropertyChanging("LastChanged");
                _LastChanged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChanged");
                OnLastChangedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastChanged;
        partial void OnLastChangedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_TabletDataCache_CacheItem", "TabletDataCacheItem")]
        public TabletDataCacheItem TabletDataCacheItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_CacheItem", "TabletDataCacheItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_CacheItem", "TabletDataCacheItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TabletDataCacheItem> TabletDataCacheItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_CacheItem", "TabletDataCacheItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_CacheItem", "TabletDataCacheItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_TabletDataCache_ChannelId", "TabletDataCacheItem")]
        public TabletDataCacheItem TabletDataCacheItem1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_ChannelId", "TabletDataCacheItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_ChannelId", "TabletDataCacheItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TabletDataCacheItem> TabletDataCacheItem1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_ChannelId", "TabletDataCacheItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TabletDataCacheItem>("LibertyPowerModel.FK_TabletDataCache_ChannelId", "TabletDataCacheItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="TabletDataCacheItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TabletDataCacheItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TabletDataCacheItem object.
        /// </summary>
        /// <param name="tabletDataCacheItemID">Initial value of the TabletDataCacheItemID property.</param>
        /// <param name="cacheItemName">Initial value of the CacheItemName property.</param>
        /// <param name="tabletDataCacheItemTypeID">Initial value of the TabletDataCacheItemTypeID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="enableCache">Initial value of the EnableCache property.</param>
        public static TabletDataCacheItem CreateTabletDataCacheItem(global::System.Int32 tabletDataCacheItemID, global::System.String cacheItemName, global::System.Int32 tabletDataCacheItemTypeID, global::System.DateTime createdDate, global::System.Boolean enableCache)
        {
            TabletDataCacheItem tabletDataCacheItem = new TabletDataCacheItem();
            tabletDataCacheItem.TabletDataCacheItemID = tabletDataCacheItemID;
            tabletDataCacheItem.CacheItemName = cacheItemName;
            tabletDataCacheItem.TabletDataCacheItemTypeID = tabletDataCacheItemTypeID;
            tabletDataCacheItem.CreatedDate = createdDate;
            tabletDataCacheItem.EnableCache = enableCache;
            return tabletDataCacheItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TabletDataCacheItemID
        {
            get
            {
                return _TabletDataCacheItemID;
            }
            set
            {
                if (_TabletDataCacheItemID != value)
                {
                    OnTabletDataCacheItemIDChanging(value);
                    ReportPropertyChanging("TabletDataCacheItemID");
                    _TabletDataCacheItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TabletDataCacheItemID");
                    OnTabletDataCacheItemIDChanged();
                }
            }
        }
        private global::System.Int32 _TabletDataCacheItemID;
        partial void OnTabletDataCacheItemIDChanging(global::System.Int32 value);
        partial void OnTabletDataCacheItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CacheItemName
        {
            get
            {
                return _CacheItemName;
            }
            set
            {
                OnCacheItemNameChanging(value);
                ReportPropertyChanging("CacheItemName");
                _CacheItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CacheItemName");
                OnCacheItemNameChanged();
            }
        }
        private global::System.String _CacheItemName;
        partial void OnCacheItemNameChanging(global::System.String value);
        partial void OnCacheItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TabletDataCacheItemTypeID
        {
            get
            {
                return _TabletDataCacheItemTypeID;
            }
            set
            {
                OnTabletDataCacheItemTypeIDChanging(value);
                ReportPropertyChanging("TabletDataCacheItemTypeID");
                _TabletDataCacheItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TabletDataCacheItemTypeID");
                OnTabletDataCacheItemTypeIDChanged();
            }
        }
        private global::System.Int32 _TabletDataCacheItemTypeID;
        partial void OnTabletDataCacheItemTypeIDChanging(global::System.Int32 value);
        partial void OnTabletDataCacheItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableCache
        {
            get
            {
                return _EnableCache;
            }
            set
            {
                OnEnableCacheChanging(value);
                ReportPropertyChanging("EnableCache");
                _EnableCache = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnableCache");
                OnEnableCacheChanged();
            }
        }
        private global::System.Boolean _EnableCache;
        partial void OnEnableCacheChanging(global::System.Boolean value);
        partial void OnEnableCacheChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TabletDataCacheUpdateFrequencyID
        {
            get
            {
                return _TabletDataCacheUpdateFrequencyID;
            }
            set
            {
                OnTabletDataCacheUpdateFrequencyIDChanging(value);
                ReportPropertyChanging("TabletDataCacheUpdateFrequencyID");
                _TabletDataCacheUpdateFrequencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TabletDataCacheUpdateFrequencyID");
                OnTabletDataCacheUpdateFrequencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TabletDataCacheUpdateFrequencyID;
        partial void OnTabletDataCacheUpdateFrequencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnTabletDataCacheUpdateFrequencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_TabletDataCache_CacheItem", "TabletDataCache")]
        public EntityCollection<TabletDataCache> TabletDataCaches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TabletDataCache>("LibertyPowerModel.FK_TabletDataCache_CacheItem", "TabletDataCache");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TabletDataCache>("LibertyPowerModel.FK_TabletDataCache_CacheItem", "TabletDataCache", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_TabletDataCache_ChannelId", "TabletDataCache")]
        public EntityCollection<TabletDataCache> TabletDataCaches1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TabletDataCache>("LibertyPowerModel.FK_TabletDataCache_ChannelId", "TabletDataCache");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TabletDataCache>("LibertyPowerModel.FK_TabletDataCache_ChannelId", "TabletDataCache", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="TabletDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TabletDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TabletDocument object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TabletDocument CreateTabletDocument(global::System.Int32 id, global::System.String name)
        {
            TabletDocument tabletDocument = new TabletDocument();
            tabletDocument.ID = id;
            tabletDocument.Name = name;
            return tabletDocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                OnDocumentTypeIDChanging(value);
                ReportPropertyChanging("DocumentTypeID");
                _DocumentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentTypeID");
                OnDocumentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveStartDate
        {
            get
            {
                return _EffectiveStartDate;
            }
            set
            {
                OnEffectiveStartDateChanging(value);
                ReportPropertyChanging("EffectiveStartDate");
                _EffectiveStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveStartDate");
                OnEffectiveStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveStartDate;
        partial void OnEffectiveStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveEndDate
        {
            get
            {
                return _EffectiveEndDate;
            }
            set
            {
                OnEffectiveEndDateChanging(value);
                ReportPropertyChanging("EffectiveEndDate");
                _EffectiveEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveEndDate");
                OnEffectiveEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveEndDate;
        partial void OnEffectiveEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ChannelID;
        partial void OnChannelIDChanging(Nullable<global::System.Int32> value);
        partial void OnChannelIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_TabletDocuments_SalesChannel_ChannelID", "SalesChannel")]
        public SalesChannel SalesChannel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_TabletDocuments_SalesChannel_ChannelID", "SalesChannel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_TabletDocuments_SalesChannel_ChannelID", "SalesChannel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesChannel> SalesChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesChannel>("LibertyPowerModel.FK_TabletDocuments_SalesChannel_ChannelID", "SalesChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesChannel>("LibertyPowerModel.FK_TabletDocuments_SalesChannel_ChannelID", "SalesChannel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="TaxStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaxStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaxStatus object.
        /// </summary>
        /// <param name="taxStatusID">Initial value of the TaxStatusID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static TaxStatus CreateTaxStatus(global::System.Int32 taxStatusID, global::System.String status, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            TaxStatus taxStatus = new TaxStatus();
            taxStatus.TaxStatusID = taxStatusID;
            taxStatus.Status = status;
            taxStatus.Sequence = sequence;
            taxStatus.Active = active;
            taxStatus.DateCreated = dateCreated;
            return taxStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxStatusID
        {
            get
            {
                return _TaxStatusID;
            }
            set
            {
                if (_TaxStatusID != value)
                {
                    OnTaxStatusIDChanging(value);
                    ReportPropertyChanging("TaxStatusID");
                    _TaxStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaxStatusID");
                    OnTaxStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxStatusID;
        partial void OnTaxStatusIDChanging(global::System.Int32 value);
        partial void OnTaxStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_TaxStatus", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_TaxStatus", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_TaxStatus", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="UsageReqStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsageReqStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsageReqStatus object.
        /// </summary>
        /// <param name="usageReqStatusID">Initial value of the UsageReqStatusID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static UsageReqStatus CreateUsageReqStatus(global::System.Int32 usageReqStatusID, global::System.String status, global::System.Int32 sequence, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            UsageReqStatus usageReqStatus = new UsageReqStatus();
            usageReqStatus.UsageReqStatusID = usageReqStatusID;
            usageReqStatus.Status = status;
            usageReqStatus.Sequence = sequence;
            usageReqStatus.Active = active;
            usageReqStatus.DateCreated = dateCreated;
            return usageReqStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsageReqStatusID
        {
            get
            {
                return _UsageReqStatusID;
            }
            set
            {
                if (_UsageReqStatusID != value)
                {
                    OnUsageReqStatusIDChanging(value);
                    ReportPropertyChanging("UsageReqStatusID");
                    _UsageReqStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UsageReqStatusID");
                    OnUsageReqStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _UsageReqStatusID;
        partial void OnUsageReqStatusIDChanging(global::System.Int32 value);
        partial void OnUsageReqStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_UsageReqStatus", "AccountUsage")]
        public EntityCollection<AccountUsage> AccountUsages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_UsageReqStatus", "AccountUsage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_UsageReqStatus", "AccountUsage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isActive">Initial value of the isActive property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userName, global::System.String isActive)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            user.isActive = isActive;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.String _UserType;
        partial void OnUserTypeChanging(global::System.String value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegacyID
        {
            get
            {
                return _LegacyID;
            }
            set
            {
                OnLegacyIDChanging(value);
                ReportPropertyChanging("LegacyID");
                _LegacyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegacyID");
                OnLegacyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LegacyID;
        partial void OnLegacyIDChanging(Nullable<global::System.Int32> value);
        partial void OnLegacyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private global::System.String _isActive;
        partial void OnisActiveChanging(global::System.String value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserGUID
        {
            get
            {
                return _UserGUID;
            }
            set
            {
                OnUserGUIDChanging(value);
                ReportPropertyChanging("UserGUID");
                _UserGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserGUID");
                OnUserGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserGUID;
        partial void OnUserGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserImage
        {
            get
            {
                return _UserImage;
            }
            set
            {
                OnUserImageChanging(value);
                ReportPropertyChanging("UserImage");
                _UserImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserImage");
                OnUserImageChanged();
            }
        }
        private global::System.String _UserImage;
        partial void OnUserImageChanging(global::System.String value);
        partial void OnUserImageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_UserCreatedBy", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_UserCreatedBy", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_UserCreatedBy", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_UserModifiedBy", "Account")]
        public EntityCollection<Account> Accounts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_UserModifiedBy", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_UserModifiedBy", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_UserCreatedBy", "AccountContract")]
        public EntityCollection<AccountContract> AccountContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_UserCreatedBy", "AccountContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_UserCreatedBy", "AccountContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContract_UserModifiedBy", "AccountContract")]
        public EntityCollection<AccountContract> AccountContracts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_UserModifiedBy", "AccountContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContract>("LibertyPowerModel.FK_AccountContract_UserModifiedBy", "AccountContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractCommission_UserCreatedBy", "AccountContractCommission")]
        public EntityCollection<AccountContractCommission> AccountContractCommissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContractCommission>("LibertyPowerModel.FK_AccountContractCommission_UserCreatedBy", "AccountContractCommission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContractCommission>("LibertyPowerModel.FK_AccountContractCommission_UserCreatedBy", "AccountContractCommission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractCommission_UserModifiedBy", "AccountContractCommission")]
        public EntityCollection<AccountContractCommission> AccountContractCommissions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContractCommission>("LibertyPowerModel.FK_AccountContractCommission_UserModifiedBy", "AccountContractCommission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContractCommission>("LibertyPowerModel.FK_AccountContractCommission_UserModifiedBy", "AccountContractCommission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractRate_UserCreatedBy", "AccountContractRate")]
        public EntityCollection<AccountContractRate> AccountContractRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContractRate>("LibertyPowerModel.FK_AccountContractRate_UserCreatedBy", "AccountContractRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContractRate>("LibertyPowerModel.FK_AccountContractRate_UserCreatedBy", "AccountContractRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountContractRate_UserModifiedBy", "AccountContractRate")]
        public EntityCollection<AccountContractRate> AccountContractRates1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContractRate>("LibertyPowerModel.FK_AccountContractRate_UserModifiedBy", "AccountContractRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContractRate>("LibertyPowerModel.FK_AccountContractRate_UserModifiedBy", "AccountContractRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountDetail_UserCreatedBy", "AccountDetail")]
        public EntityCollection<AccountDetail> AccountDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountDetail>("LibertyPowerModel.FK_AccountDetail_UserCreatedBy", "AccountDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountDetail>("LibertyPowerModel.FK_AccountDetail_UserCreatedBy", "AccountDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountDetail_UserModifiedBy", "AccountDetail")]
        public EntityCollection<AccountDetail> AccountDetails1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountDetail>("LibertyPowerModel.FK_AccountDetail_UserModifiedBy", "AccountDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountDetail>("LibertyPowerModel.FK_AccountDetail_UserModifiedBy", "AccountDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountStatus_UserCreatedBy", "AccountStatus")]
        public EntityCollection<AccountStatus> AccountStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountStatus>("LibertyPowerModel.FK_AccountStatus_UserCreatedBy", "AccountStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountStatus>("LibertyPowerModel.FK_AccountStatus_UserCreatedBy", "AccountStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountStatus_UserModifiedBy", "AccountStatus")]
        public EntityCollection<AccountStatus> AccountStatus1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountStatus>("LibertyPowerModel.FK_AccountStatus_UserModifiedBy", "AccountStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountStatus>("LibertyPowerModel.FK_AccountStatus_UserModifiedBy", "AccountStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_UserCreatedBy", "AccountUsage")]
        public EntityCollection<AccountUsage> AccountUsages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_UserCreatedBy", "AccountUsage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_UserCreatedBy", "AccountUsage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_AccountUsage_UserModifiedBy", "AccountUsage")]
        public EntityCollection<AccountUsage> AccountUsages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_UserModifiedBy", "AccountUsage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountUsage>("LibertyPowerModel.FK_AccountUsage_UserModifiedBy", "AccountUsage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Address_UserCreated", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("LibertyPowerModel.FK_Address_UserCreated", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("LibertyPowerModel.FK_Address_UserCreated", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Address_UserModified", "Address")]
        public EntityCollection<Address> Addresses1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("LibertyPowerModel.FK_Address_UserModified", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("LibertyPowerModel.FK_Address_UserModified", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contact_UserCreated", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("LibertyPowerModel.FK_Contact_UserCreated", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("LibertyPowerModel.FK_Contact_UserCreated", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contact_UserModified", "Contact")]
        public EntityCollection<Contact> Contacts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("LibertyPowerModel.FK_Contact_UserModified", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("LibertyPowerModel.FK_Contact_UserModified", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_UserCreatedBy", "Contract")]
        public EntityCollection<Contract> Contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_UserCreatedBy", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_UserCreatedBy", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Contract_UserModifiedBy", "Contract")]
        public EntityCollection<Contract> Contracts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_UserModifiedBy", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("LibertyPowerModel.FK_Contract_UserModifiedBy", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_UserCreated", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_UserCreated", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_UserCreated", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Customer_UserModified", "Customer")]
        public EntityCollection<Customer> Customers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_UserModified", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("LibertyPowerModel.FK_Customer_UserModified", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerPreference_User", "CustomerPreference")]
        public EntityCollection<CustomerPreference> CustomerPreferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPreference>("LibertyPowerModel.FK_CustomerPreference_User", "CustomerPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPreference>("LibertyPowerModel.FK_CustomerPreference_User", "CustomerPreference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_CustomerPreference_User1", "CustomerPreference")]
        public EntityCollection<CustomerPreference> CustomerPreferences1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomerPreference>("LibertyPowerModel.FK_CustomerPreference_User1", "CustomerPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomerPreference>("LibertyPowerModel.FK_CustomerPreference_User1", "CustomerPreference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Name_UserCreated", "Name")]
        public EntityCollection<Name> Names
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Name>("LibertyPowerModel.FK_Name_UserCreated", "Name");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Name>("LibertyPowerModel.FK_Name_UserCreated", "Name", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Name_UserModified", "Name")]
        public EntityCollection<Name> Names1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Name>("LibertyPowerModel.FK_Name_UserModified", "Name");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Name>("LibertyPowerModel.FK_Name_UserModified", "Name", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelSupport_ManagerUser", "SalesChannelSupport")]
        public EntityCollection<SalesChannelSupport> SalesChannelSupports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesChannelSupport>("LibertyPowerModel.FK_SalesChannelSupport_ManagerUser", "SalesChannelSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesChannelSupport>("LibertyPowerModel.FK_SalesChannelSupport_ManagerUser", "SalesChannelSupport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelSupport_SupportUser", "SalesChannelSupport")]
        public EntityCollection<SalesChannelSupport> SalesChannelSupports1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesChannelSupport>("LibertyPowerModel.FK_SalesChannelSupport_SupportUser", "SalesChannelSupport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesChannelSupport>("LibertyPowerModel.FK_SalesChannelSupport_SupportUser", "SalesChannelSupport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_SalesChannelUser_User", "SalesChannelUser")]
        public EntityCollection<SalesChannelUser> SalesChannelUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesChannelUser>("LibertyPowerModel.FK_SalesChannelUser_User", "SalesChannelUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesChannelUser>("LibertyPowerModel.FK_SalesChannelUser_User", "SalesChannelUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserID", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("LibertyPowerModel.FK__UserID", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("LibertyPowerModel.FK__UserID", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserRole__UserID__2EC5E7B8", "UserRole")]
        public EntityCollection<UserRole> UserRoles1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("LibertyPowerModel.FK__UserRole__UserID__2EC5E7B8", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("LibertyPowerModel.FK__UserRole__UserID__2EC5E7B8", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_MarketProducts_User", "MarketProduct")]
        public EntityCollection<MarketProduct> MarketProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarketProduct>("LibertyPowerModel.FK_MarketProducts_User", "MarketProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarketProduct>("LibertyPowerModel.FK_MarketProducts_User", "MarketProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_DoNotKnock_User_EditedBy", "DoNotKnock")]
        public EntityCollection<DoNotKnock> DoNotKnocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DoNotKnock>("LibertyPowerModel.FK_DoNotKnock_User_EditedBy", "DoNotKnock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DoNotKnock>("LibertyPowerModel.FK_DoNotKnock_User_EditedBy", "DoNotKnock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_User_DoNotKnockHistory", "DoNotKnockHistory")]
        public EntityCollection<DoNotKnockHistory> DoNotKnockHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DoNotKnockHistory>("LibertyPowerModel.FK_User_DoNotKnockHistory", "DoNotKnockHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DoNotKnockHistory>("LibertyPowerModel.FK_User_DoNotKnockHistory", "DoNotKnockHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userRoleID">Initial value of the UserRoleID property.</param>
        public static UserRole CreateUserRole(global::System.Int32 userRoleID)
        {
            UserRole userRole = new UserRole();
            userRole.UserRoleID = userRoleID;
            return userRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                if (_UserRoleID != value)
                {
                    OnUserRoleIDChanging(value);
                    ReportPropertyChanging("UserRoleID");
                    _UserRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleID");
                    OnUserRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Int32 value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserRole", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("LibertyPowerModel.FK__UserRole", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("LibertyPowerModel.FK__UserRole", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("LibertyPowerModel.FK__UserRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("LibertyPowerModel.FK__UserRole", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserRole__RoleID__2FBA0BF1", "Role")]
        public Role Role1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("LibertyPowerModel.FK__UserRole__RoleID__2FBA0BF1", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("LibertyPowerModel.FK__UserRole__RoleID__2FBA0BF1", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> Role1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("LibertyPowerModel.FK__UserRole__RoleID__2FBA0BF1", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("LibertyPowerModel.FK__UserRole__RoleID__2FBA0BF1", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK__UserID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK__UserID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK__UserID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK__UserID", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK__UserRole__UserID__2EC5E7B8", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK__UserRole__UserID__2EC5E7B8", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK__UserRole__UserID__2EC5E7B8", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibertyPowerModel.FK__UserRole__UserID__2EC5E7B8", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibertyPowerModel.FK__UserRole__UserID__2EC5E7B8", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Utility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Utility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Utility object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="utilityCode">Initial value of the UtilityCode property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        /// <param name="marketID">Initial value of the MarketID property.</param>
        /// <param name="rateCodeFormat">Initial value of the RateCodeFormat property.</param>
        /// <param name="rateCodeFields">Initial value of the RateCodeFields property.</param>
        /// <param name="legacyName">Initial value of the LegacyName property.</param>
        public static Utility CreateUtility(global::System.Int32 id, global::System.String utilityCode, global::System.String fullName, global::System.String shortName, global::System.Int32 marketID, global::System.String rateCodeFormat, global::System.String rateCodeFields, global::System.String legacyName)
        {
            Utility utility = new Utility();
            utility.ID = id;
            utility.UtilityCode = utilityCode;
            utility.FullName = fullName;
            utility.ShortName = shortName;
            utility.MarketID = marketID;
            utility.RateCodeFormat = rateCodeFormat;
            utility.RateCodeFields = rateCodeFields;
            utility.LegacyName = legacyName;
            return utility;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UtilityCode
        {
            get
            {
                return _UtilityCode;
            }
            set
            {
                OnUtilityCodeChanging(value);
                ReportPropertyChanging("UtilityCode");
                _UtilityCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UtilityCode");
                OnUtilityCodeChanged();
            }
        }
        private global::System.String _UtilityCode;
        partial void OnUtilityCodeChanging(global::System.String value);
        partial void OnUtilityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private global::System.Int32 _MarketID;
        partial void OnMarketIDChanging(global::System.Int32 value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DunsNumber
        {
            get
            {
                return _DunsNumber;
            }
            set
            {
                OnDunsNumberChanging(value);
                ReportPropertyChanging("DunsNumber");
                _DunsNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DunsNumber");
                OnDunsNumberChanged();
            }
        }
        private global::System.String _DunsNumber;
        partial void OnDunsNumberChanging(global::System.String value);
        partial void OnDunsNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntityId
        {
            get
            {
                return _EntityId;
            }
            set
            {
                OnEntityIdChanging(value);
                ReportPropertyChanging("EntityId");
                _EntityId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntityId");
                OnEntityIdChanged();
            }
        }
        private global::System.String _EntityId;
        partial void OnEntityIdChanging(global::System.String value);
        partial void OnEntityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EnrollmentLeadDays
        {
            get
            {
                return _EnrollmentLeadDays;
            }
            set
            {
                OnEnrollmentLeadDaysChanging(value);
                ReportPropertyChanging("EnrollmentLeadDays");
                _EnrollmentLeadDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrollmentLeadDays");
                OnEnrollmentLeadDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _EnrollmentLeadDays;
        partial void OnEnrollmentLeadDaysChanging(Nullable<global::System.Int32> value);
        partial void OnEnrollmentLeadDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillingType
        {
            get
            {
                return _BillingType;
            }
            set
            {
                OnBillingTypeChanging(value);
                ReportPropertyChanging("BillingType");
                _BillingType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillingType");
                OnBillingTypeChanged();
            }
        }
        private global::System.String _BillingType;
        partial void OnBillingTypeChanging(global::System.String value);
        partial void OnBillingTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountLength
        {
            get
            {
                return _AccountLength;
            }
            set
            {
                OnAccountLengthChanging(value);
                ReportPropertyChanging("AccountLength");
                _AccountLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountLength");
                OnAccountLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountLength;
        partial void OnAccountLengthChanging(Nullable<global::System.Int32> value);
        partial void OnAccountLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNumberPrefix
        {
            get
            {
                return _AccountNumberPrefix;
            }
            set
            {
                OnAccountNumberPrefixChanging(value);
                ReportPropertyChanging("AccountNumberPrefix");
                _AccountNumberPrefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountNumberPrefix");
                OnAccountNumberPrefixChanged();
            }
        }
        private global::System.String _AccountNumberPrefix;
        partial void OnAccountNumberPrefixChanging(global::System.String value);
        partial void OnAccountNumberPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeadScreenProcess
        {
            get
            {
                return _LeadScreenProcess;
            }
            set
            {
                OnLeadScreenProcessChanging(value);
                ReportPropertyChanging("LeadScreenProcess");
                _LeadScreenProcess = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LeadScreenProcess");
                OnLeadScreenProcessChanged();
            }
        }
        private global::System.String _LeadScreenProcess;
        partial void OnLeadScreenProcessChanging(global::System.String value);
        partial void OnLeadScreenProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DealScreenProcess
        {
            get
            {
                return _DealScreenProcess;
            }
            set
            {
                OnDealScreenProcessChanging(value);
                ReportPropertyChanging("DealScreenProcess");
                _DealScreenProcess = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DealScreenProcess");
                OnDealScreenProcessChanged();
            }
        }
        private global::System.String _DealScreenProcess;
        partial void OnDealScreenProcessChanging(global::System.String value);
        partial void OnDealScreenProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PorOption
        {
            get
            {
                return _PorOption;
            }
            set
            {
                OnPorOptionChanging(value);
                ReportPropertyChanging("PorOption");
                _PorOption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PorOption");
                OnPorOptionChanged();
            }
        }
        private global::System.String _PorOption;
        partial void OnPorOptionChanging(global::System.String value);
        partial void OnPorOptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field01Label
        {
            get
            {
                return _Field01Label;
            }
            set
            {
                OnField01LabelChanging(value);
                ReportPropertyChanging("Field01Label");
                _Field01Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field01Label");
                OnField01LabelChanged();
            }
        }
        private global::System.String _Field01Label;
        partial void OnField01LabelChanging(global::System.String value);
        partial void OnField01LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field01Type
        {
            get
            {
                return _Field01Type;
            }
            set
            {
                OnField01TypeChanging(value);
                ReportPropertyChanging("Field01Type");
                _Field01Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field01Type");
                OnField01TypeChanged();
            }
        }
        private global::System.String _Field01Type;
        partial void OnField01TypeChanging(global::System.String value);
        partial void OnField01TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field02Label
        {
            get
            {
                return _Field02Label;
            }
            set
            {
                OnField02LabelChanging(value);
                ReportPropertyChanging("Field02Label");
                _Field02Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field02Label");
                OnField02LabelChanged();
            }
        }
        private global::System.String _Field02Label;
        partial void OnField02LabelChanging(global::System.String value);
        partial void OnField02LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field02Type
        {
            get
            {
                return _Field02Type;
            }
            set
            {
                OnField02TypeChanging(value);
                ReportPropertyChanging("Field02Type");
                _Field02Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field02Type");
                OnField02TypeChanged();
            }
        }
        private global::System.String _Field02Type;
        partial void OnField02TypeChanging(global::System.String value);
        partial void OnField02TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field03Label
        {
            get
            {
                return _Field03Label;
            }
            set
            {
                OnField03LabelChanging(value);
                ReportPropertyChanging("Field03Label");
                _Field03Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field03Label");
                OnField03LabelChanged();
            }
        }
        private global::System.String _Field03Label;
        partial void OnField03LabelChanging(global::System.String value);
        partial void OnField03LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field03Type
        {
            get
            {
                return _Field03Type;
            }
            set
            {
                OnField03TypeChanging(value);
                ReportPropertyChanging("Field03Type");
                _Field03Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field03Type");
                OnField03TypeChanged();
            }
        }
        private global::System.String _Field03Type;
        partial void OnField03TypeChanging(global::System.String value);
        partial void OnField03TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field04Label
        {
            get
            {
                return _Field04Label;
            }
            set
            {
                OnField04LabelChanging(value);
                ReportPropertyChanging("Field04Label");
                _Field04Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field04Label");
                OnField04LabelChanged();
            }
        }
        private global::System.String _Field04Label;
        partial void OnField04LabelChanging(global::System.String value);
        partial void OnField04LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field04Type
        {
            get
            {
                return _Field04Type;
            }
            set
            {
                OnField04TypeChanging(value);
                ReportPropertyChanging("Field04Type");
                _Field04Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field04Type");
                OnField04TypeChanged();
            }
        }
        private global::System.String _Field04Type;
        partial void OnField04TypeChanging(global::System.String value);
        partial void OnField04TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field05Label
        {
            get
            {
                return _Field05Label;
            }
            set
            {
                OnField05LabelChanging(value);
                ReportPropertyChanging("Field05Label");
                _Field05Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field05Label");
                OnField05LabelChanged();
            }
        }
        private global::System.String _Field05Label;
        partial void OnField05LabelChanging(global::System.String value);
        partial void OnField05LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field05Type
        {
            get
            {
                return _Field05Type;
            }
            set
            {
                OnField05TypeChanging(value);
                ReportPropertyChanging("Field05Type");
                _Field05Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field05Type");
                OnField05TypeChanged();
            }
        }
        private global::System.String _Field05Type;
        partial void OnField05TypeChanging(global::System.String value);
        partial void OnField05TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field06Label
        {
            get
            {
                return _Field06Label;
            }
            set
            {
                OnField06LabelChanging(value);
                ReportPropertyChanging("Field06Label");
                _Field06Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field06Label");
                OnField06LabelChanged();
            }
        }
        private global::System.String _Field06Label;
        partial void OnField06LabelChanging(global::System.String value);
        partial void OnField06LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field06Type
        {
            get
            {
                return _Field06Type;
            }
            set
            {
                OnField06TypeChanging(value);
                ReportPropertyChanging("Field06Type");
                _Field06Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field06Type");
                OnField06TypeChanged();
            }
        }
        private global::System.String _Field06Type;
        partial void OnField06TypeChanging(global::System.String value);
        partial void OnField06TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field07Label
        {
            get
            {
                return _Field07Label;
            }
            set
            {
                OnField07LabelChanging(value);
                ReportPropertyChanging("Field07Label");
                _Field07Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field07Label");
                OnField07LabelChanged();
            }
        }
        private global::System.String _Field07Label;
        partial void OnField07LabelChanging(global::System.String value);
        partial void OnField07LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field07Type
        {
            get
            {
                return _Field07Type;
            }
            set
            {
                OnField07TypeChanging(value);
                ReportPropertyChanging("Field07Type");
                _Field07Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field07Type");
                OnField07TypeChanged();
            }
        }
        private global::System.String _Field07Type;
        partial void OnField07TypeChanging(global::System.String value);
        partial void OnField07TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field08Label
        {
            get
            {
                return _Field08Label;
            }
            set
            {
                OnField08LabelChanging(value);
                ReportPropertyChanging("Field08Label");
                _Field08Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field08Label");
                OnField08LabelChanged();
            }
        }
        private global::System.String _Field08Label;
        partial void OnField08LabelChanging(global::System.String value);
        partial void OnField08LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field08Type
        {
            get
            {
                return _Field08Type;
            }
            set
            {
                OnField08TypeChanging(value);
                ReportPropertyChanging("Field08Type");
                _Field08Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field08Type");
                OnField08TypeChanged();
            }
        }
        private global::System.String _Field08Type;
        partial void OnField08TypeChanging(global::System.String value);
        partial void OnField08TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field09Label
        {
            get
            {
                return _Field09Label;
            }
            set
            {
                OnField09LabelChanging(value);
                ReportPropertyChanging("Field09Label");
                _Field09Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field09Label");
                OnField09LabelChanged();
            }
        }
        private global::System.String _Field09Label;
        partial void OnField09LabelChanging(global::System.String value);
        partial void OnField09LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field09Type
        {
            get
            {
                return _Field09Type;
            }
            set
            {
                OnField09TypeChanging(value);
                ReportPropertyChanging("Field09Type");
                _Field09Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field09Type");
                OnField09TypeChanged();
            }
        }
        private global::System.String _Field09Type;
        partial void OnField09TypeChanging(global::System.String value);
        partial void OnField09TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field10Label
        {
            get
            {
                return _Field10Label;
            }
            set
            {
                OnField10LabelChanging(value);
                ReportPropertyChanging("Field10Label");
                _Field10Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field10Label");
                OnField10LabelChanged();
            }
        }
        private global::System.String _Field10Label;
        partial void OnField10LabelChanging(global::System.String value);
        partial void OnField10LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field10Type
        {
            get
            {
                return _Field10Type;
            }
            set
            {
                OnField10TypeChanging(value);
                ReportPropertyChanging("Field10Type");
                _Field10Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field10Type");
                OnField10TypeChanged();
            }
        }
        private global::System.String _Field10Type;
        partial void OnField10TypeChanging(global::System.String value);
        partial void OnField10TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InactiveInd
        {
            get
            {
                return _InactiveInd;
            }
            set
            {
                OnInactiveIndChanging(value);
                ReportPropertyChanging("InactiveInd");
                _InactiveInd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InactiveInd");
                OnInactiveIndChanged();
            }
        }
        private global::System.String _InactiveInd;
        partial void OnInactiveIndChanging(global::System.String value);
        partial void OnInactiveIndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActiveDate
        {
            get
            {
                return _ActiveDate;
            }
            set
            {
                OnActiveDateChanging(value);
                ReportPropertyChanging("ActiveDate");
                _ActiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveDate");
                OnActiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActiveDate;
        partial void OnActiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ChgStamp
        {
            get
            {
                return _ChgStamp;
            }
            set
            {
                OnChgStampChanging(value);
                ReportPropertyChanging("ChgStamp");
                _ChgStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChgStamp");
                OnChgStampChanged();
            }
        }
        private Nullable<global::System.Int16> _ChgStamp;
        partial void OnChgStampChanging(Nullable<global::System.Int16> value);
        partial void OnChgStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MeterNumberRequired
        {
            get
            {
                return _MeterNumberRequired;
            }
            set
            {
                OnMeterNumberRequiredChanging(value);
                ReportPropertyChanging("MeterNumberRequired");
                _MeterNumberRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeterNumberRequired");
                OnMeterNumberRequiredChanged();
            }
        }
        private Nullable<global::System.Int16> _MeterNumberRequired;
        partial void OnMeterNumberRequiredChanging(Nullable<global::System.Int16> value);
        partial void OnMeterNumberRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MeterNumberLength
        {
            get
            {
                return _MeterNumberLength;
            }
            set
            {
                OnMeterNumberLengthChanging(value);
                ReportPropertyChanging("MeterNumberLength");
                _MeterNumberLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeterNumberLength");
                OnMeterNumberLengthChanged();
            }
        }
        private Nullable<global::System.Int16> _MeterNumberLength;
        partial void OnMeterNumberLengthChanging(Nullable<global::System.Int16> value);
        partial void OnMeterNumberLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnnualUsageMin
        {
            get
            {
                return _AnnualUsageMin;
            }
            set
            {
                OnAnnualUsageMinChanging(value);
                ReportPropertyChanging("AnnualUsageMin");
                _AnnualUsageMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnnualUsageMin");
                OnAnnualUsageMinChanged();
            }
        }
        private Nullable<global::System.Int32> _AnnualUsageMin;
        partial void OnAnnualUsageMinChanging(Nullable<global::System.Int32> value);
        partial void OnAnnualUsageMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Qualifier
        {
            get
            {
                return _Qualifier;
            }
            set
            {
                OnQualifierChanging(value);
                ReportPropertyChanging("Qualifier");
                _Qualifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Qualifier");
                OnQualifierChanged();
            }
        }
        private global::System.String _Qualifier;
        partial void OnQualifierChanging(global::System.String value);
        partial void OnQualifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> EdiCapable
        {
            get
            {
                return _EdiCapable;
            }
            set
            {
                OnEdiCapableChanging(value);
                ReportPropertyChanging("EdiCapable");
                _EdiCapable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EdiCapable");
                OnEdiCapableChanged();
            }
        }
        private Nullable<global::System.Int16> _EdiCapable;
        partial void OnEdiCapableChanging(Nullable<global::System.Int16> value);
        partial void OnEdiCapableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WholeSaleMktID
        {
            get
            {
                return _WholeSaleMktID;
            }
            set
            {
                OnWholeSaleMktIDChanging(value);
                ReportPropertyChanging("WholeSaleMktID");
                _WholeSaleMktID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WholeSaleMktID");
                OnWholeSaleMktIDChanged();
            }
        }
        private global::System.String _WholeSaleMktID;
        partial void OnWholeSaleMktIDChanging(global::System.String value);
        partial void OnWholeSaleMktIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> RateCodeRequired
        {
            get
            {
                return _RateCodeRequired;
            }
            set
            {
                OnRateCodeRequiredChanging(value);
                ReportPropertyChanging("RateCodeRequired");
                _RateCodeRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateCodeRequired");
                OnRateCodeRequiredChanged();
            }
        }
        private Nullable<global::System.Byte> _RateCodeRequired;
        partial void OnRateCodeRequiredChanging(Nullable<global::System.Byte> value);
        partial void OnRateCodeRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> HasZones
        {
            get
            {
                return _HasZones;
            }
            set
            {
                OnHasZonesChanging(value);
                ReportPropertyChanging("HasZones");
                _HasZones = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasZones");
                OnHasZonesChanged();
            }
        }
        private Nullable<global::System.Byte> _HasZones;
        partial void OnHasZonesChanging(Nullable<global::System.Byte> value);
        partial void OnHasZonesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZoneDefault
        {
            get
            {
                return _ZoneDefault;
            }
            set
            {
                OnZoneDefaultChanging(value);
                ReportPropertyChanging("ZoneDefault");
                _ZoneDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneDefault");
                OnZoneDefaultChanged();
            }
        }
        private Nullable<global::System.Int32> _ZoneDefault;
        partial void OnZoneDefaultChanging(Nullable<global::System.Int32> value);
        partial void OnZoneDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field11Label
        {
            get
            {
                return _Field11Label;
            }
            set
            {
                OnField11LabelChanging(value);
                ReportPropertyChanging("Field11Label");
                _Field11Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field11Label");
                OnField11LabelChanged();
            }
        }
        private global::System.String _Field11Label;
        partial void OnField11LabelChanging(global::System.String value);
        partial void OnField11LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field11Type
        {
            get
            {
                return _Field11Type;
            }
            set
            {
                OnField11TypeChanging(value);
                ReportPropertyChanging("Field11Type");
                _Field11Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field11Type");
                OnField11TypeChanged();
            }
        }
        private global::System.String _Field11Type;
        partial void OnField11TypeChanging(global::System.String value);
        partial void OnField11TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field12Label
        {
            get
            {
                return _Field12Label;
            }
            set
            {
                OnField12LabelChanging(value);
                ReportPropertyChanging("Field12Label");
                _Field12Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field12Label");
                OnField12LabelChanged();
            }
        }
        private global::System.String _Field12Label;
        partial void OnField12LabelChanging(global::System.String value);
        partial void OnField12LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field12Type
        {
            get
            {
                return _Field12Type;
            }
            set
            {
                OnField12TypeChanging(value);
                ReportPropertyChanging("Field12Type");
                _Field12Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field12Type");
                OnField12TypeChanged();
            }
        }
        private global::System.String _Field12Type;
        partial void OnField12TypeChanging(global::System.String value);
        partial void OnField12TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field13Label
        {
            get
            {
                return _Field13Label;
            }
            set
            {
                OnField13LabelChanging(value);
                ReportPropertyChanging("Field13Label");
                _Field13Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field13Label");
                OnField13LabelChanged();
            }
        }
        private global::System.String _Field13Label;
        partial void OnField13LabelChanging(global::System.String value);
        partial void OnField13LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field13Type
        {
            get
            {
                return _Field13Type;
            }
            set
            {
                OnField13TypeChanging(value);
                ReportPropertyChanging("Field13Type");
                _Field13Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field13Type");
                OnField13TypeChanged();
            }
        }
        private global::System.String _Field13Type;
        partial void OnField13TypeChanging(global::System.String value);
        partial void OnField13TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field14Label
        {
            get
            {
                return _Field14Label;
            }
            set
            {
                OnField14LabelChanging(value);
                ReportPropertyChanging("Field14Label");
                _Field14Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field14Label");
                OnField14LabelChanged();
            }
        }
        private global::System.String _Field14Label;
        partial void OnField14LabelChanging(global::System.String value);
        partial void OnField14LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field14Type
        {
            get
            {
                return _Field14Type;
            }
            set
            {
                OnField14TypeChanging(value);
                ReportPropertyChanging("Field14Type");
                _Field14Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field14Type");
                OnField14TypeChanged();
            }
        }
        private global::System.String _Field14Type;
        partial void OnField14TypeChanging(global::System.String value);
        partial void OnField14TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field15Label
        {
            get
            {
                return _Field15Label;
            }
            set
            {
                OnField15LabelChanging(value);
                ReportPropertyChanging("Field15Label");
                _Field15Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field15Label");
                OnField15LabelChanged();
            }
        }
        private global::System.String _Field15Label;
        partial void OnField15LabelChanging(global::System.String value);
        partial void OnField15LabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field15Type
        {
            get
            {
                return _Field15Type;
            }
            set
            {
                OnField15TypeChanging(value);
                ReportPropertyChanging("Field15Type");
                _Field15Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field15Type");
                OnField15TypeChanged();
            }
        }
        private global::System.String _Field15Type;
        partial void OnField15TypeChanging(global::System.String value);
        partial void OnField15TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RateCodeFormat
        {
            get
            {
                return _RateCodeFormat;
            }
            set
            {
                OnRateCodeFormatChanging(value);
                ReportPropertyChanging("RateCodeFormat");
                _RateCodeFormat = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RateCodeFormat");
                OnRateCodeFormatChanged();
            }
        }
        private global::System.String _RateCodeFormat;
        partial void OnRateCodeFormatChanging(global::System.String value);
        partial void OnRateCodeFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RateCodeFields
        {
            get
            {
                return _RateCodeFields;
            }
            set
            {
                OnRateCodeFieldsChanging(value);
                ReportPropertyChanging("RateCodeFields");
                _RateCodeFields = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RateCodeFields");
                OnRateCodeFieldsChanged();
            }
        }
        private global::System.String _RateCodeFields;
        partial void OnRateCodeFieldsChanging(global::System.String value);
        partial void OnRateCodeFieldsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LegacyName
        {
            get
            {
                return _LegacyName;
            }
            set
            {
                OnLegacyNameChanging(value);
                ReportPropertyChanging("LegacyName");
                _LegacyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LegacyName");
                OnLegacyNameChanged();
            }
        }
        private global::System.String _LegacyName;
        partial void OnLegacyNameChanging(global::System.String value);
        partial void OnLegacyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SSNIsRequired
        {
            get
            {
                return _SSNIsRequired;
            }
            set
            {
                OnSSNIsRequiredChanging(value);
                ReportPropertyChanging("SSNIsRequired");
                _SSNIsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SSNIsRequired");
                OnSSNIsRequiredChanged();
            }
        }
        private Nullable<global::System.Boolean> _SSNIsRequired;
        partial void OnSSNIsRequiredChanging(Nullable<global::System.Boolean> value);
        partial void OnSSNIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PricingModeID
        {
            get
            {
                return _PricingModeID;
            }
            set
            {
                OnPricingModeIDChanging(value);
                ReportPropertyChanging("PricingModeID");
                _PricingModeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PricingModeID");
                OnPricingModeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PricingModeID;
        partial void OnPricingModeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPricingModeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isIDR_EDI_Capable
        {
            get
            {
                return _isIDR_EDI_Capable;
            }
            set
            {
                OnisIDR_EDI_CapableChanging(value);
                ReportPropertyChanging("isIDR_EDI_Capable");
                _isIDR_EDI_Capable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isIDR_EDI_Capable");
                OnisIDR_EDI_CapableChanged();
            }
        }
        private Nullable<global::System.Boolean> _isIDR_EDI_Capable;
        partial void OnisIDR_EDI_CapableChanging(Nullable<global::System.Boolean> value);
        partial void OnisIDR_EDI_CapableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HU_RequestType
        {
            get
            {
                return _HU_RequestType;
            }
            set
            {
                OnHU_RequestTypeChanging(value);
                ReportPropertyChanging("HU_RequestType");
                _HU_RequestType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HU_RequestType");
                OnHU_RequestTypeChanged();
            }
        }
        private global::System.String _HU_RequestType;
        partial void OnHU_RequestTypeChanging(global::System.String value);
        partial void OnHU_RequestTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MultipleMeters
        {
            get
            {
                return _MultipleMeters;
            }
            set
            {
                OnMultipleMetersChanging(value);
                ReportPropertyChanging("MultipleMeters");
                _MultipleMeters = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MultipleMeters");
                OnMultipleMetersChanged();
            }
        }
        private Nullable<global::System.Boolean> _MultipleMeters;
        partial void OnMultipleMetersChanging(Nullable<global::System.Boolean> value);
        partial void OnMultipleMetersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MeterReadOverlap
        {
            get
            {
                return _MeterReadOverlap;
            }
            set
            {
                OnMeterReadOverlapChanging(value);
                ReportPropertyChanging("MeterReadOverlap");
                _MeterReadOverlap = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeterReadOverlap");
                OnMeterReadOverlapChanged();
            }
        }
        private Nullable<global::System.Boolean> _MeterReadOverlap;
        partial void OnMeterReadOverlapChanging(Nullable<global::System.Boolean> value);
        partial void OnMeterReadOverlapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AutoApproval
        {
            get
            {
                return _AutoApproval;
            }
            set
            {
                OnAutoApprovalChanging(value);
                ReportPropertyChanging("AutoApproval");
                _AutoApproval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoApproval");
                OnAutoApprovalChanged();
            }
        }
        private Nullable<global::System.Boolean> _AutoApproval;
        partial void OnAutoApprovalChanging(Nullable<global::System.Boolean> value);
        partial void OnAutoApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeliveryLocationRefID
        {
            get
            {
                return _DeliveryLocationRefID;
            }
            set
            {
                OnDeliveryLocationRefIDChanging(value);
                ReportPropertyChanging("DeliveryLocationRefID");
                _DeliveryLocationRefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryLocationRefID");
                OnDeliveryLocationRefIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DeliveryLocationRefID;
        partial void OnDeliveryLocationRefIDChanging(Nullable<global::System.Int32> value);
        partial void OnDeliveryLocationRefIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefaultProfileRefID
        {
            get
            {
                return _DefaultProfileRefID;
            }
            set
            {
                OnDefaultProfileRefIDChanging(value);
                ReportPropertyChanging("DefaultProfileRefID");
                _DefaultProfileRefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultProfileRefID");
                OnDefaultProfileRefIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DefaultProfileRefID;
        partial void OnDefaultProfileRefIDChanging(Nullable<global::System.Int32> value);
        partial void OnDefaultProfileRefIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Account_Utility", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("LibertyPowerModel.FK_Account_Utility", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("LibertyPowerModel.FK_Account_Utility", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="UtilityBillingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UtilityBillingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UtilityBillingType object.
        /// </summary>
        /// <param name="utilityID">Initial value of the UtilityID property.</param>
        /// <param name="billingTypeID">Initial value of the BillingTypeID property.</param>
        public static UtilityBillingType CreateUtilityBillingType(global::System.Int32 utilityID, global::System.Int32 billingTypeID)
        {
            UtilityBillingType utilityBillingType = new UtilityBillingType();
            utilityBillingType.UtilityID = utilityID;
            utilityBillingType.BillingTypeID = billingTypeID;
            return utilityBillingType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityID
        {
            get
            {
                return _UtilityID;
            }
            set
            {
                if (_UtilityID != value)
                {
                    OnUtilityIDChanging(value);
                    ReportPropertyChanging("UtilityID");
                    _UtilityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UtilityID");
                    OnUtilityIDChanged();
                }
            }
        }
        private global::System.Int32 _UtilityID;
        partial void OnUtilityIDChanging(global::System.Int32 value);
        partial void OnUtilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillingTypeID
        {
            get
            {
                return _BillingTypeID;
            }
            set
            {
                if (_BillingTypeID != value)
                {
                    OnBillingTypeIDChanging(value);
                    ReportPropertyChanging("BillingTypeID");
                    _BillingTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillingTypeID");
                    OnBillingTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _BillingTypeID;
        partial void OnBillingTypeIDChanging(global::System.Int32 value);
        partial void OnBillingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="UtilityPaymentTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UtilityPaymentTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UtilityPaymentTerm object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="marketId">Initial value of the MarketId property.</param>
        /// <param name="utilityId">Initial value of the UtilityId property.</param>
        /// <param name="aRTerms">Initial value of the ARTerms property.</param>
        public static UtilityPaymentTerm CreateUtilityPaymentTerm(global::System.Int32 id, global::System.Int32 marketId, global::System.Int32 utilityId, global::System.Int16 aRTerms)
        {
            UtilityPaymentTerm utilityPaymentTerm = new UtilityPaymentTerm();
            utilityPaymentTerm.ID = id;
            utilityPaymentTerm.MarketId = marketId;
            utilityPaymentTerm.UtilityId = utilityId;
            utilityPaymentTerm.ARTerms = aRTerms;
            return utilityPaymentTerm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketId
        {
            get
            {
                return _MarketId;
            }
            set
            {
                OnMarketIdChanging(value);
                ReportPropertyChanging("MarketId");
                _MarketId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketId");
                OnMarketIdChanged();
            }
        }
        private global::System.Int32 _MarketId;
        partial void OnMarketIdChanging(global::System.Int32 value);
        partial void OnMarketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityId
        {
            get
            {
                return _UtilityId;
            }
            set
            {
                OnUtilityIdChanging(value);
                ReportPropertyChanging("UtilityId");
                _UtilityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UtilityId");
                OnUtilityIdChanged();
            }
        }
        private global::System.Int32 _UtilityId;
        partial void OnUtilityIdChanging(global::System.Int32 value);
        partial void OnUtilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillingType
        {
            get
            {
                return _BillingType;
            }
            set
            {
                OnBillingTypeChanging(value);
                ReportPropertyChanging("BillingType");
                _BillingType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BillingType");
                OnBillingTypeChanged();
            }
        }
        private global::System.String _BillingType;
        partial void OnBillingTypeChanging(global::System.String value);
        partial void OnBillingTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ARTerms
        {
            get
            {
                return _ARTerms;
            }
            set
            {
                OnARTermsChanging(value);
                ReportPropertyChanging("ARTerms");
                _ARTerms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ARTerms");
                OnARTermsChanged();
            }
        }
        private global::System.Int16 _ARTerms;
        partial void OnARTermsChanging(global::System.Int16 value);
        partial void OnARTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BillingTypeID
        {
            get
            {
                return _BillingTypeID;
            }
            set
            {
                OnBillingTypeIDChanging(value);
                ReportPropertyChanging("BillingTypeID");
                _BillingTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillingTypeID");
                OnBillingTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BillingTypeID;
        partial void OnBillingTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnBillingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountTypeID
        {
            get
            {
                return _AccountTypeID;
            }
            set
            {
                OnAccountTypeIDChanging(value);
                ReportPropertyChanging("AccountTypeID");
                _AccountTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTypeID");
                OnAccountTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountTypeID;
        partial void OnAccountTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountTypeIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="vw_service_rate_class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_service_rate_class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_service_rate_class object.
        /// </summary>
        /// <param name="service_rate_class_id">Initial value of the service_rate_class_id property.</param>
        public static vw_service_rate_class Createvw_service_rate_class(global::System.Int32 service_rate_class_id)
        {
            vw_service_rate_class vw_service_rate_class = new vw_service_rate_class();
            vw_service_rate_class.service_rate_class_id = service_rate_class_id;
            return vw_service_rate_class;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 service_rate_class_id
        {
            get
            {
                return _service_rate_class_id;
            }
            set
            {
                if (_service_rate_class_id != value)
                {
                    Onservice_rate_class_idChanging(value);
                    ReportPropertyChanging("service_rate_class_id");
                    _service_rate_class_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("service_rate_class_id");
                    Onservice_rate_class_idChanged();
                }
            }
        }
        private global::System.Int32 _service_rate_class_id;
        partial void Onservice_rate_class_idChanging(global::System.Int32 value);
        partial void Onservice_rate_class_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String service_rate_class
        {
            get
            {
                return _service_rate_class;
            }
            set
            {
                Onservice_rate_classChanging(value);
                ReportPropertyChanging("service_rate_class");
                _service_rate_class = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("service_rate_class");
                Onservice_rate_classChanged();
            }
        }
        private global::System.String _service_rate_class;
        partial void Onservice_rate_classChanging(global::System.String value);
        partial void Onservice_rate_classChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String retail_mkt_id
        {
            get
            {
                return _retail_mkt_id;
            }
            set
            {
                Onretail_mkt_idChanging(value);
                ReportPropertyChanging("retail_mkt_id");
                _retail_mkt_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("retail_mkt_id");
                Onretail_mkt_idChanged();
            }
        }
        private global::System.String _retail_mkt_id;
        partial void Onretail_mkt_idChanging(global::System.String value);
        partial void Onretail_mkt_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String utility_id
        {
            get
            {
                return _utility_id;
            }
            set
            {
                Onutility_idChanging(value);
                ReportPropertyChanging("utility_id");
                _utility_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("utility_id");
                Onutility_idChanged();
            }
        }
        private global::System.String _utility_id;
        partial void Onutility_idChanging(global::System.String value);
        partial void Onutility_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ratecode_file_mapping
        {
            get
            {
                return _ratecode_file_mapping;
            }
            set
            {
                Onratecode_file_mappingChanging(value);
                ReportPropertyChanging("ratecode_file_mapping");
                _ratecode_file_mapping = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ratecode_file_mapping");
                Onratecode_file_mappingChanged();
            }
        }
        private global::System.String _ratecode_file_mapping;
        partial void Onratecode_file_mappingChanging(global::System.String value);
        partial void Onratecode_file_mappingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ista_mapping
        {
            get
            {
                return _ista_mapping;
            }
            set
            {
                Onista_mappingChanging(value);
                ReportPropertyChanging("ista_mapping");
                _ista_mapping = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ista_mapping");
                Onista_mappingChanged();
            }
        }
        private Nullable<global::System.Int32> _ista_mapping;
        partial void Onista_mappingChanging(Nullable<global::System.Int32> value);
        partial void Onista_mappingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="vw_zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_zone object.
        /// </summary>
        /// <param name="zone_id">Initial value of the zone_id property.</param>
        public static vw_zone Createvw_zone(global::System.Int32 zone_id)
        {
            vw_zone vw_zone = new vw_zone();
            vw_zone.zone_id = zone_id;
            return vw_zone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 zone_id
        {
            get
            {
                return _zone_id;
            }
            set
            {
                if (_zone_id != value)
                {
                    Onzone_idChanging(value);
                    ReportPropertyChanging("zone_id");
                    _zone_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("zone_id");
                    Onzone_idChanged();
                }
            }
        }
        private global::System.Int32 _zone_id;
        partial void Onzone_idChanging(global::System.Int32 value);
        partial void Onzone_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String zone
        {
            get
            {
                return _zone;
            }
            set
            {
                OnzoneChanging(value);
                ReportPropertyChanging("zone");
                _zone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("zone");
                OnzoneChanged();
            }
        }
        private global::System.String _zone;
        partial void OnzoneChanging(global::System.String value);
        partial void OnzoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String retail_mkt_id
        {
            get
            {
                return _retail_mkt_id;
            }
            set
            {
                Onretail_mkt_idChanging(value);
                ReportPropertyChanging("retail_mkt_id");
                _retail_mkt_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("retail_mkt_id");
                Onretail_mkt_idChanged();
            }
        }
        private global::System.String _retail_mkt_id;
        partial void Onretail_mkt_idChanging(global::System.String value);
        partial void Onretail_mkt_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String utility_id
        {
            get
            {
                return _utility_id;
            }
            set
            {
                Onutility_idChanging(value);
                ReportPropertyChanging("utility_id");
                _utility_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("utility_id");
                Onutility_idChanged();
            }
        }
        private global::System.String _utility_id;
        partial void Onutility_idChanging(global::System.String value);
        partial void Onutility_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ratecode_file_mapping
        {
            get
            {
                return _ratecode_file_mapping;
            }
            set
            {
                Onratecode_file_mappingChanging(value);
                ReportPropertyChanging("ratecode_file_mapping");
                _ratecode_file_mapping = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ratecode_file_mapping");
                Onratecode_file_mappingChanged();
            }
        }
        private global::System.String _ratecode_file_mapping;
        partial void Onratecode_file_mappingChanging(global::System.String value);
        partial void Onratecode_file_mappingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ista_mapping
        {
            get
            {
                return _ista_mapping;
            }
            set
            {
                Onista_mappingChanging(value);
                ReportPropertyChanging("ista_mapping");
                _ista_mapping = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ista_mapping");
                Onista_mappingChanged();
            }
        }
        private Nullable<global::System.Int32> _ista_mapping;
        partial void Onista_mappingChanging(Nullable<global::System.Int32> value);
        partial void Onista_mappingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Website")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Website : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Website object.
        /// </summary>
        /// <param name="websiteId">Initial value of the WebsiteId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="websiteTypeId">Initial value of the WebsiteTypeId property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Website CreateWebsite(global::System.Int32 websiteId, global::System.String name, global::System.Int32 websiteTypeId, global::System.String uRL, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            Website website = new Website();
            website.WebsiteId = websiteId;
            website.Name = name;
            website.WebsiteTypeId = websiteTypeId;
            website.URL = uRL;
            website.Modified = modified;
            website.ModifiedBy = modifiedBy;
            website.DateCreated = dateCreated;
            website.CreatedBy = createdBy;
            return website;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebsiteId
        {
            get
            {
                return _WebsiteId;
            }
            set
            {
                if (_WebsiteId != value)
                {
                    OnWebsiteIdChanging(value);
                    ReportPropertyChanging("WebsiteId");
                    _WebsiteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WebsiteId");
                    OnWebsiteIdChanged();
                }
            }
        }
        private global::System.Int32 _WebsiteId;
        partial void OnWebsiteIdChanging(global::System.Int32 value);
        partial void OnWebsiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebsiteTypeId
        {
            get
            {
                return _WebsiteTypeId;
            }
            set
            {
                OnWebsiteTypeIdChanging(value);
                ReportPropertyChanging("WebsiteTypeId");
                _WebsiteTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WebsiteTypeId");
                OnWebsiteTypeIdChanged();
            }
        }
        private global::System.Int32 _WebsiteTypeId;
        partial void OnWebsiteTypeIdChanging(global::System.Int32 value);
        partial void OnWebsiteTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Website_WebsiteType", "WebsiteType")]
        public WebsiteType WebsiteType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteType>("LibertyPowerModel.FK_Website_WebsiteType", "WebsiteType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteType>("LibertyPowerModel.FK_Website_WebsiteType", "WebsiteType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebsiteType> WebsiteTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteType>("LibertyPowerModel.FK_Website_WebsiteType", "WebsiteType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebsiteType>("LibertyPowerModel.FK_Website_WebsiteType", "WebsiteType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_Website", "WebsiteMenu")]
        public EntityCollection<WebsiteMenu> WebsiteMenus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_Website", "WebsiteMenu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_Website", "WebsiteMenu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_ExternalWebsite", "WebsiteMenu")]
        public EntityCollection<WebsiteMenu> WebsiteMenus_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_ExternalWebsite", "WebsiteMenu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_ExternalWebsite", "WebsiteMenu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="WebsiteMenu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebsiteMenu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebsiteMenu object.
        /// </summary>
        /// <param name="websiteMenuId">Initial value of the WebsiteMenuId property.</param>
        /// <param name="websiteId">Initial value of the WebsiteId property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static WebsiteMenu CreateWebsiteMenu(global::System.Int32 websiteMenuId, global::System.Int32 websiteId, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy, global::System.Int16 order, global::System.Boolean active)
        {
            WebsiteMenu websiteMenu = new WebsiteMenu();
            websiteMenu.WebsiteMenuId = websiteMenuId;
            websiteMenu.WebsiteId = websiteId;
            websiteMenu.Modified = modified;
            websiteMenu.ModifiedBy = modifiedBy;
            websiteMenu.DateCreated = dateCreated;
            websiteMenu.CreatedBy = createdBy;
            websiteMenu.Order = order;
            websiteMenu.Active = active;
            return websiteMenu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebsiteMenuId
        {
            get
            {
                return _WebsiteMenuId;
            }
            set
            {
                if (_WebsiteMenuId != value)
                {
                    OnWebsiteMenuIdChanging(value);
                    ReportPropertyChanging("WebsiteMenuId");
                    _WebsiteMenuId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WebsiteMenuId");
                    OnWebsiteMenuIdChanged();
                }
            }
        }
        private global::System.Int32 _WebsiteMenuId;
        partial void OnWebsiteMenuIdChanging(global::System.Int32 value);
        partial void OnWebsiteMenuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebsiteId
        {
            get
            {
                return _WebsiteId;
            }
            set
            {
                OnWebsiteIdChanging(value);
                ReportPropertyChanging("WebsiteId");
                _WebsiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WebsiteId");
                OnWebsiteIdChanged();
            }
        }
        private global::System.Int32 _WebsiteId;
        partial void OnWebsiteIdChanging(global::System.Int32 value);
        partial void OnWebsiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentMenuId
        {
            get
            {
                return _ParentMenuId;
            }
            set
            {
                OnParentMenuIdChanging(value);
                ReportPropertyChanging("ParentMenuId");
                _ParentMenuId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentMenuId");
                OnParentMenuIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentMenuId;
        partial void OnParentMenuIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentMenuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int16 _Order;
        partial void OnOrderChanging(global::System.Int16 value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL2
        {
            get
            {
                return _URL2;
            }
            set
            {
                OnURL2Changing(value);
                ReportPropertyChanging("URL2");
                _URL2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL2");
                OnURL2Changed();
            }
        }
        private global::System.String _URL2;
        partial void OnURL2Changing(global::System.String value);
        partial void OnURL2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExternalSiteId
        {
            get
            {
                return _ExternalSiteId;
            }
            set
            {
                OnExternalSiteIdChanging(value);
                ReportPropertyChanging("ExternalSiteId");
                _ExternalSiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExternalSiteId");
                OnExternalSiteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ExternalSiteId;
        partial void OnExternalSiteIdChanging(Nullable<global::System.Int32> value);
        partial void OnExternalSiteIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_Website", "Website")]
        public Website Website
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_Website", "Website").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_Website", "Website").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Website> WebsiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_Website", "Website");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_Website", "Website", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu1")]
        public EntityCollection<WebsiteMenu> SubMenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu")]
        public WebsiteMenu ParentMenuItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebsiteMenu> ParentMenuItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu1", "WebsiteMenu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_ExternalWebsite", "Website")]
        public Website Website_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_ExternalWebsite", "Website").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_ExternalWebsite", "Website").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Website> Website_1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_ExternalWebsite", "Website");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Website>("LibertyPowerModel.FK_WebsiteMenu_ExternalWebsite", "Website", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu1")]
        public WebsiteMenu WebsiteMenu1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebsiteMenu> WebsiteMenu1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu")]
        public WebsiteMenu WebsiteMenu2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebsiteMenu> WebsiteMenu2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebsiteMenu>("LibertyPowerModel.FK_WebsiteMenu_WebsiteMenu", "WebsiteMenu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="WebsiteType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebsiteType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebsiteType object.
        /// </summary>
        /// <param name="websiteTypeId">Initial value of the WebsiteTypeId property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static WebsiteType CreateWebsiteType(global::System.Int32 websiteTypeId, global::System.String type, global::System.DateTime modified, global::System.Int32 modifiedBy, global::System.DateTime dateCreated, global::System.Int32 createdBy)
        {
            WebsiteType websiteType = new WebsiteType();
            websiteType.WebsiteTypeId = websiteTypeId;
            websiteType.Type = type;
            websiteType.Modified = modified;
            websiteType.ModifiedBy = modifiedBy;
            websiteType.DateCreated = dateCreated;
            websiteType.CreatedBy = createdBy;
            return websiteType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebsiteTypeId
        {
            get
            {
                return _WebsiteTypeId;
            }
            set
            {
                if (_WebsiteTypeId != value)
                {
                    OnWebsiteTypeIdChanging(value);
                    ReportPropertyChanging("WebsiteTypeId");
                    _WebsiteTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WebsiteTypeId");
                    OnWebsiteTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _WebsiteTypeId;
        partial void OnWebsiteTypeIdChanging(global::System.Int32 value);
        partial void OnWebsiteTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Int32 _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Int32 value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibertyPowerModel", "FK_Website_WebsiteType", "Website")]
        public EntityCollection<Website> Websites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Website>("LibertyPowerModel.FK_Website_WebsiteType", "Website");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Website>("LibertyPowerModel.FK_Website_WebsiteType", "Website", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="Zip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zip : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zip object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Zip CreateZip(global::System.Int32 id)
        {
            Zip zip = new Zip();
            zip.id = id;
            return zip;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MarketID
        {
            get
            {
                return _MarketID;
            }
            set
            {
                OnMarketIDChanging(value);
                ReportPropertyChanging("MarketID");
                _MarketID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketID");
                OnMarketIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MarketID;
        partial void OnMarketIDChanging(Nullable<global::System.Int32> value);
        partial void OnMarketIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UtilityID
        {
            get
            {
                return _UtilityID;
            }
            set
            {
                OnUtilityIDChanging(value);
                ReportPropertyChanging("UtilityID");
                _UtilityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UtilityID");
                OnUtilityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UtilityID;
        partial void OnUtilityIDChanging(Nullable<global::System.Int32> value);
        partial void OnUtilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ZoneID;
        partial void OnZoneIDChanging(Nullable<global::System.Int32> value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ZipCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZipCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZipCode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="zipCode1">Initial value of the ZipCode1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="stateAbbreviation">Initial value of the StateAbbreviation property.</param>
        public static ZipCode CreateZipCode(global::System.Int32 id, global::System.String zipCode1, global::System.String city, global::System.String stateAbbreviation)
        {
            ZipCode zipCode = new ZipCode();
            zipCode.Id = id;
            zipCode.ZipCode1 = zipCode1;
            zipCode.City = city;
            zipCode.StateAbbreviation = stateAbbreviation;
            return zipCode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode1
        {
            get
            {
                return _ZipCode1;
            }
            set
            {
                if (_ZipCode1 != value)
                {
                    OnZipCode1Changing(value);
                    ReportPropertyChanging("ZipCode1");
                    _ZipCode1 = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ZipCode1");
                    OnZipCode1Changed();
                }
            }
        }
        private global::System.String _ZipCode1;
        partial void OnZipCode1Changing(global::System.String value);
        partial void OnZipCode1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                if (_City != value)
                {
                    OnCityChanging(value);
                    ReportPropertyChanging("City");
                    _City = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("City");
                    OnCityChanged();
                }
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateAbbreviation
        {
            get
            {
                return _StateAbbreviation;
            }
            set
            {
                if (_StateAbbreviation != value)
                {
                    OnStateAbbreviationChanging(value);
                    ReportPropertyChanging("StateAbbreviation");
                    _StateAbbreviation = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StateAbbreviation");
                    OnStateAbbreviationChanged();
                }
            }
        }
        private global::System.String _StateAbbreviation;
        partial void OnStateAbbreviationChanging(global::System.String value);
        partial void OnStateAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UtilityId
        {
            get
            {
                return _UtilityId;
            }
            set
            {
                OnUtilityIdChanging(value);
                ReportPropertyChanging("UtilityId");
                _UtilityId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UtilityId");
                OnUtilityIdChanged();
            }
        }
        private global::System.String _UtilityId;
        partial void OnUtilityIdChanging(global::System.String value);
        partial void OnUtilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UtilityName
        {
            get
            {
                return _UtilityName;
            }
            set
            {
                OnUtilityNameChanging(value);
                ReportPropertyChanging("UtilityName");
                _UtilityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UtilityName");
                OnUtilityNameChanged();
            }
        }
        private global::System.String _UtilityName;
        partial void OnUtilityNameChanging(global::System.String value);
        partial void OnUtilityNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibertyPowerModel", Name="ZoneMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZoneMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZoneMapping object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        /// <param name="utilityID">Initial value of the UtilityID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static ZoneMapping CreateZoneMapping(global::System.Int32 id, global::System.Int32 zoneID, global::System.Int32 utilityID, global::System.DateTime dateCreated)
        {
            ZoneMapping zoneMapping = new ZoneMapping();
            zoneMapping.ID = id;
            zoneMapping.ZoneID = zoneID;
            zoneMapping.UtilityID = utilityID;
            zoneMapping.DateCreated = dateCreated;
            return zoneMapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                if (_ZoneID != value)
                {
                    OnZoneIDChanging(value);
                    ReportPropertyChanging("ZoneID");
                    _ZoneID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneID");
                    OnZoneIDChanged();
                }
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilityID
        {
            get
            {
                return _UtilityID;
            }
            set
            {
                if (_UtilityID != value)
                {
                    OnUtilityIDChanging(value);
                    ReportPropertyChanging("UtilityID");
                    _UtilityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UtilityID");
                    OnUtilityIDChanged();
                }
            }
        }
        private global::System.Int32 _UtilityID;
        partial void OnUtilityIDChanging(global::System.Int32 value);
        partial void OnUtilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                if (_DateCreated != value)
                {
                    OnDateCreatedChanging(value);
                    ReportPropertyChanging("DateCreated");
                    _DateCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateCreated");
                    OnDateCreatedChanged();
                }
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="LibertyPowerModel", Name="GetContractTemplateVersion_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetContractTemplateVersion_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetContractTemplateVersion_Result object.
        /// </summary>
        /// <param name="templateVersionId">Initial value of the TemplateVersionId property.</param>
        /// <param name="templateId">Initial value of the TemplateId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="etfId">Initial value of the EtfId property.</param>
        public static GetContractTemplateVersion_Result CreateGetContractTemplateVersion_Result(global::System.Int32 templateVersionId, global::System.Int32 templateId, global::System.Boolean isActive, global::System.Int32 etfId)
        {
            GetContractTemplateVersion_Result getContractTemplateVersion_Result = new GetContractTemplateVersion_Result();
            getContractTemplateVersion_Result.TemplateVersionId = templateVersionId;
            getContractTemplateVersion_Result.TemplateId = templateId;
            getContractTemplateVersion_Result.IsActive = isActive;
            getContractTemplateVersion_Result.EtfId = etfId;
            return getContractTemplateVersion_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateVersionId
        {
            get
            {
                return _TemplateVersionId;
            }
            set
            {
                OnTemplateVersionIdChanging(value);
                ReportPropertyChanging("TemplateVersionId");
                _TemplateVersionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateVersionId");
                OnTemplateVersionIdChanged();
            }
        }
        private global::System.Int32 _TemplateVersionId;
        partial void OnTemplateVersionIdChanging(global::System.Int32 value);
        partial void OnTemplateVersionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                OnTemplateIdChanging(value);
                ReportPropertyChanging("TemplateId");
                _TemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateId");
                OnTemplateIdChanged();
            }
        }
        private global::System.Int32 _TemplateId;
        partial void OnTemplateIdChanging(global::System.Int32 value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VersionCode
        {
            get
            {
                return _VersionCode;
            }
            set
            {
                OnVersionCodeChanging(value);
                ReportPropertyChanging("VersionCode");
                _VersionCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VersionCode");
                OnVersionCodeChanged();
            }
        }
        private global::System.String _VersionCode;
        partial void OnVersionCodeChanging(global::System.String value);
        partial void OnVersionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EtfId
        {
            get
            {
                return _EtfId;
            }
            set
            {
                OnEtfIdChanging(value);
                ReportPropertyChanging("EtfId");
                _EtfId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EtfId");
                OnEtfIdChanged();
            }
        }
        private global::System.Int32 _EtfId;
        partial void OnEtfIdChanging(global::System.Int32 value);
        partial void OnEtfIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        #endregion

    }

    #endregion

    
}
