@model DataAccessLayerEntityFramework.UtilityCompany
@{
    ViewBag.Title = "Edit Utility Company";
}
@using UserInterfaceValidationExtensions

@using (Html.BeginForm()) 
{
    @Html.ValidationSummary(true)
    <div class="edit_section">
        <div class="edit_header">
            <div class="utility_ico"></div>
            <div class="edit_header_desc">
                <h4> Utility Company</h4>
                <h3>Edit Record</h3>
                @Model.UtilityCode
            </div>
        </div>
        <div class="form_fieldset">
            <fieldset>
                <legend>UtilityCompany</legend>
                @Html.HiddenFor(model => model.Id)
                <div class="textblock">
                    <div class="details-data-section">
                        <div id="Gen"  class="activable">
                            <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                            <div class="edit_section_heading">General</div>
                            <div id="hideContent" class="editdetails">
                                <div class="details-full-section">
                                    <div class="details-left-section">
                                        <div class="editor-label">@Html.LabelFor(model => model.UtilityCode)</div>
                                        <div class="editor-label">@Html.DisplayFor(model => model.UtilityCode)</div>
                                        <div class="clear"></div>
                                        <div class="editor-label">@Html.LabelFor(model => model.FullName)</div>
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.FullName) 
                                            @Html.ValidationMessageFor(model => model.FullName)
                                            @if (Session["IsPostBack"] == "true" && string.IsNullOrWhiteSpace(Model.FullName))
                                            { 
                                                <span class="field-validation-error" data-valmsg-for="FullName" data-valmsg-replace="true">The current Full Name value is invalid.</span>
                                            }
                                        </div>
                                        <div class="clear"></div>
@*                                        <div class="editor-label">@Html.LabelFor(model => model.ParentCompany)</div>
                                        <div class="editor-field">@Html.EditorFor(model => model.ParentCompany) @Html.ValidationMessageFor(model => model.ParentCompany)</div>
                                        <div class="clear"></div>    *@                        
                                        <div class="editor-label">@Html.LabelFor(model => model.IsoId, "ISO")</div>
                                        <div class="editor-field">
                                            @Html.DropDownList("IsoId", String.Empty) 
                                            @Html.ValidationMessageFor(model => model.IsoId)
                                            @if (Session["IsPostBack"] == "true" && (Model.IsoId == null || Model.IsoId == Guid.Empty))
                                            { 
                                                <span class="field-validation-error" data-valmsg-for="IsoId" data-valmsg-replace="true">The current ISO value is invalid.</span>
                                            }
                                        </div>
                                        <div class="clear"></div>
                                        <div class="editor-label">@Html.LabelFor(model => model.MarketId, "Market")</div>
                                        <div class="editor-field">
                                            @Html.DropDownList("MarketId", String.Empty) 
                                            @Html.ValidationMessageFor(model => model.MarketId)
                                            @if (Session["IsPostBack"] == "true" && (Model.MarketId == null && Model.MarketId == Guid.Empty))
                                            { 
                                                <span class="field-validation-error" data-valmsg-for="MarketId" data-valmsg-replace="true">The current Market value is invalid.</span>
                                            }
                                        </div>
                                        <div class="clear"></div>
                                        <div class="editor-label">@Html.LabelFor(model => model.PrimaryDunsNumber, "Primary DUNS Number")</div>
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.PrimaryDunsNumber) 
                                            @Html.ValidationMessageFor(model => model.PrimaryDunsNumber)
                                            @if (Session["IsPostBack"] == "true" && string.IsNullOrWhiteSpace(Model.PrimaryDunsNumber))
                                            { 
                                                <span class="field-validation-error" data-valmsg-for="PrimaryDunsNumber" data-valmsg-replace="true">The current Primary DUNS Number value is invalid.</span>
                                            }
                                        </div>
                                        <div class="clear"></div>
                                        <div class="editor-label">@Html.LabelFor(model => model.LpEntityId, "LP Entity ID")</div>
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.LpEntityId) 
                                            @Html.ValidationMessageFor(model => model.LpEntityId)
                                            @if (Session["IsPostBack"] == "true" && string.IsNullOrWhiteSpace(Model.LpEntityId))
                                            { 
                                                <span class="field-validation-error" data-valmsg-for="LpEntityId" data-valmsg-replace="true">The current LP Entity Id value is invalid.</span>
                                            }
                                        </div>
                                        <div class="clear"></div>
                                        <div class="editor-label">@Html.LabelFor(model => model.UtilityStatusId, "Utility Status")</div>
                                        <div class="editor-field">
                                            @Html.DropDownList("UtilityStatusId", String.Empty) 
                                            @Html.ValidationMessageFor(model => model.UtilityStatusId)
                                            @if (Session["IsPostBack"] == "true" && (Model.UtilityStatusId == null || Model.UtilityStatusId == Guid.Empty))
                                            { 
                                                <span class="field-validation-error" data-valmsg-for="UtilityStatusId" data-valmsg-replace="true">The current Utility Status value is invalid.</span>
                                            }
                                        </div>
                                        <div class="clear"></div>
                                        <div class="editor-label">@Html.LabelFor(model => model.EnrollmentLeadDays, "Enrollment Lead Days")</div>
                                        <div class="editor-field">
                                            @Html.EditorFor(model => model.EnrollmentLeadDays) 
                                            @Html.ValidationMessageFor(model => model.EnrollmentLeadDays)
                                            @if (Session["IsPostBack"] == "true" && (Model.EnrollmentLeadDays == null || Model.EnrollmentLeadDays < 0))
                                            { 
                                                <span class="field-validation-error" data-valmsg-for="EnrollmentLeadDays" data-valmsg-replace="true">The current Enrollment Lead Days value is invalid.</span>
                                            }
                                        </div>
                                        <div class="clear"></div>
                                    </div>
                                        <div class="details-right-section">
                                            <div class="editor-label">@Html.LabelFor(model => model.BillingTypeId, "Billing Type")</div>
                                            <div class="editor-field">
                                                @Html.DropDownList("BillingTypeId", String.Empty) 
                                                @Html.ValidationMessageFor(model => model.BillingTypeId)
                                                @if (Session["IsPostBack"] == "true" && (Model.BillingTypeId == null || Model.BillingTypeId == Guid.Empty))
                                                { 
                                                    <span class="field-validation-error" data-valmsg-for="EnrollmentLeadDays" data-valmsg-replace="true">The current Enrollment Lead Days value is invalid.</span>
                                                }
                                            </div>
                                            <div class="clear"></div>
                                            <div class="editor-label">@Html.LabelFor(model => model.AccountLength, "Account Length")</div>
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.AccountLength) 
                                                @Html.ValidationMessageFor(model => model.AccountLength)
                                                @if (Session["IsPostBack"] == "true" && (Model.AccountLength == null || Model.AccountLength < 0))
                                                { 
                                                    <span class="field-validation-error" data-valmsg-for="AccountLength" data-valmsg-replace="true">The current Account Length value is invalid.</span>
                                                }
                                            </div>
                                            <div class="clear"></div>
                                            <div class="editor-label">@Html.LabelFor(model => model.AccountNumberPrefix, "Account Number Prefix")</div>
                                            <div class="editor-field">@Html.EditorFor(model => model.AccountNumberPrefix) @Html.ValidationMessageFor(model => model.AccountNumberPrefix)</div>
                                            <div class="clear"></div>
                                            <div class="editor-label">@Html.LabelFor(model => model.PorOption, "POR Option")</div>
                                            <div class="editor-field">@Html.EditorFor(model => model.PorOption) @Html.ValidationMessageFor(model => model.PorOption)</div>
                                            <div class="clear"></div>
                                            <div class="editor-label">@Html.LabelFor(model => model.MeterNumberRequired, "Meter Number Required")</div>
                                            <div class="editor-field">@Html.EditorFor(model => model.MeterNumberRequired) @Html.ValidationMessageFor(model => model.MeterNumberRequired)</div>
                                            <div class="clear"></div>
                                            <div class="editor-label">@Html.LabelFor(model => model.MeterNumberLength, "Meter Number Length")</div>
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.MeterNumberLength) 
                                                @Html.ValidationMessageFor(model => model.MeterNumberLength)
                                                @if (Session["IsPostBack"] == "true" && (Model.MeterNumberLength == null || Model.MeterNumberLength < 0))
                                                { 
                                                    <span class="field-validation-error" data-valmsg-for="MeterNumberLength" data-valmsg-replace="true">The current Meter Number Length value is invalid.</span>
                                                }
                                            </div>
                                            <div class="clear"></div>
                                            <div class="editor-label">@Html.LabelFor(model => model.EdiCapabale, "EDI Preferred")</div>
                                            <div class="editor-field">
                                                @Html.EditorFor(model => model.EdiCapabale) 
                                                @Html.ValidationMessageFor(model => model.EdiCapabale)
                                            </div>
                                            <div class="clear"></div>
                                            <div class="editor-label">@Html.LabelFor(model => model.UtilityPhoneNumber, "Utility Phone Number")</div>
                                            <div class="editor-field">@Html.EditorFor(model => model.UtilityPhoneNumber) @Html.ValidationMessageFor(model => model.UtilityPhoneNumber)</div>
                                            <div class="clear"></div>
                                    </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div id="info"  class="activable">
                        <img id="dirImg3" class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent2',this.id)" /> 
                        <div class="edit_section_heading">Audit Information</div>
                        <div id="hideContent2" class="editdetails">
                            <div class="details-full-section">
                               @* <div class="editor-label">@Html.LabelFor(model => model.Inactive)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.Inactive) @Html.ValidationMessageFor(model => model.Inactive)</div>
                                <div class="clear"></div>*@
                                <div class="editor-label">@Html.LabelFor(model => model.CreatedBy)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.CreatedBy) @Html.ValidationMessageFor(model => model.CreatedBy)</div>
                                <div class="clear"></div>
                                <div class="editor-label"> @Html.LabelFor(model => model.CreatedDate)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.CreatedDate)@Html.ValidationMessageFor(model => model.CreatedDate)</div>
                                <div class="clear"></div>
                                <div class="editor-label"> @Html.LabelFor(model => model.LastModifiedBy)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.LastModifiedBy) @Html.ValidationMessageFor(model => model.LastModifiedBy)</div>
                                <div class="clear"></div>
                                <div class="editor-label">@Html.LabelFor(model => model.LastModifiedDate)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.LastModifiedDate) @Html.ValidationMessageFor(model => model.LastModifiedDate)</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
        @if(Session["ErrorMessage"] != null) {<h3>@Session["ErrorMessage"].ToString()</h3>}
@*<script type="text/javascript" src="http://digitalbush.com/wp-content/uploads/2013/01/jquery.maskedinput-1.3.1.min_.js"></script>
<script type="text/javascript">// <![CDATA[
    jQuery(function ($) {
        $.mask.definitions['~'] = '[+-]';
        $('#date').mask('99/99/9999');
        $('#phone').mask('(999) 999-9999');
        $('#UtilityPhoneNumber').mask("1-(999) 999-9999? x99999");
        $("#tin").mask("99-9999999");
        $("#ssn").mask("999-99-9999");
        $("#product").mask("a*-999-a999", { placeholder: " ", completed: function () { alert("You typed the following: " + this.val()); } });
        $("#eyescript").mask("~9.99 ~9.99 999");
    });
    // ]]&gt;</script>*@
<script>
    $(function () {
        $("#tabs").tabs();

    });