@model UtilityManagement.Models.LibertyPowerBillingTypeListModel
@{
    ViewBag.Title = "Edit LP Billing Type";

}
@using UserInterfaceValidationExtensions

<script>
    $("#UtilityCompanyId option").attr("disabled", "true");
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <div class="edit_section">
        <div class="edit_header">
            <div class="billing_ico"></div>
            <div class="edit_header_desc"><h4>LP Billing Types</h4>
            <h3>Edit Record</h3>
            @{string displayName = @Model.UtilityCode + " " + @Model.PorDriverName;}
                @displayName
            </div>
            </div>

        <div class="form_fieldset">
            <fieldset>
                <legend>RequestModeHistoricalUsage</legend>

                @Html.Hidden("Id", @Model.Id)

                 <div class="textblock">
                <div class="details-data-section">
                    <div id="Gen"  class="activable">
                   <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                    <div class="edit_section_heading"  onclick="showDiv('hideContent',this.id)" >General</div>
                    <div id="hideContent" class="editdetails">


                    <div class="details-full-section">

                        <div class="editor-label">
                            @Html.LabelFor(model => model.SelectedUtilityCompanyId, "Utility Company")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.UtilityCode)
                            @Html.ValidationMessageFor(model => model.SelectedUtilityCompanyId)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PorDriverId, "Driver")
                        </div>
                        <div class="editor-field-display" id="divPorDriver">
                                @Model.PorDriverName
                        </div>
                        <div class="clear"></div>
                        <div id="PorRateClass">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.RateClassId, "Rate Class")
                            </div>
                            <div class="editor-field">
                                @Model.RateClassCode
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div id="PorLoadProfile">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.LoadProfileId, "Load Profile")
                            </div>
                            <div class="editor-field">
                                @Model.LoadProfileCode
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div id="PorTariffCode">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.TariffCodeId, "Tariff Code")
                            </div>
                            <div class="editor-field">
                                @Model.TariffCode
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div id="DefaultBillingTypeDiv">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.DefaultBillingTypeId, "Default Billing Type")
                            </div>
                            <div class="editor-field">
                                @Html.DropDownList("DefaultBillingTypeId", (IEnumerable<SelectListItem>)ViewBag.DefaultBillingTypeIds)
                                @Html.ValidationMessageFor(model => model.DefaultBillingTypeId, "The current Default Billing Type field value is invalid.")
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div id="LpUtilityOfferedBillingType">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.UtilityOfferedBillingTypeId, "Utility Offered Billing Type")
                            </div>
                            <div class="editor-field">
                                @Html.DropDownList("UtilityOfferedBillingTypeId", (IEnumerable<SelectListItem>)ViewBag.LpUtilityOfferedBillingTypeId)
                                @Html.ValidationMessageFor(model => model.UtilityOfferedBillingTypeId, "The current Utility Offered Billing Type field value is invalid.")
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div id="LibertyPowerApprovedBillingTypeBoolId">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.LibertyPowerApprovedBillingTypeId, "LP Approved Billing Type")
                            </div>
                            <div class="editor-field">
                                @Html.CheckBoxFor(model => model.LibertyPowerApprovedBillingTypeId)
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div id="Terms">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Terms, "Terms")
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.Terms)
                                @Html.ValidationMessageFor(model => model.Terms, "The current Terms value is invalid.")
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div id="AccountTypeName">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.AccountTypeName, "Account Type")
                            </div>
                            <div class="editor-field">
                                @Model.AccountTypeName
                            </div>
                        </div>
                    </div>
                        </div></div>
                    <div id="info"  class="activable">
                      <img id="dirImg3" class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent2',this.id)" /> 
                    <div class="edit_section_heading" onclick="showDiv('hideContent2',this.id)">Audit Information</div>
                    <div id="hideContent2" class="editdetails">
                    <div class="details-full-section">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Inactive)
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.Inactive)
                            @Html.ValidationMessageFor(model => model.Inactive)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CreatedBy, "Created By")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.CreatedBy)
                            @Html.ValidationMessageFor(model => model.CreatedBy)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CreatedDate, "Created Date")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.CreatedDate)
                            @Html.ValidationMessageFor(model => model.CreatedDate)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastModifiedBy, "Last Modified By")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.LastModifiedBy)
                            @Html.ValidationMessageFor(model => model.LastModifiedBy)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastModifiedDate, "Last Modified Date")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.LastModifiedDate)
                            @Html.ValidationMessageFor(model => model.LastModifiedDate)
                        </div>
                    </div>
                      </div>
                        </div>
                </div>
                     </div>
            </fieldset>
        </div>
    </div>
}

<script type="text/javascript">
    //$(function () {
    //    $("#btnSave").click(function (evt) {
    //        if ($("select#RequestModeTypeId").val() != "-1") {
    //            $.ajax({
    //                type: 'POST',
    //                url: "/RequestModeHistoricalUsage/ValidateIcapAndHistoricalUsageRequestModeTypesForEdit",
    //                datatype: 'json',
    //                async: false,
    //                data: { requestModeIcapId: $("#Id").val(), requestModeTypeId: $("select#RequestModeTypeId").val() },
    //                success: function (data) {
    //                    if (data > 0) {
    //                        alert("WARNING! The Preferred HU Request Mode in Pre-Enrollment is different from the I-Cap Request Mode.  Please verify that they are correctly configured.");
    //                    }
    //                }
    //            });
    //        }
    //    });
    //});

    function PorDriverIdChange() {
        if ($("select#PorDriverId").val() != "-1") {
            var selectedText = $("select#PorDriverId option:selected").text();
            if (selectedText == "Load Profile") {
                $("#PorLoadProfile").show();
                $("#PorRateClass").hide();
                $("#PorTariffCode").hide();
            }
            else if (selectedText == "Tariff Code") {
                $("#PorLoadProfile").hide();
                $("#PorRateClass").hide();
                $("#PorTariffCode").show();
            }
            else if (selectedText == "Rate Class") {
                $("#PorLoadProfile").hide();
                $("#PorRateClass").show();
                $("#PorTariffCode").hide();
            }
            else {
                $("#PorLoadProfile").hide();
                $("#PorRateClass").hide();
                $("#PorTariffCode").hide();
            }
        }
    }

    window.onload = function () {
        var selectedText = '@Model.PorDriverName';// $("select#PorDriverId option:selected").text();
            if (selectedText == "Load Profile") {
                $("#PorLoadProfile").show();
                $("#PorRateClass").hide();
                $("#PorTariffCode").hide();
            }
            else if (selectedText == "Tariff Code") {
                $("#PorLoadProfile").hide();
                $("#PorRateClass").hide();
                $("#PorTariffCode").show();
            }
            else if (selectedText == "Rate Class") {
                $("#PorLoadProfile").hide();
                $("#PorRateClass").show();
                $("#PorTariffCode").hide();
            }
            else {
                $("#PorLoadProfile").hide();
                $("#PorRateClass").hide();
                $("#PorTariffCode").hide();
            }
    }
</script>

@if (Session["ErrorMessage"] != null)
{<h3>@Session["ErrorMessage"].ToString()</h3>}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(function () {
        $("#tabs").tabs();
    });