//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMUC_Tool.UsageServiceWcf {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsageServiceWcf.IUsage")]
    public interface IUsage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetUsageDate", ReplyAction="http://tempuri.org/IUsage/GetUsageDateResponse")]
        System.DateTime GetUsageDate(SmucBusinessLayer.UsageServiceWcf.UsageDateRequest usageDateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetUsageDate", ReplyAction="http://tempuri.org/IUsage/GetUsageDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetUsageDateAsync(SmucBusinessLayer.UsageServiceWcf.UsageDateRequest usageDateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetIdrUsageDate", ReplyAction="http://tempuri.org/IUsage/GetIdrUsageDateResponse")]
        SmucBusinessLayer.UsageServiceWcf.UsageDateResponse GetIdrUsageDate(SmucBusinessLayer.UsageServiceWcf.IdrUsageDateRequest idrUsageDateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetIdrUsageDate", ReplyAction="http://tempuri.org/IUsage/GetIdrUsageDateResponse")]
        System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.UsageDateResponse> GetIdrUsageDateAsync(SmucBusinessLayer.UsageServiceWcf.IdrUsageDateRequest idrUsageDateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetUsageDateV1", ReplyAction="http://tempuri.org/IUsage/GetUsageDateV1Response")]
        SmucBusinessLayer.UsageServiceWcf.UsageDateResponse GetUsageDateV1(SmucBusinessLayer.UsageServiceWcf.UsageDateRequestV1 usageDateRequestV1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetUsageDateV1", ReplyAction="http://tempuri.org/IUsage/GetUsageDateV1Response")]
        System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.UsageDateResponse> GetUsageDateV1Async(SmucBusinessLayer.UsageServiceWcf.UsageDateRequestV1 usageDateRequestV1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/SubmitHistoricalUsageRequest", ReplyAction="http://tempuri.org/IUsage/SubmitHistoricalUsageRequestResponse")]
        string SubmitHistoricalUsageRequest(SmucBusinessLayer.UsageServiceWcf.EdiUsageRequest ediUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/SubmitHistoricalUsageRequest", ReplyAction="http://tempuri.org/IUsage/SubmitHistoricalUsageRequestResponse")]
        System.Threading.Tasks.Task<string> SubmitHistoricalUsageRequestAsync(SmucBusinessLayer.UsageServiceWcf.EdiUsageRequest ediUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/RunScraper", ReplyAction="http://tempuri.org/IUsage/RunScraperResponse")]
        string RunScraper(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/RunScraper", ReplyAction="http://tempuri.org/IUsage/RunScraperResponse")]
        System.Threading.Tasks.Task<string> RunScraperAsync(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/RunScraperWithInstantResponse", ReplyAction="http://tempuri.org/IUsage/RunScraperWithInstantResponseResponse")]
        SmucBusinessLayer.UsageServiceWcf.ScraperUsageResponse RunScraperWithInstantResponse(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/RunScraperWithInstantResponse", ReplyAction="http://tempuri.org/IUsage/RunScraperWithInstantResponseResponse")]
        System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.ScraperUsageResponse> RunScraperWithInstantResponseAsync(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetAnnualUsage", ReplyAction="http://tempuri.org/IUsage/GetAnnualUsageResponse")]
        int GetAnnualUsage(SmucBusinessLayer.UsageServiceWcf.AnnualUsageRequest annualUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetAnnualUsage", ReplyAction="http://tempuri.org/IUsage/GetAnnualUsageResponse")]
        System.Threading.Tasks.Task<int> GetAnnualUsageAsync(SmucBusinessLayer.UsageServiceWcf.AnnualUsageRequest annualUsageRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetAnnualUsageBulk", ReplyAction="http://tempuri.org/IUsage/GetAnnualUsageBulkResponse")]
        SmucBusinessLayer.UsageServiceWcf.AnnualUsageBulkResponse GetAnnualUsageBulk(string messageId, SmucBusinessLayer.UsageServiceWcf.UsageAccountRequest[] usageAccountList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/GetAnnualUsageBulk", ReplyAction="http://tempuri.org/IUsage/GetAnnualUsageBulkResponse")]
        System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.AnnualUsageBulkResponse> GetAnnualUsageBulkAsync(string messageId, SmucBusinessLayer.UsageServiceWcf.UsageAccountRequest[] usageAccountList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/IsIdrEligible", ReplyAction="http://tempuri.org/IUsage/IsIdrEligibleResponse")]
        bool IsIdrEligible(SmucBusinessLayer.UsageServiceWcf.IsIdrEligibleRequest isIdrEligibleRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/IsIdrEligible", ReplyAction="http://tempuri.org/IUsage/IsIdrEligibleResponse")]
        System.Threading.Tasks.Task<bool> IsIdrEligibleAsync(SmucBusinessLayer.UsageServiceWcf.IsIdrEligibleRequest isIdrEligibleRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/IsServiceRunning", ReplyAction="http://tempuri.org/IUsage/IsServiceRunningResponse")]
        bool IsServiceRunning();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/IsServiceRunning", ReplyAction="http://tempuri.org/IUsage/IsServiceRunningResponse")]
        System.Threading.Tasks.Task<bool> IsServiceRunningAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/Version", ReplyAction="http://tempuri.org/IUsage/VersionResponse")]
        string Version();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsage/Version", ReplyAction="http://tempuri.org/IUsage/VersionResponse")]
        System.Threading.Tasks.Task<string> VersionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsageChannel : SMUC_Tool.UsageServiceWcf.IUsage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsageClient : System.ServiceModel.ClientBase<SMUC_Tool.UsageServiceWcf.IUsage>, SMUC_Tool.UsageServiceWcf.IUsage {
        
        public UsageClient() {
        }
        
        public UsageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.DateTime GetUsageDate(SmucBusinessLayer.UsageServiceWcf.UsageDateRequest usageDateRequest) {
            return base.Channel.GetUsageDate(usageDateRequest);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetUsageDateAsync(SmucBusinessLayer.UsageServiceWcf.UsageDateRequest usageDateRequest) {
            return base.Channel.GetUsageDateAsync(usageDateRequest);
        }
        
        public SmucBusinessLayer.UsageServiceWcf.UsageDateResponse GetIdrUsageDate(SmucBusinessLayer.UsageServiceWcf.IdrUsageDateRequest idrUsageDateRequest) {
            return base.Channel.GetIdrUsageDate(idrUsageDateRequest);
        }
        
        public System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.UsageDateResponse> GetIdrUsageDateAsync(SmucBusinessLayer.UsageServiceWcf.IdrUsageDateRequest idrUsageDateRequest) {
            return base.Channel.GetIdrUsageDateAsync(idrUsageDateRequest);
        }
        
        public SmucBusinessLayer.UsageServiceWcf.UsageDateResponse GetUsageDateV1(SmucBusinessLayer.UsageServiceWcf.UsageDateRequestV1 usageDateRequestV1) {
            return base.Channel.GetUsageDateV1(usageDateRequestV1);
        }
        
        public System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.UsageDateResponse> GetUsageDateV1Async(SmucBusinessLayer.UsageServiceWcf.UsageDateRequestV1 usageDateRequestV1) {
            return base.Channel.GetUsageDateV1Async(usageDateRequestV1);
        }
        
        public string SubmitHistoricalUsageRequest(SmucBusinessLayer.UsageServiceWcf.EdiUsageRequest ediUsageRequest) {
            return base.Channel.SubmitHistoricalUsageRequest(ediUsageRequest);
        }
        
        public System.Threading.Tasks.Task<string> SubmitHistoricalUsageRequestAsync(SmucBusinessLayer.UsageServiceWcf.EdiUsageRequest ediUsageRequest) {
            return base.Channel.SubmitHistoricalUsageRequestAsync(ediUsageRequest);
        }
        
        public string RunScraper(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest) {
            return base.Channel.RunScraper(scraperUsageRequest);
        }
        
        public System.Threading.Tasks.Task<string> RunScraperAsync(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest) {
            return base.Channel.RunScraperAsync(scraperUsageRequest);
        }
        
        public SmucBusinessLayer.UsageServiceWcf.ScraperUsageResponse RunScraperWithInstantResponse(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest) {
            return base.Channel.RunScraperWithInstantResponse(scraperUsageRequest);
        }
        
        public System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.ScraperUsageResponse> RunScraperWithInstantResponseAsync(SmucBusinessLayer.UsageServiceWcf.ScraperUsageRequest scraperUsageRequest) {
            return base.Channel.RunScraperWithInstantResponseAsync(scraperUsageRequest);
        }
        
        public int GetAnnualUsage(SmucBusinessLayer.UsageServiceWcf.AnnualUsageRequest annualUsageRequest) {
            return base.Channel.GetAnnualUsage(annualUsageRequest);
        }
        
        public System.Threading.Tasks.Task<int> GetAnnualUsageAsync(SmucBusinessLayer.UsageServiceWcf.AnnualUsageRequest annualUsageRequest) {
            return base.Channel.GetAnnualUsageAsync(annualUsageRequest);
        }
        
        public SmucBusinessLayer.UsageServiceWcf.AnnualUsageBulkResponse GetAnnualUsageBulk(string messageId, SmucBusinessLayer.UsageServiceWcf.UsageAccountRequest[] usageAccountList) {
            return base.Channel.GetAnnualUsageBulk(messageId, usageAccountList);
        }
        
        public System.Threading.Tasks.Task<SmucBusinessLayer.UsageServiceWcf.AnnualUsageBulkResponse> GetAnnualUsageBulkAsync(string messageId, SmucBusinessLayer.UsageServiceWcf.UsageAccountRequest[] usageAccountList) {
            return base.Channel.GetAnnualUsageBulkAsync(messageId, usageAccountList);
        }
        
        public bool IsIdrEligible(SmucBusinessLayer.UsageServiceWcf.IsIdrEligibleRequest isIdrEligibleRequest) {
            return base.Channel.IsIdrEligible(isIdrEligibleRequest);
        }
        
        public System.Threading.Tasks.Task<bool> IsIdrEligibleAsync(SmucBusinessLayer.UsageServiceWcf.IsIdrEligibleRequest isIdrEligibleRequest) {
            return base.Channel.IsIdrEligibleAsync(isIdrEligibleRequest);
        }
        
        public bool IsServiceRunning() {
            return base.Channel.IsServiceRunning();
        }
        
        public System.Threading.Tasks.Task<bool> IsServiceRunningAsync() {
            return base.Channel.IsServiceRunningAsync();
        }
        
        public string Version() {
            return base.Channel.Version();
        }
        
        public System.Threading.Tasks.Task<string> VersionAsync() {
            return base.Channel.VersionAsync();
        }
    }
}
