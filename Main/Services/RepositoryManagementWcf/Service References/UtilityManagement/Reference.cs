//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RepositoryManagementWcf.UtilityManagement {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnrollmentType", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    public enum EnrollmentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreEnrollment = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostEnrollment = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestMode", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RepositoryManagementWcf.UtilityManagement.IdrRequestMode))]
    public partial class RequestMode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepositoryManagementWcf.UtilityManagement.EnrollmentType EnrollmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstructionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLoaRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LibertyPowerSlaResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestModeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UtilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UtilitySlaResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailTemplate {
            get {
                return this.EmailTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailTemplateField, value) != true)) {
                    this.EmailTemplateField = value;
                    this.RaisePropertyChanged("EmailTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepositoryManagementWcf.UtilityManagement.EnrollmentType EnrollmentType {
            get {
                return this.EnrollmentTypeField;
            }
            set {
                if ((this.EnrollmentTypeField.Equals(value) != true)) {
                    this.EnrollmentTypeField = value;
                    this.RaisePropertyChanged("EnrollmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instructions {
            get {
                return this.InstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionsField, value) != true)) {
                    this.InstructionsField = value;
                    this.RaisePropertyChanged("Instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLoaRequired {
            get {
                return this.IsLoaRequiredField;
            }
            set {
                if ((this.IsLoaRequiredField.Equals(value) != true)) {
                    this.IsLoaRequiredField = value;
                    this.RaisePropertyChanged("IsLoaRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LibertyPowerSlaResponse {
            get {
                return this.LibertyPowerSlaResponseField;
            }
            set {
                if ((this.LibertyPowerSlaResponseField.Equals(value) != true)) {
                    this.LibertyPowerSlaResponseField = value;
                    this.RaisePropertyChanged("LibertyPowerSlaResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestModeType {
            get {
                return this.RequestModeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestModeTypeField, value) != true)) {
                    this.RequestModeTypeField = value;
                    this.RaisePropertyChanged("RequestModeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UtilityId {
            get {
                return this.UtilityIdField;
            }
            set {
                if ((this.UtilityIdField.Equals(value) != true)) {
                    this.UtilityIdField = value;
                    this.RaisePropertyChanged("UtilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UtilitySlaResponse {
            get {
                return this.UtilitySlaResponseField;
            }
            set {
                if ((this.UtilitySlaResponseField.Equals(value) != true)) {
                    this.UtilitySlaResponseField = value;
                    this.RaisePropertyChanged("UtilitySlaResponse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdrRequestMode", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class IdrRequestMode : RepositoryManagementWcf.UtilityManagement.RequestMode {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProhibitedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProhibited {
            get {
                return this.IsProhibitedField;
            }
            set {
                if ((this.IsProhibitedField.Equals(value) != true)) {
                    this.IsProhibitedField = value;
                    this.RaisePropertyChanged("IsProhibited");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class UtilityManagementException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllRequestModeEnrollmentTypesResponse", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class GetAllRequestModeEnrollmentTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypeResponseItem[] RequestModeEnrollmentTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypeResponseItem[] RequestModeEnrollmentTypes {
            get {
                return this.RequestModeEnrollmentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestModeEnrollmentTypesField, value) != true)) {
                    this.RequestModeEnrollmentTypesField = value;
                    this.RaisePropertyChanged("RequestModeEnrollmentTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllRequestModeEnrollmentTypeResponseItem", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class GetAllRequestModeEnrollmentTypeResponseItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepositoryManagementWcf.UtilityManagement.EnrollmentType EnrollmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RequestModeEnrollmentTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepositoryManagementWcf.UtilityManagement.EnrollmentType EnrollmentType {
            get {
                return this.EnrollmentTypeField;
            }
            set {
                if ((this.EnrollmentTypeField.Equals(value) != true)) {
                    this.EnrollmentTypeField = value;
                    this.RaisePropertyChanged("EnrollmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RequestModeEnrollmentTypeId {
            get {
                return this.RequestModeEnrollmentTypeIdField;
            }
            set {
                if ((this.RequestModeEnrollmentTypeIdField.Equals(value) != true)) {
                    this.RequestModeEnrollmentTypeIdField = value;
                    this.RaisePropertyChanged("RequestModeEnrollmentTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllUtilitiesResponse", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class GetAllUtilitiesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponseItem[] UtilitiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponseItem[] Utilities {
            get {
                return this.UtilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilitiesField, value) != true)) {
                    this.UtilitiesField = value;
                    this.RaisePropertyChanged("Utilities");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllUtilitiesResponseItem", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class GetAllUtilitiesResponseItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegacyUtilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtilityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UtilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UtilityIdIntField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegacyUtilityId {
            get {
                return this.LegacyUtilityIdField;
            }
            set {
                if ((this.LegacyUtilityIdField.Equals(value) != true)) {
                    this.LegacyUtilityIdField = value;
                    this.RaisePropertyChanged("LegacyUtilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtilityCode {
            get {
                return this.UtilityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilityCodeField, value) != true)) {
                    this.UtilityCodeField = value;
                    this.RaisePropertyChanged("UtilityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UtilityId {
            get {
                return this.UtilityIdField;
            }
            set {
                if ((this.UtilityIdField.Equals(value) != true)) {
                    this.UtilityIdField = value;
                    this.RaisePropertyChanged("UtilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UtilityIdInt {
            get {
                return this.UtilityIdIntField;
            }
            set {
                if ((this.UtilityIdIntField.Equals(value) != true)) {
                    this.UtilityIdIntField = value;
                    this.RaisePropertyChanged("UtilityIdInt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillingType", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    public enum BillingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillReady = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dual = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateReady = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierConsolidated = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNextMeterReadRequest", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class GetNextMeterReadRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReferenceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TripNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UtilityIdIntField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReferenceDate {
            get {
                return this.ReferenceDateField;
            }
            set {
                if ((this.ReferenceDateField.Equals(value) != true)) {
                    this.ReferenceDateField = value;
                    this.RaisePropertyChanged("ReferenceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TripNumber {
            get {
                return this.TripNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TripNumberField, value) != true)) {
                    this.TripNumberField = value;
                    this.RaisePropertyChanged("TripNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UtilityIdInt {
            get {
                return this.UtilityIdIntField;
            }
            set {
                if ((this.UtilityIdIntField.Equals(value) != true)) {
                    this.UtilityIdIntField = value;
                    this.RaisePropertyChanged("UtilityIdInt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNextMeterReadResponse", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class GetNextMeterReadResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NextMeterReadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextMeterRead {
            get {
                return this.NextMeterReadField;
            }
            set {
                if ((this.NextMeterReadField.Equals(value) != true)) {
                    this.NextMeterReadField = value;
                    this.RaisePropertyChanged("NextMeterRead");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HasPurchaseOfReceivableAssuranceResponse", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class HasPurchaseOfReceivableAssuranceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepositoryManagementWcf.UtilityManagement.PurchaseOfReceivable[] HasPurchaseOfReceivableAssuranceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepositoryManagementWcf.UtilityManagement.PurchaseOfReceivable[] HasPurchaseOfReceivableAssuranceList {
            get {
                return this.HasPurchaseOfReceivableAssuranceListField;
            }
            set {
                if ((object.ReferenceEquals(this.HasPurchaseOfReceivableAssuranceListField, value) != true)) {
                    this.HasPurchaseOfReceivableAssuranceListField = value;
                    this.RaisePropertyChanged("HasPurchaseOfReceivableAssuranceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseOfReceivable", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class PurchaseOfReceivable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPorAssuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPorOfferedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPorParticipatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PorDiscountEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PorDiscountExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PorDiscountRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PorFlatFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RepositoryManagementWcf.UtilityManagement.PurchaseOfReceivableRecourse PurchaseOfReceivableRecourseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPorAssurance {
            get {
                return this.IsPorAssuranceField;
            }
            set {
                if ((this.IsPorAssuranceField.Equals(value) != true)) {
                    this.IsPorAssuranceField = value;
                    this.RaisePropertyChanged("IsPorAssurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPorOffered {
            get {
                return this.IsPorOfferedField;
            }
            set {
                if ((this.IsPorOfferedField.Equals(value) != true)) {
                    this.IsPorOfferedField = value;
                    this.RaisePropertyChanged("IsPorOffered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPorParticipated {
            get {
                return this.IsPorParticipatedField;
            }
            set {
                if ((this.IsPorParticipatedField.Equals(value) != true)) {
                    this.IsPorParticipatedField = value;
                    this.RaisePropertyChanged("IsPorParticipated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PorDiscountEffectiveDate {
            get {
                return this.PorDiscountEffectiveDateField;
            }
            set {
                if ((this.PorDiscountEffectiveDateField.Equals(value) != true)) {
                    this.PorDiscountEffectiveDateField = value;
                    this.RaisePropertyChanged("PorDiscountEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PorDiscountExpirationDate {
            get {
                return this.PorDiscountExpirationDateField;
            }
            set {
                if ((this.PorDiscountExpirationDateField.Equals(value) != true)) {
                    this.PorDiscountExpirationDateField = value;
                    this.RaisePropertyChanged("PorDiscountExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PorDiscountRate {
            get {
                return this.PorDiscountRateField;
            }
            set {
                if ((this.PorDiscountRateField.Equals(value) != true)) {
                    this.PorDiscountRateField = value;
                    this.RaisePropertyChanged("PorDiscountRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PorFlatFee {
            get {
                return this.PorFlatFeeField;
            }
            set {
                if ((this.PorFlatFeeField.Equals(value) != true)) {
                    this.PorFlatFeeField = value;
                    this.RaisePropertyChanged("PorFlatFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RepositoryManagementWcf.UtilityManagement.PurchaseOfReceivableRecourse PurchaseOfReceivableRecourse {
            get {
                return this.PurchaseOfReceivableRecourseField;
            }
            set {
                if ((this.PurchaseOfReceivableRecourseField.Equals(value) != true)) {
                    this.PurchaseOfReceivableRecourseField = value;
                    this.RaisePropertyChanged("PurchaseOfReceivableRecourse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseOfReceivableRecourse", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    public enum PurchaseOfReceivableRecourse : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recourse = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonRecourse = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInfoRequiredFields", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
    [System.SerializableAttribute()]
    public partial class AccountInfoRequiredFields : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RequiredFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtilityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UtilityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RequiredFields {
            get {
                return this.RequiredFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequiredFieldsField, value) != true)) {
                    this.RequiredFieldsField = value;
                    this.RaisePropertyChanged("RequiredFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtilityCode {
            get {
                return this.UtilityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilityCodeField, value) != true)) {
                    this.UtilityCodeField = value;
                    this.RaisePropertyChanged("UtilityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UtilityId {
            get {
                return this.UtilityIdField;
            }
            set {
                if ((this.UtilityIdField.Equals(value) != true)) {
                    this.UtilityIdField = value;
                    this.RaisePropertyChanged("UtilityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UtilityManagement.IUtilityManagementService")]
    public interface IUtilityManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAIRequestMode", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAIRequestModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetAIRequestModeUtilityManagementExc" +
            "eptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.RequestMode GetAIRequestMode(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAIRequestMode", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAIRequestModeResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.RequestMode> GetAIRequestModeAsync(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypes", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesUtil" +
            "ityManagementExceptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse GetAllRequestModeEnrollmentTypes(string messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypes", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesResp" +
            "onse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse> GetAllRequestModeEnrollmentTypesAsync(string messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesNoTr" +
            "ace", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesNoTr" +
            "aceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesNoTr" +
            "aceUtilityManagementExceptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse GetAllRequestModeEnrollmentTypesNoTrace();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesNoTr" +
            "ace", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllRequestModeEnrollmentTypesNoTr" +
            "aceResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse> GetAllRequestModeEnrollmentTypesNoTraceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllUtilities", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesUtilityManagementExce" +
            "ptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse GetAllUtilities(string messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllUtilities", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse> GetAllUtilitiesAsync(string messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesNoTrace", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesNoTraceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesNoTraceUtilityManagem" +
            "entExceptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse GetAllUtilitiesNoTrace();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesNoTrace", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllUtilitiesNoTraceResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse> GetAllUtilitiesNoTraceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetBillingTypes", ReplyAction="http://tempuri.org/IUtilityManagementService/GetBillingTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetBillingTypesUtilityManagementExce" +
            "ptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.BillingType[] GetBillingTypes(int utilityId, string rateClass, string loadProfile, string tariffCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetBillingTypes", ReplyAction="http://tempuri.org/IUtilityManagementService/GetBillingTypesResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.BillingType[]> GetBillingTypesAsync(int utilityId, string rateClass, string loadProfile, string tariffCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetData", ReplyAction="http://tempuri.org/IUtilityManagementService/GetDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetDataUtilityManagementExceptionFau" +
            "lt", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetData", ReplyAction="http://tempuri.org/IUtilityManagementService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetHURequestMode", ReplyAction="http://tempuri.org/IUtilityManagementService/GetHURequestModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetHURequestModeUtilityManagementExc" +
            "eptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.RequestMode GetHURequestMode(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetHURequestMode", ReplyAction="http://tempuri.org/IUtilityManagementService/GetHURequestModeResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.RequestMode> GetHURequestModeAsync(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetIDRRequestMode", ReplyAction="http://tempuri.org/IUtilityManagementService/GetIDRRequestModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetIDRRequestModeUtilityManagementEx" +
            "ceptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.IdrRequestMode GetIDRRequestMode(int utilityId, string serviceAccount, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType, string rateClass, string loadProfile, string annualUsage, bool hia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetIDRRequestMode", ReplyAction="http://tempuri.org/IUtilityManagementService/GetIDRRequestModeResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.IdrRequestMode> GetIDRRequestModeAsync(int utilityId, string serviceAccount, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType, string rateClass, string loadProfile, string annualUsage, bool hia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetNextMeterRead", ReplyAction="http://tempuri.org/IUtilityManagementService/GetNextMeterReadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetNextMeterReadUtilityManagementExc" +
            "eptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.GetNextMeterReadResponse GetNextMeterRead(RepositoryManagementWcf.UtilityManagement.GetNextMeterReadRequest getNextMeterReadRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetNextMeterRead", ReplyAction="http://tempuri.org/IUtilityManagementService/GetNextMeterReadResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetNextMeterReadResponse> GetNextMeterReadAsync(RepositoryManagementWcf.UtilityManagement.GetNextMeterReadRequest getNextMeterReadRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetNextMeterReadDateForAccount", ReplyAction="http://tempuri.org/IUtilityManagementService/GetNextMeterReadDateForAccountRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetNextMeterReadDateForAccountUtilit" +
            "yManagementExceptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        System.DateTime GetNextMeterReadDateForAccount(int utilityId, string serviceAccountNumber, string tripNumber, System.DateTime contextdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetNextMeterReadDateForAccount", ReplyAction="http://tempuri.org/IUtilityManagementService/GetNextMeterReadDateForAccountRespon" +
            "se")]
        System.Threading.Tasks.Task<System.DateTime> GetNextMeterReadDateForAccountAsync(int utilityId, string serviceAccountNumber, string tripNumber, System.DateTime contextdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/HasPorAssurance", ReplyAction="http://tempuri.org/IUtilityManagementService/HasPorAssuranceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/HasPorAssuranceUtilityManagementExce" +
            "ptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        bool HasPorAssurance(int utilityId, string rateClass, string loadProfile, string tariffCode, RepositoryManagementWcf.UtilityManagement.BillingType billingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/HasPorAssurance", ReplyAction="http://tempuri.org/IUtilityManagementService/HasPorAssuranceResponse")]
        System.Threading.Tasks.Task<bool> HasPorAssuranceAsync(int utilityId, string rateClass, string loadProfile, string tariffCode, RepositoryManagementWcf.UtilityManagement.BillingType billingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/PorAssurance", ReplyAction="http://tempuri.org/IUtilityManagementService/PorAssuranceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/PorAssuranceUtilityManagementExcepti" +
            "onFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.HasPurchaseOfReceivableAssuranceResponse PorAssurance(int utilityId, string rateClass, string loadProfile, string tariffCode, System.DateTime effectiveDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/PorAssurance", ReplyAction="http://tempuri.org/IUtilityManagementService/PorAssuranceResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.HasPurchaseOfReceivableAssuranceResponse> PorAssuranceAsync(int utilityId, string rateClass, string loadProfile, string tariffCode, System.DateTime effectiveDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllUtilityAccountInfoRequiredFiel" +
            "ds", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllUtilityAccountInfoRequiredFiel" +
            "dsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RepositoryManagementWcf.UtilityManagement.UtilityManagementException), Action="http://tempuri.org/IUtilityManagementService/GetAllUtilityAccountInfoRequiredFiel" +
            "dsUtilityManagementExceptionFault", Name="UtilityManagementException", Namespace="http://schemas.datacontract.org/2004/07/UtilityManagementServiceData")]
        RepositoryManagementWcf.UtilityManagement.AccountInfoRequiredFields[] GetAllUtilityAccountInfoRequiredFields();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUtilityManagementService/GetAllUtilityAccountInfoRequiredFiel" +
            "ds", ReplyAction="http://tempuri.org/IUtilityManagementService/GetAllUtilityAccountInfoRequiredFiel" +
            "dsResponse")]
        System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.AccountInfoRequiredFields[]> GetAllUtilityAccountInfoRequiredFieldsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUtilityManagementServiceChannel : RepositoryManagementWcf.UtilityManagement.IUtilityManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UtilityManagementServiceClient : System.ServiceModel.ClientBase<RepositoryManagementWcf.UtilityManagement.IUtilityManagementService>, RepositoryManagementWcf.UtilityManagement.IUtilityManagementService {
        
        public UtilityManagementServiceClient() {
        }
        
        public UtilityManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UtilityManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilityManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilityManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RepositoryManagementWcf.UtilityManagement.RequestMode GetAIRequestMode(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType) {
            return base.Channel.GetAIRequestMode(utilityId, enrollmentType);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.RequestMode> GetAIRequestModeAsync(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType) {
            return base.Channel.GetAIRequestModeAsync(utilityId, enrollmentType);
        }
        
        public RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse GetAllRequestModeEnrollmentTypes(string messageId) {
            return base.Channel.GetAllRequestModeEnrollmentTypes(messageId);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse> GetAllRequestModeEnrollmentTypesAsync(string messageId) {
            return base.Channel.GetAllRequestModeEnrollmentTypesAsync(messageId);
        }
        
        public RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse GetAllRequestModeEnrollmentTypesNoTrace() {
            return base.Channel.GetAllRequestModeEnrollmentTypesNoTrace();
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllRequestModeEnrollmentTypesResponse> GetAllRequestModeEnrollmentTypesNoTraceAsync() {
            return base.Channel.GetAllRequestModeEnrollmentTypesNoTraceAsync();
        }
        
        public RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse GetAllUtilities(string messageId) {
            return base.Channel.GetAllUtilities(messageId);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse> GetAllUtilitiesAsync(string messageId) {
            return base.Channel.GetAllUtilitiesAsync(messageId);
        }
        
        public RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse GetAllUtilitiesNoTrace() {
            return base.Channel.GetAllUtilitiesNoTrace();
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetAllUtilitiesResponse> GetAllUtilitiesNoTraceAsync() {
            return base.Channel.GetAllUtilitiesNoTraceAsync();
        }
        
        public RepositoryManagementWcf.UtilityManagement.BillingType[] GetBillingTypes(int utilityId, string rateClass, string loadProfile, string tariffCode) {
            return base.Channel.GetBillingTypes(utilityId, rateClass, loadProfile, tariffCode);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.BillingType[]> GetBillingTypesAsync(int utilityId, string rateClass, string loadProfile, string tariffCode) {
            return base.Channel.GetBillingTypesAsync(utilityId, rateClass, loadProfile, tariffCode);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public RepositoryManagementWcf.UtilityManagement.RequestMode GetHURequestMode(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType) {
            return base.Channel.GetHURequestMode(utilityId, enrollmentType);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.RequestMode> GetHURequestModeAsync(int utilityId, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType) {
            return base.Channel.GetHURequestModeAsync(utilityId, enrollmentType);
        }
        
        public RepositoryManagementWcf.UtilityManagement.IdrRequestMode GetIDRRequestMode(int utilityId, string serviceAccount, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType, string rateClass, string loadProfile, string annualUsage, bool hia) {
            return base.Channel.GetIDRRequestMode(utilityId, serviceAccount, enrollmentType, rateClass, loadProfile, annualUsage, hia);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.IdrRequestMode> GetIDRRequestModeAsync(int utilityId, string serviceAccount, RepositoryManagementWcf.UtilityManagement.EnrollmentType enrollmentType, string rateClass, string loadProfile, string annualUsage, bool hia) {
            return base.Channel.GetIDRRequestModeAsync(utilityId, serviceAccount, enrollmentType, rateClass, loadProfile, annualUsage, hia);
        }
        
        public RepositoryManagementWcf.UtilityManagement.GetNextMeterReadResponse GetNextMeterRead(RepositoryManagementWcf.UtilityManagement.GetNextMeterReadRequest getNextMeterReadRequest) {
            return base.Channel.GetNextMeterRead(getNextMeterReadRequest);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.GetNextMeterReadResponse> GetNextMeterReadAsync(RepositoryManagementWcf.UtilityManagement.GetNextMeterReadRequest getNextMeterReadRequest) {
            return base.Channel.GetNextMeterReadAsync(getNextMeterReadRequest);
        }
        
        public System.DateTime GetNextMeterReadDateForAccount(int utilityId, string serviceAccountNumber, string tripNumber, System.DateTime contextdate) {
            return base.Channel.GetNextMeterReadDateForAccount(utilityId, serviceAccountNumber, tripNumber, contextdate);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetNextMeterReadDateForAccountAsync(int utilityId, string serviceAccountNumber, string tripNumber, System.DateTime contextdate) {
            return base.Channel.GetNextMeterReadDateForAccountAsync(utilityId, serviceAccountNumber, tripNumber, contextdate);
        }
        
        public bool HasPorAssurance(int utilityId, string rateClass, string loadProfile, string tariffCode, RepositoryManagementWcf.UtilityManagement.BillingType billingType) {
            return base.Channel.HasPorAssurance(utilityId, rateClass, loadProfile, tariffCode, billingType);
        }
        
        public System.Threading.Tasks.Task<bool> HasPorAssuranceAsync(int utilityId, string rateClass, string loadProfile, string tariffCode, RepositoryManagementWcf.UtilityManagement.BillingType billingType) {
            return base.Channel.HasPorAssuranceAsync(utilityId, rateClass, loadProfile, tariffCode, billingType);
        }
        
        public RepositoryManagementWcf.UtilityManagement.HasPurchaseOfReceivableAssuranceResponse PorAssurance(int utilityId, string rateClass, string loadProfile, string tariffCode, System.DateTime effectiveDate) {
            return base.Channel.PorAssurance(utilityId, rateClass, loadProfile, tariffCode, effectiveDate);
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.HasPurchaseOfReceivableAssuranceResponse> PorAssuranceAsync(int utilityId, string rateClass, string loadProfile, string tariffCode, System.DateTime effectiveDate) {
            return base.Channel.PorAssuranceAsync(utilityId, rateClass, loadProfile, tariffCode, effectiveDate);
        }
        
        public RepositoryManagementWcf.UtilityManagement.AccountInfoRequiredFields[] GetAllUtilityAccountInfoRequiredFields() {
            return base.Channel.GetAllUtilityAccountInfoRequiredFields();
        }
        
        public System.Threading.Tasks.Task<RepositoryManagementWcf.UtilityManagement.AccountInfoRequiredFields[]> GetAllUtilityAccountInfoRequiredFieldsAsync() {
            return base.Channel.GetAllUtilityAccountInfoRequiredFieldsAsync();
        }
    }
}
