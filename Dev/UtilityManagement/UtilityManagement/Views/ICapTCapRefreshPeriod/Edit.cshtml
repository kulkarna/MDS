@model DataAccessLayerEntityFramework.ICapTCapRefresh

@{
    ViewBag.Title = "Edit I-Cap T-Cap Refresh Period";
}
@using UserInterfaceValidationExtensions

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <div class="edit_section">
        <div class="edit_header">
            <div class="icaptcaprefreshperiod_ico"></div>
            <div class="edit_header_desc"><h4> I-Cap T-Cap Refresh Period</h4>
            <h3>Edit Record</h3>
            @Model.UtilityCompany.UtilityCode
            </div>
            </div>
        <div class="form_fieldset">
            <fieldset>
        <legend>Service Account Pattern</legend>

        @Html.HiddenFor(model => model.Id)
            <div class="textblock">
                <div class="details-data-section">
                   <div id="Gen"  class="activable">
                        <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                        <div class="edit_section_heading">General</div>
                        <div id="hideContent" class="editdetails">
                            <div class="details-full-section">
                                <div class="details-left-section">
                                <div class="editor-label">@Html.LabelFor(model => model.UtilityCompanyId, "Utility Code")</div>
                                <div class="editor-label">@Html.DisplayFor(model => model.UtilityCompany.UtilityCode)</div>
                                <div class="clear"></div>
                                <div class="editor-label">@Html.LabelFor(model => model.ICapNextRefresh, "I-Cap Next Refresh")</div>
                                <div class="editor-field">@Html.EditorFor(model => model.ICapNextRefresh)
                                     @Html.ValidationMessageFor(model => model.ICapNextRefresh)
                                @if (Session["IsPostBack"] == "true" && !Model.IsICapNextRefreshValid())
                                { 
                                    <span class="field-validation-error" data-valmsg-for="ICapNextRefresh" data-valmsg-replace="true">ICap Next Refresh Value Is Invalid (MMDD)</span>
                                }
                                </div>
                                <div class="clear"></div>
                                <div class="editor-label">@Html.LabelFor(model => model.ICapEffectiveDate, "I-Cap Effective Date")</div>
                                <div class="editor-field">@Html.EditorFor(model => model.ICapEffectiveDate) 
                                @if (Session["IsPostBack"] == "true" && !Model.IsICapEffectiveDateValid())
                                { 
                                    <span class="field-validation-error" data-valmsg-for="ICapEffectiveDate" data-valmsg-replace="true">ICap Effective Date Value Is Invalid (MMDD)</span>
                                }
                                </div>
                                <div class="clear"></div>
                                </div>
                                <div class="details-right-section">                            
                                <div class="editor-label">@Html.LabelFor(model => model.TCapNextRefresh, "T-Cap Next Refresh")</div>
                                <div class="editor-field">@Html.EditorFor(model => model.TCapNextRefresh) 
                                @if (Session["IsPostBack"] == "true" && !Model.IsTCapNextRefreshValid())
                                { 
                                    <span class="field-validation-error" data-valmsg-for="TCapNextRefresh" data-valmsg-replace="true">TCap Next Refresh Value Is Invalid (MMDD)</span>
                                }
                                </div>
                                <div class="clear"></div>
                                <div class="editor-label">@Html.LabelFor(model => model.TCapEffectiveDate, "T-Cap Effective Date")</div>
                                <div class="editor-field">@Html.EditorFor(model => model.TCapEffectiveDate) 
                                @if (Session["IsPostBack"] == "true" && !Model.IsTCapEffectiveDateValid())
                                { 
                                    <span class="field-validation-error" data-valmsg-for="TCapEffectiveDate" data-valmsg-replace="true">TCap Effective Date Value Is Invalid (MMDD)</span>
                                }
                                </div>
                                <div class="clear"></div>
                            </div></div>
                        </div>
                    </div>
                    <br />
                    <div id="info"  class="activable">
                        <img id="dirImg3" class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent2',this.id)" /> 
                        <div class="edit_section_heading">Audit Information</div>
                        <div id="hideContent2" class="editdetails">
                            <div class="details-full-section">
                                <div class="editor-label">@Html.LabelFor(model => model.Inactive)</div>
                                <div class="editor-field">@Html.EditorFor(model => model.Inactive) @Html.ValidationMessageFor(model => model.Inactive)</div>
                                <div class="clear"></div>
                                <div class="editor-label">@Html.LabelFor(model => model.CreatedBy)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.CreatedBy) @Html.ValidationMessageFor(model => model.CreatedBy)</div>
                                <div class="clear"></div>
                                <div class="editor-label"> @Html.LabelFor(model => model.CreatedDate)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.CreatedDate)@Html.ValidationMessageFor(model => model.CreatedDate)</div>
                                <div class="clear"></div>
                                <div class="editor-label"> @Html.LabelFor(model => model.LastModifiedBy)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.LastModifiedBy) @Html.ValidationMessageFor(model => model.LastModifiedBy)</div>
                                <div class="clear"></div>
                                <div class="editor-label">@Html.LabelFor(model => model.LastModifiedDate)</div>
                                <div class="editor-field">@Html.DisplayFor(model => model.LastModifiedDate) @Html.ValidationMessageFor(model => model.LastModifiedDate)</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
        @if (Session["ErrorMessage"] != null)
        {<h3>@Session["ErrorMessage"].ToString()</h3>}

<script>
    $(function () {
        $("#tabs").tabs();

    });