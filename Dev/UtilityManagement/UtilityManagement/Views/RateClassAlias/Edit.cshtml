@model DataAccessLayerEntityFramework.RateClassAlia
@{
    ViewBag.Title = "Edit Rate Class Alias";
}
@using UserInterfaceValidationExtensions

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    
    <div class="edit_section">
        <div class="edit_header">
            <div class="rate_ico"></div>
            <div class="edit_header_desc"><h4>Rate Class Alias</h4>
            <h3>Edit Record</h3>
            @{string displayName = @Model.RateClass.UtilityCompany.UtilityCode + " " + @Model.RateClass.RateClassCode + " " + @Model.RateClassCodeAlias;}
                @displayName
            </div>
            </div>
        <div class="form_fieldset">
            <fieldset>
                <legend>Rate Class</legend>

                @Html.HiddenFor(model => model.Id)
                
                  <div class="textblock">
                <div class="details-data-section">
                  <div id="Gen"  class="activable">
                   <img id="dirImg2"  class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent',this.id)" /> 
                    <div class="edit_section_heading"  onclick="showDiv('hideContent',this.id)" >General</div>
                    <div id="hideContent" class="editdetails">
                    <div class="details-full-section">

                        <div class="editor-label">
                            @Html.LabelFor(model => model.RateClassId, "Rate Class Id")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.RateClass.RateClassId)
                            @Html.ValidationMessageFor(model => model.RateClass)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.RateClassCodeAlias, "Rate Class Code Alias")
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.RateClassCodeAlias)
                            @Html.ValidationMessageFor(model => model.RateClassCodeAlias, "The current Rate Class Code Alias field value is invalid.")
                            @{
              if (Session["IsPostBack"] == "true")
              {
                  var validationMessage = Model.RateClassCodeAliasValidationMessage();
                  if (!string.IsNullOrWhiteSpace(validationMessage) || !string.IsNullOrWhiteSpace(Utilities.Common.NullSafeString(Session["ErrorMessage"])))
                  { 
                    <span class="field-validation-error" data-valmsg-for="RateClassCode" data-valmsg-replace="true">@validationMessage</span>
                  }
              }
                            }
                        </div>
                    </div>
                    </div>
                   </div>

                    
                      <br />
                    <div id="info"  class="activable">
                    <img id="dirImg3" class="hidediv" src="~/Images/arrow_open.png" onclick="showDiv('hideContent2',this.id)" /> 
                    <div class="edit_section_heading" onclick="showDiv('hideContent2',this.id)">Audit Information</div>
                    <div id="hideContent2" class="editdetails" >
                    <div class="details-full-section">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Inactive)
                        </div>
                        <div class="editor-field-display">
                            @Html.EditorFor(model => model.Inactive)
                            @Html.ValidationMessageFor(model => model.Inactive)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CreatedBy, "Created By")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.CreatedBy)
                            @Html.ValidationMessageFor(model => model.CreatedBy)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CreatedDate, "Created Date")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.CreatedDate)
                            @Html.ValidationMessageFor(model => model.CreatedDate)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastModifiedBy, "Last Modified By")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.LastModifiedBy)
                            @Html.ValidationMessageFor(model => model.LastModifiedBy)
                        </div>
                        <div class="clear"></div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastModifiedDate, "Last Modified Date")
                        </div>
                        <div class="editor-field-display">
                            @Html.DisplayFor(model => model.LastModifiedDate)
                            @Html.ValidationMessageFor(model => model.LastModifiedDate)
                        </div>
                    </div>
                    </div>
                        </div>
                </div>
                </div>
            </fieldset>
        </div>
    </div>
}


@section Scripts {@Scripts.Render("~/bundles/jqueryval")}
<script>
    $(function () {
        $("#tabs").tabs();
    });