//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrdersAPITests.CRMService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessType", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class BusinessType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessTypeID {
            get {
                return this.BusinessTypeIDField;
            }
            set {
                if ((this.BusinessTypeIDField.Equals(value) != true)) {
                    this.BusinessTypeIDField = value;
                    this.RaisePropertyChanged("BusinessTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessActivity", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class BusinessActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessActivityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityField, value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessActivityID {
            get {
                return this.BusinessActivityIDField;
            }
            set {
                if ((this.BusinessActivityIDField.Equals(value) != true)) {
                    this.BusinessActivityIDField = value;
                    this.RaisePropertyChanged("BusinessActivityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sequence {
            get {
                return this.SequenceField;
            }
            set {
                if ((this.SequenceField.Equals(value) != true)) {
                    this.SequenceField = value;
                    this.RaisePropertyChanged("Sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSResult", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasErrors {
            get {
                return this.HasErrorsField;
            }
            set {
                if ((this.HasErrorsField.Equals(value) != true)) {
                    this.HasErrorsField = value;
                    this.RaisePropertyChanged("HasErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSAccountType", Namespace="http://schemas.datacontract.org/2004/07/CRMWebServices")]
    [System.SerializableAttribute()]
    public partial class WSAccountType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountTypeId {
            get {
                return this.AccountTypeIdField;
            }
            set {
                if ((this.AccountTypeIdField.Equals(value) != true)) {
                    this.AccountTypeIdField = value;
                    this.RaisePropertyChanged("AccountTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BusinessActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BusinessTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.CRMService.Contact ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.CRMService.Address CustomerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DbaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DunsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OrdersAPITests.CRMService.CustomerPreference PreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnClearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BusinessActivityId {
            get {
                return this.BusinessActivityIdField;
            }
            set {
                if ((this.BusinessActivityIdField.Equals(value) != true)) {
                    this.BusinessActivityIdField = value;
                    this.RaisePropertyChanged("BusinessActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BusinessTypeId {
            get {
                return this.BusinessTypeIdField;
            }
            set {
                if ((this.BusinessTypeIdField.Equals(value) != true)) {
                    this.BusinessTypeIdField = value;
                    this.RaisePropertyChanged("BusinessTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.CRMService.Contact Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.CRMService.Address CustomerAddress {
            get {
                return this.CustomerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAddressField, value) != true)) {
                    this.CustomerAddressField = value;
                    this.RaisePropertyChanged("CustomerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dba {
            get {
                return this.DbaField;
            }
            set {
                if ((object.ReferenceEquals(this.DbaField, value) != true)) {
                    this.DbaField = value;
                    this.RaisePropertyChanged("Dba");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duns {
            get {
                return this.DunsField;
            }
            set {
                if ((object.ReferenceEquals(this.DunsField, value) != true)) {
                    this.DunsField = value;
                    this.RaisePropertyChanged("Duns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployerId {
            get {
                return this.EmployerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerIdField, value) != true)) {
                    this.EmployerIdField = value;
                    this.RaisePropertyChanged("EmployerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalNumber {
            get {
                return this.ExternalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalNumberField, value) != true)) {
                    this.ExternalNumberField = value;
                    this.RaisePropertyChanged("ExternalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrdersAPITests.CRMService.CustomerPreference Preferences {
            get {
                return this.PreferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferencesField, value) != true)) {
                    this.PreferencesField = value;
                    this.RaisePropertyChanged("Preferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SsnClear {
            get {
                return this.SsnClearField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnClearField, value) != true)) {
                    this.SsnClearField = value;
                    this.RaisePropertyChanged("SsnClear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxId {
            get {
                return this.TaxIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxIdField, value) != true)) {
                    this.TaxIdField = value;
                    this.RaisePropertyChanged("TaxId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suite {
            get {
                return this.SuiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteField, value) != true)) {
                    this.SuiteField = value;
                    this.RaisePropertyChanged("Suite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerPreference", Namespace="http://schemas.datacontract.org/2004/07/LibertyPower.Business.CustomerManagement." +
        "CRMBusinessObjects")]
    [System.SerializableAttribute()]
    public partial class CustomerPreference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerContactPreferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGoGreenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OptOutSpecialOffersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerContactPreferenceId {
            get {
                return this.CustomerContactPreferenceIdField;
            }
            set {
                if ((this.CustomerContactPreferenceIdField.Equals(value) != true)) {
                    this.CustomerContactPreferenceIdField = value;
                    this.RaisePropertyChanged("CustomerContactPreferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGoGreen {
            get {
                return this.IsGoGreenField;
            }
            set {
                if ((this.IsGoGreenField.Equals(value) != true)) {
                    this.IsGoGreenField = value;
                    this.RaisePropertyChanged("IsGoGreen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OptOutSpecialOffers {
            get {
                return this.OptOutSpecialOffersField;
            }
            set {
                if ((this.OptOutSpecialOffersField.Equals(value) != true)) {
                    this.OptOutSpecialOffersField = value;
                    this.RaisePropertyChanged("OptOutSpecialOffers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CRMService.ICRMService")]
    public interface ICRMService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/DoWork", ReplyAction="http://tempuri.org/ICRMService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/DoWork", ReplyAction="http://tempuri.org/ICRMService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/Echo", ReplyAction="http://tempuri.org/ICRMService/EchoResponse")]
        string Echo(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/Echo", ReplyAction="http://tempuri.org/ICRMService/EchoResponse")]
        System.Threading.Tasks.Task<string> EchoAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetBusinessTypes", ReplyAction="http://tempuri.org/ICRMService/GetBusinessTypesResponse")]
        OrdersAPITests.CRMService.BusinessType[] GetBusinessTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetBusinessTypes", ReplyAction="http://tempuri.org/ICRMService/GetBusinessTypesResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CRMService.BusinessType[]> GetBusinessTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetBusinessActivities", ReplyAction="http://tempuri.org/ICRMService/GetBusinessActivitiesResponse")]
        OrdersAPITests.CRMService.BusinessActivity[] GetBusinessActivities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetBusinessActivities", ReplyAction="http://tempuri.org/ICRMService/GetBusinessActivitiesResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CRMService.BusinessActivity[]> GetBusinessActivitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/IsAccountNumberInSystem", ReplyAction="http://tempuri.org/ICRMService/IsAccountNumberInSystemResponse")]
        OrdersAPITests.CRMService.WSResult IsAccountNumberInSystem(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/IsAccountNumberInSystem", ReplyAction="http://tempuri.org/ICRMService/IsAccountNumberInSystemResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSResult> IsAccountNumberInSystemAsync(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/IsAccountNumberValid", ReplyAction="http://tempuri.org/ICRMService/IsAccountNumberValidResponse")]
        OrdersAPITests.CRMService.WSResult IsAccountNumberValid(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/IsAccountNumberValid", ReplyAction="http://tempuri.org/ICRMService/IsAccountNumberValidResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSResult> IsAccountNumberValidAsync(string accountNumber, int utilityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetAccountTypes", ReplyAction="http://tempuri.org/ICRMService/GetAccountTypesResponse")]
        OrdersAPITests.CRMService.WSAccountType[] GetAccountTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetAccountTypes", ReplyAction="http://tempuri.org/ICRMService/GetAccountTypesResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSAccountType[]> GetAccountTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetCustomerById", ReplyAction="http://tempuri.org/ICRMService/GetCustomerByIdResponse")]
        OrdersAPITests.CRMService.Customer GetCustomerById(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetCustomerById", ReplyAction="http://tempuri.org/ICRMService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CRMService.Customer> GetCustomerByIdAsync(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/AddAccountContractVariableRate", ReplyAction="http://tempuri.org/ICRMService/AddAccountContractVariableRateResponse")]
        OrdersAPITests.CRMService.WSResult AddAccountContractVariableRate(int accountID, int contractID, int term, System.DateTime rateStartDate, System.DateTime rateEndDate, double rate, string legacyProductID, int creatingUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/AddAccountContractVariableRate", ReplyAction="http://tempuri.org/ICRMService/AddAccountContractVariableRateResponse")]
        System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSResult> AddAccountContractVariableRateAsync(int accountID, int contractID, int term, System.DateTime rateStartDate, System.DateTime rateEndDate, double rate, string legacyProductID, int creatingUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/InsertAccountComment", ReplyAction="http://tempuri.org/ICRMService/InsertAccountCommentResponse")]
        void InsertAccountComment(string accountID, string processID, string comment, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/InsertAccountComment", ReplyAction="http://tempuri.org/ICRMService/InsertAccountCommentResponse")]
        System.Threading.Tasks.Task InsertAccountCommentAsync(string accountID, string processID, string comment, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetUserIdByUsername", ReplyAction="http://tempuri.org/ICRMService/GetUserIdByUsernameResponse")]
        int GetUserIdByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRMService/GetUserIdByUsername", ReplyAction="http://tempuri.org/ICRMService/GetUserIdByUsernameResponse")]
        System.Threading.Tasks.Task<int> GetUserIdByUsernameAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICRMServiceChannel : OrdersAPITests.CRMService.ICRMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CRMServiceClient : System.ServiceModel.ClientBase<OrdersAPITests.CRMService.ICRMService>, OrdersAPITests.CRMService.ICRMService {
        
        public CRMServiceClient() {
        }
        
        public CRMServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CRMServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string Echo(string input) {
            return base.Channel.Echo(input);
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync(string input) {
            return base.Channel.EchoAsync(input);
        }
        
        public OrdersAPITests.CRMService.BusinessType[] GetBusinessTypes() {
            return base.Channel.GetBusinessTypes();
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CRMService.BusinessType[]> GetBusinessTypesAsync() {
            return base.Channel.GetBusinessTypesAsync();
        }
        
        public OrdersAPITests.CRMService.BusinessActivity[] GetBusinessActivities() {
            return base.Channel.GetBusinessActivities();
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CRMService.BusinessActivity[]> GetBusinessActivitiesAsync() {
            return base.Channel.GetBusinessActivitiesAsync();
        }
        
        public OrdersAPITests.CRMService.WSResult IsAccountNumberInSystem(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberInSystem(accountNumber, utilityId);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSResult> IsAccountNumberInSystemAsync(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberInSystemAsync(accountNumber, utilityId);
        }
        
        public OrdersAPITests.CRMService.WSResult IsAccountNumberValid(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberValid(accountNumber, utilityId);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSResult> IsAccountNumberValidAsync(string accountNumber, int utilityId) {
            return base.Channel.IsAccountNumberValidAsync(accountNumber, utilityId);
        }
        
        public OrdersAPITests.CRMService.WSAccountType[] GetAccountTypes() {
            return base.Channel.GetAccountTypes();
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSAccountType[]> GetAccountTypesAsync() {
            return base.Channel.GetAccountTypesAsync();
        }
        
        public OrdersAPITests.CRMService.Customer GetCustomerById(int customerID) {
            return base.Channel.GetCustomerById(customerID);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CRMService.Customer> GetCustomerByIdAsync(int customerID) {
            return base.Channel.GetCustomerByIdAsync(customerID);
        }
        
        public OrdersAPITests.CRMService.WSResult AddAccountContractVariableRate(int accountID, int contractID, int term, System.DateTime rateStartDate, System.DateTime rateEndDate, double rate, string legacyProductID, int creatingUserID) {
            return base.Channel.AddAccountContractVariableRate(accountID, contractID, term, rateStartDate, rateEndDate, rate, legacyProductID, creatingUserID);
        }
        
        public System.Threading.Tasks.Task<OrdersAPITests.CRMService.WSResult> AddAccountContractVariableRateAsync(int accountID, int contractID, int term, System.DateTime rateStartDate, System.DateTime rateEndDate, double rate, string legacyProductID, int creatingUserID) {
            return base.Channel.AddAccountContractVariableRateAsync(accountID, contractID, term, rateStartDate, rateEndDate, rate, legacyProductID, creatingUserID);
        }
        
        public void InsertAccountComment(string accountID, string processID, string comment, string userName) {
            base.Channel.InsertAccountComment(accountID, processID, comment, userName);
        }
        
        public System.Threading.Tasks.Task InsertAccountCommentAsync(string accountID, string processID, string comment, string userName) {
            return base.Channel.InsertAccountCommentAsync(accountID, processID, comment, userName);
        }
        
        public int GetUserIdByUsername(string username) {
            return base.Channel.GetUserIdByUsername(username);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdByUsernameAsync(string username) {
            return base.Channel.GetUserIdByUsernameAsync(username);
        }
    }
}
